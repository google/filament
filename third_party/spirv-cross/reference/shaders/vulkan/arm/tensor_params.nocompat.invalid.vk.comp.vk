#version 460
#extension GL_ARM_tensors : require
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 1, std430) buffer buff
{
    uint out_data[];
} _38;

layout(set = 0, binding = 0) uniform tensorARM<int, 4u> tu;

void unusedTensorParams(tensorARM<int, 4u> _12, readonly tensorARM<int, 4u> _13)
{
}

uint tensorParam(tensorARM<int, 4u> t)
{
    return tensorSizeARM(t, 0u);
}

uint qualifiedTensorParam(readonly tensorARM<int, 4u> t)
{
    return tensorSizeARM(t, 0u);
}

void main()
{
    unusedTensorParams(tu, tu);
    _38.out_data[0] = tensorParam(tu) + qualifiedTensorParam(tu);
}


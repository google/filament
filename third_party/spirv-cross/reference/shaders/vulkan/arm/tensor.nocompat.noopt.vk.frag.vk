#version 460
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : require
#extension GL_EXT_shader_8bit_storage : require
#extension GL_ARM_tensors : require

layout(set = 0, binding = 0) uniform tensorARM<uint8_t, 3u> tens;

layout(location = 0) out vec4 outColor;

void main()
{
    uint size_d1 = tensorSizeARM(tens, 1u);
    uint size_d2 = tensorSizeARM(tens, 2u);
    uint coord_x = uint(gl_FragCoord.x) % size_d1;
    uint coord_y = uint(gl_FragCoord.y) % size_d2;
    uint8_t tensorValue = uint8_t(0);
    uint8_t _47;
    tensorReadARM(tens, uint[](coord_y, coord_x, 1u), _47);
    tensorValue = _47;
    outColor = vec4(0.0, float(tensorValue), 0.0, 255.0);
}


#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct foo
{
    int a[128];
    uint b;
    float2 c;
};

struct bar
{
    int d;
};

kernel void main0(device foo& buf [[buffer(0)]], constant bar& cb [[buffer(1)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]], uint3 gl_LocalInvocationID [[thread_position_in_threadgroup]])
{
    bool _71 = cb.d != 0;
    device foo* _72 = _71 ? &buf : nullptr;
    device foo* _67 = _72;
    device foo* _45 = _72;
    thread uint3* _79 = _71 ? &gl_GlobalInvocationID : &gl_LocalInvocationID;
    thread uint3* _74 = _79;
    device int* _52;
    device int* _55;
    _52 = &_72->a[0u];
    _55 = &buf.a[0u];
    int _57;
    int _58;
    for (;;)
    {
        _57 = *_52;
        _58 = *_55;
        if (_57 != _58)
        {
            int _66 = (_57 + _58) + int((*_79).x);
            *_52 = _66;
            *_55 = _66;
            _52 = &_52[1u];
            _55 = &_55[1u];
            continue;
        }
        else
        {
            break;
        }
    }
}


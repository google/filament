#version 450
#extension GL_EXT_shader_explicit_arithmetic_types_int16 : require
#extension GL_EXT_shader_16bit_storage : require
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : require
#extension GL_EXT_shader_8bit_storage : require

layout(set = 0, binding = 1, std430) buffer SSBO
{
    int8_t i8[16];
    uint8_t u8[16];
} ssbo;

layout(set = 0, binding = 0, std140) uniform UBO
{
    int8_t i8;
    uint8_t u8;
} ubo;

layout(push_constant, std430) uniform Push
{
    int8_t i8;
    uint8_t u8;
} registers;

layout(location = 0) flat in ivec4 vColor;
layout(location = 0) out ivec4 FragColorInt;
layout(location = 1) out uvec4 FragColorUint;

void main()
{
    int16_t _196 = 10s;
    int _197 = 20;
    i8vec2 _201 = unpack8(10s);
    i8vec2 _198 = _201;
    i8vec4 _199 = unpack8(20);
    _196 = pack16(_201);
    _197 = pack32(_199);
    ssbo.i8[0] = _199.x;
    ssbo.i8[1] = _199.y;
    ssbo.i8[2] = _199.z;
    ssbo.i8[3] = _199.w;
    uint16_t _220 = 10us;
    uint _221 = 20u;
    u8vec2 _225 = unpack8(10us);
    u8vec2 _222 = _225;
    u8vec4 _223 = unpack8(20u);
    _220 = pack16(_225);
    _221 = pack32(_223);
    ssbo.u8[0] = _223.x;
    ssbo.u8[1] = _223.y;
    ssbo.u8[2] = _223.z;
    ssbo.u8[3] = _223.w;
    i8vec4 _246 = i8vec4(vColor);
    i8vec4 _244 = _246;
    i8vec4 _251 = _246 + i8vec4(registers.i8);
    _244 = _251;
    i8vec4 _254 = _251 + i8vec4(-40);
    _244 = _254;
    i8vec4 _256 = _254 + i8vec4(-50);
    _244 = _256;
    i8vec4 _258 = _256 + i8vec4(int8_t(10), int8_t(20), int8_t(30), int8_t(40));
    _244 = _258;
    i8vec4 _263 = _258 + i8vec4(ssbo.i8[4]);
    _244 = _263;
    i8vec4 _268 = _263 + i8vec4(ubo.i8);
    _244 = _268;
    FragColorInt = ivec4(_268);
    u8vec4 _274 = u8vec4(_246);
    u8vec4 _271 = _274;
    u8vec4 _279 = _274 + u8vec4(registers.u8);
    _271 = _279;
    u8vec4 _282 = _279 + u8vec4(216);
    _271 = _282;
    u8vec4 _284 = _282 + u8vec4(206);
    _271 = _284;
    u8vec4 _286 = _284 + u8vec4(uint8_t(10), uint8_t(20), uint8_t(30), uint8_t(40));
    _271 = _286;
    u8vec4 _291 = _286 + u8vec4(ssbo.u8[4]);
    _271 = _291;
    u8vec4 _296 = _291 + u8vec4(ubo.u8);
    _271 = _296;
    FragColorUint = uvec4(_296);
}


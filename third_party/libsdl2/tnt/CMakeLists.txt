# if(TARGET sdl2)
#    return()
# endif()

set(THIRD_PARTY_STAGING_DIR ${CMAKE_BINARY_DIR}/staging${CMAKE_INSTALL_PREFIX})

include(ExternalProject)
ExternalProject_Add(_sdl2
        SOURCE_DIR ${CMAKE_SOURCE_DIR}/third_party/libsdl2
        DOWNLOAD_COMMAND ""
        CMAKE_ARGS
        -D CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        -D CMAKE_C_COMPILER=${CMAKE_C_COMPILER}
        -D CMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
        -D CMAKE_C_FLAGS=${CMAKE_C_FLAGS}
        -D CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
        -D BUILD_SHARED_LIBS=OFF
        -D CMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
        -D CMAKE_VERBOSE_MAKEFILE=${CMAKE_VERBOSE_MAKEFILE}
        -D CMAKE_STAGING_PREFIX=${THIRD_PARTY_STAGING_DIR}
        -D CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
        -D VIDEO_METAL=${FILAMENT_SUPPORTS_METAL}
        -D VIDEO_OPENGL=${FILAMENT_SUPPORTS_OPENGL}
        -D VIDEO_OPENGLES=${FILAMENT_SUPPORTS_WAYLAND}
        -D VIDEO_VULKAN=${FILAMENT_SUPPORTS_VULKAN}
        -D VIDEO_WAYLAND=${FILAMENT_SUPPORTS_WAYLAND}
        -D VIDEO_WAYLAND_QT_TOUCH=${FILAMENT_SUPPORTS_WAYLAND}
        -D VIDEO_X11=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XCURSOR=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XINERAMA=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XINPUT=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XRANDR=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XSCRNSAVER=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XSHAPE=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_X11_XVM=${FILAMENT_SUPPORTS_X11}
        -D VIDEO_DUMMY=FALSE
        -D WAYLAND_LIBDECOR=${FILAMENT_SUPPORTS_WAYLAND}
        -D WAYLAND_SHARED=${FILAMENT_SUPPORTS_WAYLAND}
        -D X11_SHARED=${FILAMENT_SUPPORTS_X11}
        -D XINPUT=$<OR:$<BOOL:FILAMENT_SUPPORTS_X11>,$<BOOL:FILAMENT_SUPPORTS_WAYLAND>>
        -D SDL_AUDIO=FALSE
        -D SDL_JOYSTICK=TRUE
        -D SDL_RENDERER=FALSE
        -D SDL_HAPTIC=FALSE
        -D SDL_POWER=FALSE
        -D SDL_FILE=FALSE
        -D SDL_CPUINFO=FALSE
        -D SDL_FILESYSTEM=FALSE
        -D SDL_SENSOR=FALSE
        -D SDL_LOCALE=FALSE
        -D SDL_SHARED=FALSE
        -D SDL_STATIC_PIC=ON
        )

add_library(sdl2 INTERFACE)

if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
    target_link_libraries(sdl2 INTERFACE -L${THIRD_PARTY_STAGING_DIR}/lib${LIBSUFFIX} -lSDL2d)
else ()
    target_link_libraries(sdl2 INTERFACE -L${THIRD_PARTY_STAGING_DIR}/lib${LIBSUFFIX} -lSDL2)
endif ()

target_include_directories(sdl2 INTERFACE ${THIRD_PARTY_STAGING_DIR}/include/SDL2)
target_compile_options(sdl2 INTERFACE ${SDL_CFLAGS_OTHER})

if (FILAMENT_SUPPORTS_WINDOWS)
    target_compile_options(sdl2 INTERFACE -DSDL_VIDEO_DRIVER_WINDOWS)
elseif (FILAMENT_SUPPORTS_WAYLAND)
    target_compile_options(sdl2 INTERFACE -DSDL_VIDEO_DRIVER_WAYLAND)
elseif (FILAMENT_SUPPORTS_X11)
    target_compile_options(sdl2 INTERFACE -DSDL_VIDEO_DRIVER_X11)
endif ()

include_directories(${THIRD_PARTY_STAGING_DIR}/include)

set_target_properties(
        sdl2
        PROPERTIES
        INTERFACE_FILAMENT_NAME "SDL2 Library"
        INTERFACE_FILAMENT_URL "https://www.libsdl.org"
        INTERFACE_FILAMENT_AUTHOR "SDL authors"
        INTERFACE_FILAMEN_LICENSE ${CMAKE_CURRENT_LIST_DIR}/../LICENSE.txt
)

add_dependencies(sdl2 _sdl2)

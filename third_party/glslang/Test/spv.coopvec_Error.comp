#version 450 core
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_NV_cooperative_vector : enable
#extension GL_EXT_shader_explicit_arithmetic_types : enable
#extension GL_EXT_buffer_reference : enable

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

coopvecNV<float16_t, 1> foo(coopvecNV<float16_t, 1> x) { return x; }
coopvecNV<float16_t, 1> foo2(coopvecNV<float16_t, 1> x) { return -x; }

layout(set = 0, binding = 0) buffer MatrixBuf {
    float16_t matrixData[];
} matrixBuf;

void main()
{

    uint M=1, K=1;
    bool transpose = false;
    int interp = gl_ComponentTypeFloat16NV;
    int matrixlayout = 0;
    coopvecNV<float, 8> v7;
    coopvecNV<float, 8> v8;
    coopVecMatMulNV(v8, v7, interp, matrixBuf.matrixData, 11, interp, M, K, matrixlayout, transpose, 300);

    coopvecNV<float, 5> v;
    v.x;
    v[5] = 0.0;

    coopvecNV<float> v2;
    coopvecNV<float, 0> v3;
    coopvecNV<float, -1> v4;
    coopvecNV<float, float> v5;
}

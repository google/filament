# Copyright 2019 The Dawn & Tint Authors
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("../../scripts/dawn_overrides_with_defaults.gni")

import("${dawn_root}/generator/dawn_generator.gni")
import("${dawn_root}/scripts/dawn_component.gni")

###############################################################################
# Dawn headers
###############################################################################

dawn_json_generator("headers_gen") {
  target = "headers"
  outputs = [
    "include/dawn/dawn_proc_table.h",
    "include/dawn/webgpu.h",
    "include/dawn/wire/client/webgpu.h",
  ]
}

source_set("headers") {
  all_dependent_configs = [ ":public" ]
  public_deps = [ ":headers_gen" ]

  sources = get_target_outputs(":headers_gen")
}

###############################################################################
# Dawn C++ headers
###############################################################################

dawn_json_generator("cpp_headers_gen") {
  target = "cpp_headers"
  outputs = [
    "include/dawn/webgpu_cpp.h",
    "include/dawn/webgpu_cpp_print.h",
    "include/webgpu/webgpu_cpp_chained_struct.h",
    "include/dawn/wire/client/webgpu_cpp.h",
  ]
}

source_set("cpp_headers") {
  public_deps = [
    ":cpp_headers_gen",
    ":headers",
  ]

  sources = get_target_outputs(":cpp_headers_gen")
  sources += [ "${dawn_root}/include/webgpu/webgpu_enum_class_bitmasks.h" ]
}

###############################################################################
# Dawn public include directories
###############################################################################

config("public") {
  include_dirs = [
    "${target_gen_dir}/../../include",
    "${dawn_root}/include",
  ]
}

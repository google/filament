
%dx.types.splitdouble = type { i32, i32 }

define void @main() {
entry:
  %0 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 0, i32 undef)
  %1 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 1, i32 undef)
  %2 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)
  %3 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 1, i32 undef)
  %4 = call double @dx.op.makeDouble.f64(i32 101, i32 %2, i32 %3)
  %5 = call double @dx.op.makeDouble.f64(i32 101, i32 %0, i32 %1)
  %6 = fdiv fast double %4, %5
  %7 = call double @dx.op.makeDouble.f64(i32 101, i32 %2, i32 %3)
  %8 = fadd fast double %7, 0.000000e+00
  %9 = call double @dx.op.binary.f64(i32 36, double %6, double 0x3FFC51EB80000000)
  %10 = call double @dx.op.binary.f64(i32 35, double %8, double %9)
  %11 = call double @dx.op.unary.f64(i32 6, double %10)
  %12 = call %dx.types.splitdouble @dx.op.splitDouble.f64(i32 102, double %11)
  %13 = extractvalue %dx.types.splitdouble %12, 0
  %14 = extractvalue %dx.types.splitdouble %12, 1
  call void @dx.op.storeOutput.i32(i32 5, i32 0, i32 0, i8 0, i32 %13)
  call void @dx.op.storeOutput.i32(i32 5, i32 0, i32 0, i8 1, i32 %14)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.tempRegStore.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @dx.op.tempRegLoad.i32(i32, i32) #2

; Function Attrs: nounwind readnone
declare double @dx.op.makeDouble.f64(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare %dx.types.splitdouble @dx.op.splitDouble.f64(i32, double) #0

; Function Attrs: nounwind readnone
declare double @dx.op.binary.f64(i32, double, double) #0

; Function Attrs: nounwind readnone
declare double @dx.op.unary.f64(i32, double) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!dx.version = !{!0}
!dx.valver = !{!0}
!dx.shaderModel = !{!1}
!dx.entryPoints = !{!2}
!llvm.ident = !{!11}

!0 = !{i32 1, i32 0}
!1 = !{!"ps", i32 6, i32 0}
!2 = !{void ()* @main, !"main", !3, null, !10}
!3 = !{!4, !8, null}
!4 = !{!5, !7}
!5 = !{i32 0, !"AAA", i8 5, i8 0, !6, i8 1, i32 1, i8 2, i32 0, i8 0, null}
!6 = !{i32 0}
!7 = !{i32 1, !"BBB", i8 5, i8 0, !6, i8 1, i32 1, i8 2, i32 0, i8 2, null}
!8 = !{!9}
!9 = !{i32 0, !"SV_Target", i8 5, i8 16, !6, i8 0, i32 1, i8 2, i32 0, i8 0, null}
!10 = !{i32 0, i64 324}
!11 = !{!"dxbc2dxil 1.2"}

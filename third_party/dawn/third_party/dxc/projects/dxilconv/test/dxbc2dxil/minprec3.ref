
define void @main() {
entry:
  %0 = call i16 @dx.op.loadInput.i16(i32 4, i32 0, i32 0, i8 0, i32 undef)
  %1 = add i16 %0, 2
  %2 = sext i16 %1 to i32
  %3 = icmp eq i32 %2, 7
  br i1 %3, label %if0.then, label %if0.else

if0.then:                                         ; preds = %entry
  call void @dx.op.storeOutput.i32(i32 5, i32 0, i32 0, i8 0, i32 4)
  ret void

if0.else:                                         ; preds = %entry
  call void @dx.op.storeOutput.i32(i32 5, i32 0, i32 0, i8 0, i32 1)
  ret void
}

; Function Attrs: nounwind readnone
declare i16 @dx.op.loadInput.i16(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.tempRegStore.i16(i32, i32, i16) #1

; Function Attrs: nounwind readonly
declare i16 @dx.op.tempRegLoad.i16(i32, i32) #2

; Function Attrs: nounwind
declare void @dx.op.tempRegStore.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @dx.op.tempRegLoad.i32(i32, i32) #2

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!dx.version = !{!0}
!dx.valver = !{!0}
!dx.shaderModel = !{!1}
!dx.entryPoints = !{!2}
!llvm.ident = !{!10}

!0 = !{i32 1, i32 0}
!1 = !{!"ps", i32 6, i32 0}
!2 = !{void ()* @main, !"main", !3, null, !9}
!3 = !{!4, !7, null}
!4 = !{!5}
!5 = !{i32 0, !"A", i8 2, i8 0, !6, i8 1, i32 1, i8 1, i32 0, i8 0, null}
!6 = !{i32 0}
!7 = !{!8}
!8 = !{i32 0, !"SV_Target", i8 4, i8 16, !6, i8 0, i32 1, i8 1, i32 0, i8 0, null}
!9 = !{i32 0, i64 288}
!10 = !{!"dxbc2dxil 1.2"}

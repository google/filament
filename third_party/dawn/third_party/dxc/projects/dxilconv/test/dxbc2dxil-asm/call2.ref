
@dx.v32.r0 = internal global i32 undef, align 4

define internal void @dx.label.0() {
entry:
  store i32 1084227584, i32* @dx.v32.r0
  ret void
}

define internal void @dx.label.1() {
entry:
  %0 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)
  %1 = call i32 @dx.op.bitcastF32toI32(i32 127, float %0)
  store i32 %1, i32* @dx.v32.r0
  ret void
}

define internal void @dx.label.2() {
entry:
  store i32 1077936128, i32* @dx.v32.r0
  ret void
}

define void @main() {
entry:
  %0 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)
  %1 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 1, i32 undef)
  %2 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 2, i32 undef)
  store i32 %0, i32* @dx.v32.r0
  call void @dx.label.0()
  %3 = load i32, i32* @dx.v32.r0
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %label0.callc, label %label0.callc.1

label0.callc:                                     ; preds = %entry
  call void @dx.label.0()
  br label %label0.callc.1

label0.callc.1:                                   ; preds = %label0.callc, %entry
  %5 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)
  switch i32 %5, label %switch0.default [
    i32 1, label %switch0.casegroup0
    i32 2, label %switch0.casegroup1
  ]

switch0.casegroup0:                               ; preds = %label0.callc.1
  call void @dx.label.2()
  %6 = icmp ne i32 %1, 0
  br i1 %6, label %label1.callc, label %label1.callc.2

label1.callc:                                     ; preds = %switch0.casegroup0
  call void @dx.label.1()
  br label %label1.callc.2

label1.callc.2:                                   ; preds = %label1.callc, %switch0.casegroup0
  br label %switch0.end

switch0.default:                                  ; preds = %label0.callc.1
  %7 = icmp ne i32 %2, 0
  br i1 %7, label %label2.callc, label %label2.callc.3

label2.callc:                                     ; preds = %switch0.default
  call void @dx.label.2()
  br label %label2.callc.3

label2.callc.3:                                   ; preds = %label2.callc, %switch0.default
  br label %switch0.end

switch0.casegroup1:                               ; preds = %label0.callc.1
  br label %switch0.end

switch0.end:                                      ; preds = %switch0.casegroup1, %label2.callc.3, %label1.callc.2
  %8 = load i32, i32* @dx.v32.r0
  %9 = call float @dx.op.bitcastI32toF32(i32 126, i32 %8)
  %10 = fadd fast float %9, 1.000000e+00
  %11 = call i32 @dx.op.bitcastF32toI32(i32 127, float %10)
  call void @dx.op.storeOutput.i32(i32 5, i32 0, i32 0, i8 0, i32 %11)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.tempRegStore.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare i32 @dx.op.tempRegLoad.i32(i32, i32) #2

; Function Attrs: nounwind readonly
declare float @dx.op.tempRegLoad.f32(i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.bitcastF32toI32(i32, float) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.tempRegStore.f32(i32, i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.bitcastI32toF32(i32, i32) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!dx.version = !{!0}
!dx.valver = !{!0}
!dx.shaderModel = !{!1}
!dx.entryPoints = !{!2}
!llvm.ident = !{!11}

!0 = !{i32 1, i32 0}
!1 = !{!"ps", i32 6, i32 0}
!2 = !{void ()* @main, !"main", !3, null, !10}
!3 = !{!4, !8, null}
!4 = !{!5, !7}
!5 = !{i32 0, !"0_", i8 9, i8 0, !6, i8 2, i32 1, i8 1, i32 0, i8 0, null}
!6 = !{i32 0}
!7 = !{i32 1, !"1_", i8 5, i8 0, !6, i8 1, i32 1, i8 3, i32 1, i8 0, null}
!8 = !{!9}
!9 = !{i32 0, !"SV_Target", i8 5, i8 16, !6, i8 0, i32 1, i8 1, i32 0, i8 0, null}
!10 = !{i32 0, i64 256}
!11 = !{!"dxbc2dxil 1.2"}

hlsl.scalarCast.vert
Shader version: 500
0:? Sequence
0:5  Function Definition: r0( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:5    Function Parameters: 
0:?     Sequence
0:7      Branch: Return with expression
0:7        Constant:
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:9  Function Definition: r1( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:9    Function Parameters: 
0:?     Sequence
0:11      Branch: Return with expression
0:11        Constant:
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:13  Function Definition: r2( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:13    Function Parameters: 
0:?     Sequence
0:15      Branch: Return with expression
0:15        Constant:
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:17  Function Definition: r3( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:17    Function Parameters: 
0:?     Sequence
0:18      Sequence
0:18        move second child to first child ( temp float)
0:18          'f' ( temp float)
0:18          Constant:
0:18            2.000000
0:19      Branch: Return with expression
0:19        Construct structure ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:19          Construct vec4 ( temp 4-component vector of float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:19          Construct vec2 ( temp 2-component vector of float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:21  Function Definition: r4( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:21    Function Parameters: 
0:?     Sequence
0:22      Sequence
0:22        move second child to first child ( temp float)
0:22          'f' ( temp float)
0:22          Constant:
0:22            2.000000
0:23      Branch: Return with expression
0:23        Comma ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:23          move second child to first child ( temp float)
0:23            'scalarCopy' ( temp float)
0:23            add ( temp float)
0:23              'f' ( temp float)
0:23              Constant:
0:23                1.000000
0:23          Construct structure ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:23            Construct vec4 ( temp 4-component vector of float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:23            Construct vec2 ( temp 2-component vector of float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:25  Function Definition: r5( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:25    Function Parameters: 
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp float)
0:26          'f' ( temp float)
0:26          Constant:
0:26            2.000000
0:27      Branch: Return with expression
0:27        Comma ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:27          move second child to first child ( temp float)
0:27            'scalarCopy' ( temp float)
0:27            sine ( temp float)
0:27              'f' ( temp float)
0:27          Construct structure ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:27            Construct vec4 ( temp 4-component vector of float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:27            Construct vec2 ( temp 2-component vector of float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:29  Function Definition: @main( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29    Function Parameters: 
0:?     Sequence
0:30      Sequence
0:30        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:30          'v0' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:30          Function Call: r0( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:31      Sequence
0:31        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:31          'v1' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:31          Function Call: r1( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:32      Sequence
0:32        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:32          'v2' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:32          Function Call: r2( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:33      Sequence
0:33        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:33          'v3' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:33          Function Call: r3( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:34      Sequence
0:34        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:34          'v4' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:34          Function Call: r4( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:35      Sequence
0:35        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:35          'v5' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:35          Function Call: r5( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:36      Branch: Return with expression
0:36        Constant:
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:29  Function Definition: main( ( temp void)
0:29    Function Parameters: 
0:?     Sequence
0:29      Sequence
0:29        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29          'flattenTemp' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29          Function Call: @main( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.position' ( out 4-component vector of float Position)
0:29          position: direct index for structure ( temp 4-component vector of float)
0:29            'flattenTemp' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29            Constant:
0:29              0 (const int)
0:29        move second child to first child ( temp 2-component vector of float)
0:?           '@entryPointOutput.texCoord' (layout( location=0) out 2-component vector of float)
0:29          texCoord: direct index for structure ( temp 2-component vector of float)
0:29            'flattenTemp' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29            Constant:
0:29              1 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.position' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.texCoord' (layout( location=0) out 2-component vector of float)


Linked vertex stage:


Shader version: 500
0:? Sequence
0:5  Function Definition: r0( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:5    Function Parameters: 
0:?     Sequence
0:7      Branch: Return with expression
0:7        Constant:
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:7          2.000000
0:9  Function Definition: r1( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:9    Function Parameters: 
0:?     Sequence
0:11      Branch: Return with expression
0:11        Constant:
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:11          3.000000
0:13  Function Definition: r2( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:13    Function Parameters: 
0:?     Sequence
0:15      Branch: Return with expression
0:15        Constant:
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:15          0.909297
0:17  Function Definition: r3( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:17    Function Parameters: 
0:?     Sequence
0:18      Sequence
0:18        move second child to first child ( temp float)
0:18          'f' ( temp float)
0:18          Constant:
0:18            2.000000
0:19      Branch: Return with expression
0:19        Construct structure ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:19          Construct vec4 ( temp 4-component vector of float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:19          Construct vec2 ( temp 2-component vector of float)
0:19            'f' ( temp float)
0:19            'f' ( temp float)
0:21  Function Definition: r4( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:21    Function Parameters: 
0:?     Sequence
0:22      Sequence
0:22        move second child to first child ( temp float)
0:22          'f' ( temp float)
0:22          Constant:
0:22            2.000000
0:23      Branch: Return with expression
0:23        Comma ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:23          move second child to first child ( temp float)
0:23            'scalarCopy' ( temp float)
0:23            add ( temp float)
0:23              'f' ( temp float)
0:23              Constant:
0:23                1.000000
0:23          Construct structure ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:23            Construct vec4 ( temp 4-component vector of float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:23            Construct vec2 ( temp 2-component vector of float)
0:23              'scalarCopy' ( temp float)
0:23              'scalarCopy' ( temp float)
0:25  Function Definition: r5( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:25    Function Parameters: 
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp float)
0:26          'f' ( temp float)
0:26          Constant:
0:26            2.000000
0:27      Branch: Return with expression
0:27        Comma ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:27          move second child to first child ( temp float)
0:27            'scalarCopy' ( temp float)
0:27            sine ( temp float)
0:27              'f' ( temp float)
0:27          Construct structure ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:27            Construct vec4 ( temp 4-component vector of float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:27            Construct vec2 ( temp 2-component vector of float)
0:27              'scalarCopy' ( temp float)
0:27              'scalarCopy' ( temp float)
0:29  Function Definition: @main( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29    Function Parameters: 
0:?     Sequence
0:30      Sequence
0:30        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:30          'v0' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:30          Function Call: r0( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:31      Sequence
0:31        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:31          'v1' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:31          Function Call: r1( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:32      Sequence
0:32        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:32          'v2' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:32          Function Call: r2( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:33      Sequence
0:33        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:33          'v3' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:33          Function Call: r3( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:34      Sequence
0:34        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:34          'v4' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:34          Function Call: r4( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:35      Sequence
0:35        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:35          'v5' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:35          Function Call: r5( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:36      Branch: Return with expression
0:36        Constant:
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:36          1.000000
0:29  Function Definition: main( ( temp void)
0:29    Function Parameters: 
0:?     Sequence
0:29      Sequence
0:29        move second child to first child ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29          'flattenTemp' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29          Function Call: @main( ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.position' ( out 4-component vector of float Position)
0:29          position: direct index for structure ( temp 4-component vector of float)
0:29            'flattenTemp' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29            Constant:
0:29              0 (const int)
0:29        move second child to first child ( temp 2-component vector of float)
0:?           '@entryPointOutput.texCoord' (layout( location=0) out 2-component vector of float)
0:29          texCoord: direct index for structure ( temp 2-component vector of float)
0:29            'flattenTemp' ( temp structure{ temp 4-component vector of float position,  temp 2-component vector of float texCoord})
0:29            Constant:
0:29              1 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.position' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.texCoord' (layout( location=0) out 2-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 108

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 4  "main" 96 103
                              Source HLSL 500
                              Name 4  "main"
                              Name 9  "VertexOut"
                              MemberName 9(VertexOut) 0  "position"
                              MemberName 9(VertexOut) 1  "texCoord"
                              Name 11  "r0("
                              Name 13  "r1("
                              Name 15  "r2("
                              Name 17  "r3("
                              Name 19  "r4("
                              Name 21  "r5("
                              Name 23  "@main("
                              Name 44  "f"
                              Name 52  "f"
                              Name 53  "scalarCopy"
                              Name 64  "f"
                              Name 65  "scalarCopy"
                              Name 76  "v0"
                              Name 78  "v1"
                              Name 80  "v2"
                              Name 82  "v3"
                              Name 84  "v4"
                              Name 86  "v5"
                              Name 93  "flattenTemp"
                              Name 96  "@entryPointOutput.position"
                              Name 103  "@entryPointOutput.texCoord"
                              Decorate 96(@entryPointOutput.position) BuiltIn Position
                              Decorate 103(@entryPointOutput.texCoord) Location 0
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeFloat 32
               7:             TypeVector 6(float) 4
               8:             TypeVector 6(float) 2
    9(VertexOut):             TypeStruct 7(fvec4) 8(fvec2)
              10:             TypeFunction 9(VertexOut)
              25:    6(float) Constant 1073741824
              26:    7(fvec4) ConstantComposite 25 25 25 25
              27:    8(fvec2) ConstantComposite 25 25
              28:9(VertexOut) ConstantComposite 26 27
              31:    6(float) Constant 1077936128
              32:    7(fvec4) ConstantComposite 31 31 31 31
              33:    8(fvec2) ConstantComposite 31 31
              34:9(VertexOut) ConstantComposite 32 33
              37:    6(float) Constant 1063831479
              38:    7(fvec4) ConstantComposite 37 37 37 37
              39:    8(fvec2) ConstantComposite 37 37
              40:9(VertexOut) ConstantComposite 38 39
              43:             TypePointer Function 6(float)
              55:    6(float) Constant 1065353216
              75:             TypePointer Function 9(VertexOut)
              88:    7(fvec4) ConstantComposite 55 55 55 55
              89:    8(fvec2) ConstantComposite 55 55
              90:9(VertexOut) ConstantComposite 88 89
              95:             TypePointer Output 7(fvec4)
96(@entryPointOutput.position):     95(ptr) Variable Output
              97:             TypeInt 32 1
              98:     97(int) Constant 0
              99:             TypePointer Function 7(fvec4)
             102:             TypePointer Output 8(fvec2)
103(@entryPointOutput.texCoord):    102(ptr) Variable Output
             104:     97(int) Constant 1
             105:             TypePointer Function 8(fvec2)
         4(main):           2 Function None 3
               5:             Label
 93(flattenTemp):     75(ptr) Variable Function
              94:9(VertexOut) FunctionCall 23(@main()
                              Store 93(flattenTemp) 94
             100:     99(ptr) AccessChain 93(flattenTemp) 98
             101:    7(fvec4) Load 100
                              Store 96(@entryPointOutput.position) 101
             106:    105(ptr) AccessChain 93(flattenTemp) 104
             107:    8(fvec2) Load 106
                              Store 103(@entryPointOutput.texCoord) 107
                              Return
                              FunctionEnd
         11(r0():9(VertexOut) Function None 10
              12:             Label
                              ReturnValue 28
                              FunctionEnd
         13(r1():9(VertexOut) Function None 10
              14:             Label
                              ReturnValue 34
                              FunctionEnd
         15(r2():9(VertexOut) Function None 10
              16:             Label
                              ReturnValue 40
                              FunctionEnd
         17(r3():9(VertexOut) Function None 10
              18:             Label
           44(f):     43(ptr) Variable Function
                              Store 44(f) 25
              45:    6(float) Load 44(f)
              46:    7(fvec4) CompositeConstruct 45 45 45 45
              47:    6(float) Load 44(f)
              48:    8(fvec2) CompositeConstruct 47 47
              49:9(VertexOut) CompositeConstruct 46 48
                              ReturnValue 49
                              FunctionEnd
         19(r4():9(VertexOut) Function None 10
              20:             Label
           52(f):     43(ptr) Variable Function
  53(scalarCopy):     43(ptr) Variable Function
                              Store 52(f) 25
              54:    6(float) Load 52(f)
              56:    6(float) FAdd 54 55
                              Store 53(scalarCopy) 56
              57:    6(float) Load 53(scalarCopy)
              58:    7(fvec4) CompositeConstruct 57 57 57 57
              59:    6(float) Load 53(scalarCopy)
              60:    8(fvec2) CompositeConstruct 59 59
              61:9(VertexOut) CompositeConstruct 58 60
                              ReturnValue 61
                              FunctionEnd
         21(r5():9(VertexOut) Function None 10
              22:             Label
           64(f):     43(ptr) Variable Function
  65(scalarCopy):     43(ptr) Variable Function
                              Store 64(f) 25
              66:    6(float) Load 64(f)
              67:    6(float) ExtInst 1(GLSL.std.450) 13(Sin) 66
                              Store 65(scalarCopy) 67
              68:    6(float) Load 65(scalarCopy)
              69:    7(fvec4) CompositeConstruct 68 68 68 68
              70:    6(float) Load 65(scalarCopy)
              71:    8(fvec2) CompositeConstruct 70 70
              72:9(VertexOut) CompositeConstruct 69 71
                              ReturnValue 72
                              FunctionEnd
      23(@main():9(VertexOut) Function None 10
              24:             Label
          76(v0):     75(ptr) Variable Function
          78(v1):     75(ptr) Variable Function
          80(v2):     75(ptr) Variable Function
          82(v3):     75(ptr) Variable Function
          84(v4):     75(ptr) Variable Function
          86(v5):     75(ptr) Variable Function
              77:9(VertexOut) FunctionCall 11(r0()
                              Store 76(v0) 77
              79:9(VertexOut) FunctionCall 13(r1()
                              Store 78(v1) 79
              81:9(VertexOut) FunctionCall 15(r2()
                              Store 80(v2) 81
              83:9(VertexOut) FunctionCall 17(r3()
                              Store 82(v3) 83
              85:9(VertexOut) FunctionCall 19(r4()
                              Store 84(v4) 85
              87:9(VertexOut) FunctionCall 21(r5()
                              Store 86(v5) 87
                              ReturnValue 90
                              FunctionEnd

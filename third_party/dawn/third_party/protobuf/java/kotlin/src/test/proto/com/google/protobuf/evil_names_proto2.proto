// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// LINT: LEGACY_NAMES
syntax = "proto2";

package protobuf.kotlin.generator;

option java_package = "in.com.google.protobuf.kotlin.generator";
option java_multiple_files = true;

message EvilNamesProto2 {
  optional bool initialized = 1;
  optional bool has_foo = 2;
  optional string Bar = 3;
  optional bool is_initialized = 4;

  oneof camelCase {
    string fooBar = 5;
  }

  repeated string ALL_CAPS = 7;
  map<int32, bool> ALL_CAPS_MAP = 8;

  optional bool has_underbar_preceding_numeric_1foo = 9;
  optional bool has_underbar_preceding_numeric_42bar = 13;
  optional bool has_underbar_preceding_numeric_123foo42bar_baz = 14;

  extensions 100 to max;

  repeated string extension = 12;
  repeated int32 class = 15;
  optional double int = 16;
  optional bool long = 17;
  optional int64 boolean = 18;
  optional string sealed = 19;
  optional float interface = 20;
  optional string object = 22;
  optional string cached_size = 23;
  optional bool serialized_size = 24;
  optional string by = 25;

  optional string DEPRECATED_foo = 26;
  optional group DEPRECATED_NavigationImageRequested = 27 {
    optional int32 DEPRECATED_FooBar = 28;
  }
  optional string __DEPRECATED_Bar = 29;
  optional string ID = 30;
  optional string a_b_notification = 31;
  optional string not_DEPRECATED_foo = 32;
}

message List {}

message HardKeywordsAllTypesProto2 {
  message NestedMessage {
    optional int32 while = 1;
  }

  enum NestedEnum {
    FOO = 1;
    BAR = 2;
  }

  optional int32 as = 1;
  optional NestedEnum break = 3;
  map<int32, int32> continue = 4;
  optional NestedMessage do = 5;

  repeated int32 else = 6;
  repeated string for = 7;
  repeated NestedEnum fun = 8;
  repeated NestedMessage if = 9;
}

message Interface {}

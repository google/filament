# Copyright 2023 The Dawn & Tint Authors
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# File generated by 'tools/src/cmd/gen' using the template:
#   tools/src/cmd/gen/build/BUILD.gn.tmpl
#
# To regenerate run: './tools/run gen'
#
#                       Do not modify this file directly
################################################################################

import("../../../../../../scripts/dawn_overrides_with_defaults.gni")
import("../../../../../../scripts/tint_overrides_with_defaults.gni")

import("${tint_src_dir}/tint.gni")

if (tint_build_unittests || tint_build_benchmarks) {
  import("//testing/test.gni")
}

libtint_source_set("transform") {
  sources = [
    "add_empty_entry_point.cc",
    "add_empty_entry_point.h",
    "array_length_from_uniform.cc",
    "array_length_from_uniform.h",
    "binding_remapper.cc",
    "binding_remapper.h",
    "builtin_polyfill.cc",
    "builtin_polyfill.h",
    "canonicalize_entry_point_io.cc",
    "canonicalize_entry_point_io.h",
    "data.cc",
    "data.h",
    "demote_to_helper.cc",
    "demote_to_helper.h",
    "direct_variable_access.cc",
    "direct_variable_access.h",
    "disable_uniformity_analysis.cc",
    "disable_uniformity_analysis.h",
    "expand_compound_assignment.cc",
    "expand_compound_assignment.h",
    "first_index_offset.cc",
    "first_index_offset.h",
    "fold_constants.cc",
    "fold_constants.h",
    "get_insertion_point.cc",
    "get_insertion_point.h",
    "hoist_to_decl_before.cc",
    "hoist_to_decl_before.h",
    "manager.cc",
    "manager.h",
    "multiplanar_external_texture.cc",
    "multiplanar_external_texture.h",
    "preserve_padding.cc",
    "preserve_padding.h",
    "promote_initializers_to_let.cc",
    "promote_initializers_to_let.h",
    "promote_side_effects_to_decl.cc",
    "promote_side_effects_to_decl.h",
    "remove_continue_in_switch.cc",
    "remove_continue_in_switch.h",
    "remove_phonies.cc",
    "remove_phonies.h",
    "remove_unreachable_statements.cc",
    "remove_unreachable_statements.h",
    "renamer.cc",
    "renamer.h",
    "robustness.cc",
    "robustness.h",
    "simplify_pointers.cc",
    "simplify_pointers.h",
    "single_entry_point.cc",
    "single_entry_point.h",
    "substitute_override.cc",
    "substitute_override.h",
    "transform.cc",
    "transform.h",
    "unshadow.cc",
    "unshadow.h",
    "vectorize_scalar_matrix_initializers.cc",
    "vectorize_scalar_matrix_initializers.h",
    "vertex_pulling.cc",
    "vertex_pulling.h",
    "zero_init_workgroup_memory.cc",
    "zero_init_workgroup_memory.h",
  ]
  deps = [
    "${dawn_root}/src/utils:utils",
    "${tint_src_dir}/api/common",
    "${tint_src_dir}/lang/core",
    "${tint_src_dir}/lang/core/common",
    "${tint_src_dir}/lang/core/constant",
    "${tint_src_dir}/lang/core/type",
    "${tint_src_dir}/lang/wgsl",
    "${tint_src_dir}/lang/wgsl/ast",
    "${tint_src_dir}/lang/wgsl/common",
    "${tint_src_dir}/lang/wgsl/features",
    "${tint_src_dir}/lang/wgsl/program",
    "${tint_src_dir}/lang/wgsl/resolver",
    "${tint_src_dir}/lang/wgsl/sem",
    "${tint_src_dir}/utils",
    "${tint_src_dir}/utils/containers",
    "${tint_src_dir}/utils/diagnostic",
    "${tint_src_dir}/utils/ice",
    "${tint_src_dir}/utils/macros",
    "${tint_src_dir}/utils/math",
    "${tint_src_dir}/utils/memory",
    "${tint_src_dir}/utils/result",
    "${tint_src_dir}/utils/rtti",
    "${tint_src_dir}/utils/symbol",
    "${tint_src_dir}/utils/text",
  ]
}
if (tint_build_unittests) {
  if (tint_build_wgsl_reader && tint_build_wgsl_writer) {
    tint_unittests_source_set("unittests") {
      sources = [
        "add_empty_entry_point_test.cc",
        "array_length_from_uniform_test.cc",
        "binding_remapper_test.cc",
        "builtin_polyfill_test.cc",
        "canonicalize_entry_point_io_test.cc",
        "demote_to_helper_test.cc",
        "direct_variable_access_test.cc",
        "disable_uniformity_analysis_test.cc",
        "expand_compound_assignment_test.cc",
        "first_index_offset_test.cc",
        "fold_constants_test.cc",
        "get_insertion_point_test.cc",
        "helper_test.h",
        "hoist_to_decl_before_test.cc",
        "manager_test.cc",
        "multiplanar_external_texture_test.cc",
        "preserve_padding_test.cc",
        "promote_initializers_to_let_test.cc",
        "promote_side_effects_to_decl_test.cc",
        "remove_continue_in_switch_test.cc",
        "remove_phonies_test.cc",
        "remove_unreachable_statements_test.cc",
        "renamer_test.cc",
        "robustness_test.cc",
        "simplify_pointers_test.cc",
        "single_entry_point_test.cc",
        "substitute_override_test.cc",
        "transform_test.cc",
        "unshadow_test.cc",
        "vectorize_scalar_matrix_initializers_test.cc",
        "vertex_pulling_test.cc",
        "zero_init_workgroup_memory_test.cc",
      ]
      deps = [
        "${dawn_root}/src/utils:utils",
        "${tint_src_dir}:gmock_and_gtest",
        "${tint_src_dir}/api/common",
        "${tint_src_dir}/lang/core",
        "${tint_src_dir}/lang/core/common",
        "${tint_src_dir}/lang/core/constant",
        "${tint_src_dir}/lang/core/ir",
        "${tint_src_dir}/lang/core/type",
        "${tint_src_dir}/lang/wgsl",
        "${tint_src_dir}/lang/wgsl/ast",
        "${tint_src_dir}/lang/wgsl/ast:unittests",
        "${tint_src_dir}/lang/wgsl/ast/transform",
        "${tint_src_dir}/lang/wgsl/common",
        "${tint_src_dir}/lang/wgsl/features",
        "${tint_src_dir}/lang/wgsl/program",
        "${tint_src_dir}/lang/wgsl/resolver",
        "${tint_src_dir}/lang/wgsl/sem",
        "${tint_src_dir}/lang/wgsl/writer/ir_to_program",
        "${tint_src_dir}/utils",
        "${tint_src_dir}/utils/containers",
        "${tint_src_dir}/utils/diagnostic",
        "${tint_src_dir}/utils/ice",
        "${tint_src_dir}/utils/macros",
        "${tint_src_dir}/utils/math",
        "${tint_src_dir}/utils/memory",
        "${tint_src_dir}/utils/result",
        "${tint_src_dir}/utils/rtti",
        "${tint_src_dir}/utils/symbol",
        "${tint_src_dir}/utils/text",
      ]

      if (tint_build_wgsl_reader) {
        deps += [ "${tint_src_dir}/lang/wgsl/reader" ]
      }

      if (tint_build_wgsl_writer) {
        deps += [ "${tint_src_dir}/lang/wgsl/writer" ]
      }
    }
  }
}

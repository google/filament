// Copyright 2023 The Dawn & Tint Authors
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived from
//    this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

////////////////////////////////////////////////////////////////////////////////
// File generated by 'tools/src/cmd/gen' using the template:
//   src/tint/lang/wgsl/diagnostic_rule_bench.cc.tmpl
//
// To regenerate run: './tools/run gen'
//
//                       Do not modify this file directly
////////////////////////////////////////////////////////////////////////////////

#include "src/tint/lang/wgsl/diagnostic_rule.h"

#include <array>

#include "benchmark/benchmark.h"

namespace tint::wgsl {
namespace {

void CoreDiagnosticRuleParser(::benchmark::State& state) {
    const char* kStrings[] = {
        "deriative_unccformity",   "dlivative_3iformiy",    "derivative_uniforVity",
        "derivative_uniformity",   "derivative_uniform1ty", "derivativeJunifqrmity",
        "derivative_unifllrmit77", "subgopppqquniformitHH", "subgrou_cformity",
        "subgGoup_unifombty",      "subgroup_uniformity",   "suvgroup_uniformiiiy",
        "subgroWWp8uniformity",    "subgroup_uifoxxmiMy",
    };
    for (auto _ : state) {
        for (auto* str : kStrings) {
            auto result = ParseCoreDiagnosticRule(str);
            benchmark::DoNotOptimize(result);
        }
    }
}  // NOLINT(readability/fn_size)

BENCHMARK(CoreDiagnosticRuleParser);

void ChromiumDiagnosticRuleParser(::benchmark::State& state) {
    const char* kStrings[] = {
        "sbgroup_ggatrix_uniformXty",
        "suVroup_matrx_uniforXitu",
        "subgroup_ma3rix_uniformity",
        "subgroup_matrix_uniformity",
        "subgroup_matrix_uniformitE",
        "subgroup_atrix_uniTTPormity",
        "suxxdgroup_matri_uniformity",
        "44nreachable_code",
        "unreaVVhabSSe_code",
        "unre22chabR_Rode",
        "unreachable_code",
        "nFeachable_9ode",
        "unrachable_code",
        "VnreacaRRlH_OOode",
    };
    for (auto _ : state) {
        for (auto* str : kStrings) {
            auto result = ParseChromiumDiagnosticRule(str);
            benchmark::DoNotOptimize(result);
        }
    }
}  // NOLINT(readability/fn_size)

BENCHMARK(ChromiumDiagnosticRuleParser);

}  // namespace
}  // namespace tint::wgsl

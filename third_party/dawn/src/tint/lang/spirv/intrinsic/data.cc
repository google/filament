// Copyright 2023 The Dawn & Tint Authors
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived from
//    this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

////////////////////////////////////////////////////////////////////////////////
// File generated by 'tools/src/cmd/gen' using the template:
//   src/tint/lang/spirv/intrinsic/data.cc.tmpl
//
// To regenerate run: './tools/run gen'
//
//                       Do not modify this file directly
////////////////////////////////////////////////////////////////////////////////

#include <limits>
#include <string>

#include "src/tint/lang/core/intrinsic/type_matchers.h"
#include "src/tint/lang/spirv/intrinsic/dialect.h"
#include "src/tint/lang/spirv/intrinsic/type_matchers.h"
#include "src/tint/utils/text/string_stream.h"

namespace tint::spirv::intrinsic {

using namespace tint::core::intrinsic;  // NOLINT(build/namespaces)

namespace {

using ConstEvalFunctionIndex = tint::core::intrinsic::ConstEvalFunctionIndex;
using IntrinsicInfo = tint::core::intrinsic::IntrinsicInfo;
using MatcherIndicesIndex = tint::core::intrinsic::MatcherIndicesIndex;
using MatchState = tint::core::intrinsic::MatchState;
using Number = tint::core::intrinsic::Number;
using NumberMatcher = tint::core::intrinsic::NumberMatcher;
using NumberMatcherIndex = tint::core::intrinsic::NumberMatcherIndex;
using OverloadFlag = tint::core::intrinsic::OverloadFlag;
using OverloadFlags = tint::core::intrinsic::OverloadFlags;
using OverloadIndex = tint::core::intrinsic::OverloadIndex;
using OverloadInfo = tint::core::intrinsic::OverloadInfo;
using ParameterIndex = tint::core::intrinsic::ParameterIndex;
using ParameterInfo = tint::core::intrinsic::ParameterInfo;
using StringStream = tint::StringStream;
using TemplateIndex = tint::core::intrinsic::TemplateIndex;
using Type = tint::core::type::Type;
using TypeMatcher = tint::core::intrinsic::TypeMatcher;
using TypeMatcherIndex = tint::core::intrinsic::TypeMatcherIndex;

template <size_t N>
using TemplateNumberMatcher = tint::core::intrinsic::TemplateNumberMatcher<N>;

template <size_t N>
using TemplateTypeMatcher = tint::core::intrinsic::TemplateTypeMatcher<N>;

// clang-format off

/// TypeMatcher for 'type bool'
constexpr TypeMatcher kBoolMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchBool(state, ty)) {
      return nullptr;
    }
    return BuildBool(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("bool");
  }
};


/// TypeMatcher for 'type f32'
constexpr TypeMatcher kF32Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchF32(state, ty)) {
      return nullptr;
    }
    return BuildF32(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("f32");
  }
};


/// TypeMatcher for 'type f16'
constexpr TypeMatcher kF16Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchF16(state, ty)) {
      return nullptr;
    }
    return BuildF16(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("f16");
  }
};


/// TypeMatcher for 'type i32'
constexpr TypeMatcher kI32Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchI32(state, ty)) {
      return nullptr;
    }
    return BuildI32(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("i32");
  }
};


/// TypeMatcher for 'type u32'
constexpr TypeMatcher kU32Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchU32(state, ty)) {
      return nullptr;
    }
    return BuildU32(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("u32");
  }
};


/// TypeMatcher for 'type i8'
constexpr TypeMatcher kI8Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchI8(state, ty)) {
      return nullptr;
    }
    return BuildI8(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("i8");
  }
};


/// TypeMatcher for 'type u8'
constexpr TypeMatcher kU8Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchU8(state, ty)) {
      return nullptr;
    }
    return BuildU8(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("u8");
  }
};


/// TypeMatcher for 'type vec2'
constexpr TypeMatcher kVec2Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchVec2(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildVec2(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("vec2", "<", T, ">");
  }
};


/// TypeMatcher for 'type vec3'
constexpr TypeMatcher kVec3Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchVec3(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildVec3(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("vec3", "<", T, ">");
  }
};


/// TypeMatcher for 'type vec4'
constexpr TypeMatcher kVec4Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchVec4(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildVec4(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("vec4", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat2x2'
constexpr TypeMatcher kMat2X2Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat2X2(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat2X2(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat2x2", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat2x3'
constexpr TypeMatcher kMat2X3Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat2X3(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat2X3(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat2x3", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat2x4'
constexpr TypeMatcher kMat2X4Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat2X4(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat2X4(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat2x4", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat3x2'
constexpr TypeMatcher kMat3X2Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat3X2(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat3X2(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat3x2", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat3x3'
constexpr TypeMatcher kMat3X3Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat3X3(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat3X3(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat3x3", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat3x4'
constexpr TypeMatcher kMat3X4Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat3X4(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat3X4(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat3x4", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat4x2'
constexpr TypeMatcher kMat4X2Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat4X2(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat4X2(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat4x2", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat4x3'
constexpr TypeMatcher kMat4X3Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat4X3(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat4X3(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat4x3", "<", T, ">");
  }
};


/// TypeMatcher for 'type mat4x4'
constexpr TypeMatcher kMat4X4Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchMat4X4(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat4X4(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("mat4x4", "<", T, ">");
  }
};


/// TypeMatcher for 'type vec'
constexpr TypeMatcher kVecMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  Number N = Number::invalid;
  const Type* T = nullptr;
    if (!MatchVec(state, ty, N, T)) {
      return nullptr;
    }
    N = state.Num(N);
    if (!N.IsValid()) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildVec(state, ty, N, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText N;
  state->PrintNum(N);StyledText T;
  state->PrintType(T);
    out << style::Type("vec", N, "<", T, ">");
  }
};


/// TypeMatcher for 'type mat'
constexpr TypeMatcher kMatMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  Number N = Number::invalid;
  Number M = Number::invalid;
  const Type* T = nullptr;
    if (!MatchMat(state, ty, N, M, T)) {
      return nullptr;
    }
    N = state.Num(N);
    if (!N.IsValid()) {
      return nullptr;
    }
    M = state.Num(M);
    if (!M.IsValid()) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildMat(state, ty, N, M, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText N;
  state->PrintNum(N);StyledText M;
  state->PrintNum(M);StyledText T;
  state->PrintType(T);
    out << style::Type("mat", N, "x", M, "<", T, ">");
  }
};


/// TypeMatcher for 'type atomic'
constexpr TypeMatcher kAtomicMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchAtomic(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildAtomic(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("atomic", "<", T, ">");
  }
};


/// TypeMatcher for 'type sampler'
constexpr TypeMatcher kSamplerMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchSampler(state, ty)) {
      return nullptr;
    }
    return BuildSampler(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("sampler");
  }
};


/// TypeMatcher for 'type sampler_comparison'
constexpr TypeMatcher kSamplerComparisonMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchSamplerComparison(state, ty)) {
      return nullptr;
    }
    return BuildSamplerComparison(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("sampler_comparison");
  }
};


/// TypeMatcher for 'type ptr'
constexpr TypeMatcher kPtrMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  Number S = Number::invalid;
  const Type* T = nullptr;
  Number A = Number::invalid;
    if (!MatchPtr(state, ty, S, T, A)) {
      return nullptr;
    }
    S = state.Num(S);
    if (!S.IsValid()) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    A = state.Num(A);
    if (!A.IsValid()) {
      return nullptr;
    }
    return BuildPtr(state, ty, S, T, A);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText S;
  state->PrintNum(S);StyledText T;
  state->PrintType(T);StyledText A;
  state->PrintNum(A);
    out << style::Type("ptr", "<", S, ", ", T, ", ", A, ">");
  }
};


/// TypeMatcher for 'type struct_with_runtime_array'
constexpr TypeMatcher kStructWithRuntimeArrayMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (!MatchStructWithRuntimeArray(state, ty)) {
      return nullptr;
    }
    return BuildStructWithRuntimeArray(state, ty);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {
    out << style::Type("struct_with_runtime_array");
  }
};


/// TypeMatcher for 'type image'
constexpr TypeMatcher kImageMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
  Number D = Number::invalid;
  Number E = Number::invalid;
  Number R = Number::invalid;
  Number M = Number::invalid;
  Number S = Number::invalid;
  Number F = Number::invalid;
  Number A = Number::invalid;
    if (!MatchImage(state, ty, T, D, E, R, M, S, F, A)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    D = state.Num(D);
    if (!D.IsValid()) {
      return nullptr;
    }
    E = state.Num(E);
    if (!E.IsValid()) {
      return nullptr;
    }
    R = state.Num(R);
    if (!R.IsValid()) {
      return nullptr;
    }
    M = state.Num(M);
    if (!M.IsValid()) {
      return nullptr;
    }
    S = state.Num(S);
    if (!S.IsValid()) {
      return nullptr;
    }
    F = state.Num(F);
    if (!F.IsValid()) {
      return nullptr;
    }
    A = state.Num(A);
    if (!A.IsValid()) {
      return nullptr;
    }
    return BuildImage(state, ty, T, D, E, R, M, S, F, A);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);StyledText D;
  state->PrintNum(D);StyledText E;
  state->PrintNum(E);StyledText R;
  state->PrintNum(R);StyledText M;
  state->PrintNum(M);StyledText S;
  state->PrintNum(S);StyledText F;
  state->PrintNum(F);StyledText A;
  state->PrintNum(A);
    out << style::Type("image", "<", T, ", ", D, ", ", E, ", ", R, ", ", M, ", ", S, ", ", F, ", ", A, ">");
  }
};


/// TypeMatcher for 'type sampled_image'
constexpr TypeMatcher kSampledImageMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  const Type* T = nullptr;
    if (!MatchSampledImage(state, ty, T)) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    return BuildSampledImage(state, ty, T);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText T;
  state->PrintType(T);
    out << style::Type("sampled_image", "<", T, ">");
  }
};


/// TypeMatcher for 'type subgroup_matrix'
constexpr TypeMatcher kSubgroupMatrixMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
  Number S = Number::invalid;
  const Type* T = nullptr;
  Number C = Number::invalid;
  Number R = Number::invalid;
    if (!MatchSubgroupMatrix(state, ty, S, T, C, R)) {
      return nullptr;
    }
    S = state.Num(S);
    if (!S.IsValid()) {
      return nullptr;
    }
    T = state.Type(T);
    if (T == nullptr) {
      return nullptr;
    }
    C = state.Num(C);
    if (!C.IsValid()) {
      return nullptr;
    }
    R = state.Num(R);
    if (!R.IsValid()) {
      return nullptr;
    }
    return BuildSubgroupMatrix(state, ty, S, T, C, R);
  },
/* print */ []([[maybe_unused]] MatchState* state, StyledText& out) {StyledText S;
  state->PrintNum(S);StyledText T;
  state->PrintType(T);StyledText C;
  state->PrintNum(C);StyledText R;
  state->PrintNum(R);
    out << style::Type("subgroup_matrix", "<", S, ", ", T, ", ", C, ", ", R, ">");
  }
};


/// TypeMatcher for 'match f32_f16'
constexpr TypeMatcher kF32F16Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchF32(state, ty)) {
      return BuildF32(state, ty);
    }
    if (MatchF16(state, ty)) {
      return BuildF16(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kF32Matcher.print(nullptr, out); out << style::Plain(" or "); kF16Matcher.print(nullptr, out);}
};

/// TypeMatcher for 'match iu32'
constexpr TypeMatcher kIu32Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchI32(state, ty)) {
      return BuildI32(state, ty);
    }
    if (MatchU32(state, ty)) {
      return BuildU32(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kI32Matcher.print(nullptr, out); out << style::Plain(" or "); kU32Matcher.print(nullptr, out);}
};

/// TypeMatcher for 'match fiu32'
constexpr TypeMatcher kFiu32Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchF32(state, ty)) {
      return BuildF32(state, ty);
    }
    if (MatchI32(state, ty)) {
      return BuildI32(state, ty);
    }
    if (MatchU32(state, ty)) {
      return BuildU32(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kF32Matcher.print(nullptr, out); out << style::Plain(", "); kI32Matcher.print(nullptr, out); out << style::Plain(" or "); kU32Matcher.print(nullptr, out);}
};

/// TypeMatcher for 'match fiu32_f16'
constexpr TypeMatcher kFiu32F16Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchF32(state, ty)) {
      return BuildF32(state, ty);
    }
    if (MatchI32(state, ty)) {
      return BuildI32(state, ty);
    }
    if (MatchU32(state, ty)) {
      return BuildU32(state, ty);
    }
    if (MatchF16(state, ty)) {
      return BuildF16(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kF32Matcher.print(nullptr, out); out << style::Plain(", "); kI32Matcher.print(nullptr, out); out << style::Plain(", "); kU32Matcher.print(nullptr, out); out << style::Plain(" or "); kF16Matcher.print(nullptr, out);}
};

/// TypeMatcher for 'match scalar'
constexpr TypeMatcher kScalarMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchF32(state, ty)) {
      return BuildF32(state, ty);
    }
    if (MatchF16(state, ty)) {
      return BuildF16(state, ty);
    }
    if (MatchI32(state, ty)) {
      return BuildI32(state, ty);
    }
    if (MatchU32(state, ty)) {
      return BuildU32(state, ty);
    }
    if (MatchBool(state, ty)) {
      return BuildBool(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kF32Matcher.print(nullptr, out); out << style::Plain(", "); kF16Matcher.print(nullptr, out); out << style::Plain(", "); kI32Matcher.print(nullptr, out); out << style::Plain(", "); kU32Matcher.print(nullptr, out); out << style::Plain(" or "); kBoolMatcher.print(nullptr, out);}
};

/// TypeMatcher for 'match iu32_iu8'
constexpr TypeMatcher kIu32Iu8Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchI32(state, ty)) {
      return BuildI32(state, ty);
    }
    if (MatchU32(state, ty)) {
      return BuildU32(state, ty);
    }
    if (MatchI8(state, ty)) {
      return BuildI8(state, ty);
    }
    if (MatchU8(state, ty)) {
      return BuildU8(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kI32Matcher.print(nullptr, out); out << style::Plain(", "); kU32Matcher.print(nullptr, out); out << style::Plain(", "); kI8Matcher.print(nullptr, out); out << style::Plain(" or "); kU8Matcher.print(nullptr, out);}
};

/// TypeMatcher for 'match iu8'
constexpr TypeMatcher kIu8Matcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchI8(state, ty)) {
      return BuildI8(state, ty);
    }
    if (MatchU8(state, ty)) {
      return BuildU8(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kI8Matcher.print(nullptr, out); out << style::Plain(" or "); kU8Matcher.print(nullptr, out);}
};

/// TypeMatcher for 'match samplers'
constexpr TypeMatcher kSamplersMatcher {
/* match */ [](MatchState& state, const Type* ty) -> const Type* {
    if (MatchSampler(state, ty)) {
      return BuildSampler(state, ty);
    }
    if (MatchSamplerComparison(state, ty)) {
      return BuildSamplerComparison(state, ty);
    }
    return nullptr;
  },
/* print */ [](MatchState*, StyledText& out) {
    // Note: We pass nullptr to the Matcher.print() functions, as matchers do not support
    // template arguments, nor can they match sub-types. As such, they have no use for the MatchState.
 kSamplerMatcher.print(nullptr, out); out << style::Plain(" or "); kSamplerComparisonMatcher.print(nullptr, out);}
};

/// EnumMatcher for 'match storage'
constexpr NumberMatcher kStorageMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(core::AddressSpace::kStorage)) {
      return Number(static_cast<uint32_t>(core::AddressSpace::kStorage));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("storage");
  }
};

/// EnumMatcher for 'match workgroup_or_storage'
constexpr NumberMatcher kWorkgroupOrStorageMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::AddressSpace>(number.Value())) {
      case core::AddressSpace::kWorkgroup:
      case core::AddressSpace::kStorage:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("workgroup")<< style::Plain(" or ") << style::Enum("storage");
  }
};

/// EnumMatcher for 'match function_private_workgroup_storage'
constexpr NumberMatcher kFunctionPrivateWorkgroupStorageMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::AddressSpace>(number.Value())) {
      case core::AddressSpace::kFunction:
      case core::AddressSpace::kPrivate:
      case core::AddressSpace::kWorkgroup:
      case core::AddressSpace::kStorage:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("function")<< style::Plain(", ") << style::Enum("private")<< style::Plain(", ") << style::Enum("workgroup")<< style::Plain(" or ") << style::Enum("storage");
  }
};

/// EnumMatcher for 'match f32_texel_format'
constexpr NumberMatcher kF32TexelFormatMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::TexelFormat>(number.Value())) {
      case core::TexelFormat::kR8Unorm:
      case core::TexelFormat::kR8Snorm:
      case core::TexelFormat::kRg8Unorm:
      case core::TexelFormat::kRg8Snorm:
      case core::TexelFormat::kBgra8Unorm:
      case core::TexelFormat::kRgba8Unorm:
      case core::TexelFormat::kRgba8Snorm:
      case core::TexelFormat::kR16Unorm:
      case core::TexelFormat::kR16Snorm:
      case core::TexelFormat::kRg16Unorm:
      case core::TexelFormat::kRg16Snorm:
      case core::TexelFormat::kRgba16Unorm:
      case core::TexelFormat::kRgba16Snorm:
      case core::TexelFormat::kR16Float:
      case core::TexelFormat::kRg16Float:
      case core::TexelFormat::kRgba16Float:
      case core::TexelFormat::kR32Float:
      case core::TexelFormat::kRg32Float:
      case core::TexelFormat::kRgba32Float:
      case core::TexelFormat::kRgb10A2Unorm:
      case core::TexelFormat::kRg11B10Ufloat:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("r8unorm")<< style::Plain(", ") << style::Enum("r8snorm")<< style::Plain(", ") << style::Enum("rg8unorm")<< style::Plain(", ") << style::Enum("rg8snorm")<< style::Plain(", ") << style::Enum("bgra8unorm")<< style::Plain(", ") << style::Enum("rgba8unorm")<< style::Plain(", ") << style::Enum("rgba8snorm")<< style::Plain(", ") << style::Enum("r16unorm")<< style::Plain(", ") << style::Enum("r16snorm")<< style::Plain(", ") << style::Enum("rg16unorm")<< style::Plain(", ") << style::Enum("rg16snorm")<< style::Plain(", ") << style::Enum("rgba16unorm")<< style::Plain(", ") << style::Enum("rgba16snorm")<< style::Plain(", ") << style::Enum("r16float")<< style::Plain(", ") << style::Enum("rg16float")<< style::Plain(", ") << style::Enum("rgba16float")<< style::Plain(", ") << style::Enum("r32float")<< style::Plain(", ") << style::Enum("rg32float")<< style::Plain(", ") << style::Enum("rgba32float")<< style::Plain(", ") << style::Enum("rgb10a2unorm")<< style::Plain(" or ") << style::Enum("rg11b10ufloat");
  }
};

/// EnumMatcher for 'match i32_texel_format'
constexpr NumberMatcher kI32TexelFormatMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::TexelFormat>(number.Value())) {
      case core::TexelFormat::kR8Sint:
      case core::TexelFormat::kRg8Sint:
      case core::TexelFormat::kRgba8Sint:
      case core::TexelFormat::kR16Sint:
      case core::TexelFormat::kRg16Sint:
      case core::TexelFormat::kRgba16Sint:
      case core::TexelFormat::kR32Sint:
      case core::TexelFormat::kRg32Sint:
      case core::TexelFormat::kRgba32Sint:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("r8sint")<< style::Plain(", ") << style::Enum("rg8sint")<< style::Plain(", ") << style::Enum("rgba8sint")<< style::Plain(", ") << style::Enum("r16sint")<< style::Plain(", ") << style::Enum("rg16sint")<< style::Plain(", ") << style::Enum("rgba16sint")<< style::Plain(", ") << style::Enum("r32sint")<< style::Plain(", ") << style::Enum("rg32sint")<< style::Plain(" or ") << style::Enum("rgba32sint");
  }
};

/// EnumMatcher for 'match u32_texel_format'
constexpr NumberMatcher kU32TexelFormatMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::TexelFormat>(number.Value())) {
      case core::TexelFormat::kR8Uint:
      case core::TexelFormat::kRg8Uint:
      case core::TexelFormat::kR16Uint:
      case core::TexelFormat::kRg16Uint:
      case core::TexelFormat::kRgba8Uint:
      case core::TexelFormat::kRgba16Uint:
      case core::TexelFormat::kR32Uint:
      case core::TexelFormat::kRg32Uint:
      case core::TexelFormat::kRgba32Uint:
      case core::TexelFormat::kRgb10A2Uint:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("r8uint")<< style::Plain(", ") << style::Enum("rg8uint")<< style::Plain(", ") << style::Enum("r16uint")<< style::Plain(", ") << style::Enum("rg16uint")<< style::Plain(", ") << style::Enum("rgba8uint")<< style::Plain(", ") << style::Enum("rgba16uint")<< style::Plain(", ") << style::Enum("r32uint")<< style::Plain(", ") << style::Enum("rg32uint")<< style::Plain(", ") << style::Enum("rgba32uint")<< style::Plain(" or ") << style::Enum("rgb10a2uint");
  }
};

/// EnumMatcher for 'match read_write'
constexpr NumberMatcher kReadWriteMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(core::Access::kReadWrite)) {
      return Number(static_cast<uint32_t>(core::Access::kReadWrite));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("read_write");
  }
};

/// EnumMatcher for 'match readable'
constexpr NumberMatcher kReadableMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::Access>(number.Value())) {
      case core::Access::kRead:
      case core::Access::kReadWrite:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("read")<< style::Plain(" or ") << style::Enum("read_write");
  }
};

/// EnumMatcher for 'match writable'
constexpr NumberMatcher kWritableMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<core::Access>(number.Value())) {
      case core::Access::kWrite:
      case core::Access::kReadWrite:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("write")<< style::Plain(" or ") << style::Enum("read_write");
  }
};

/// EnumMatcher for 'match dim_1d'
constexpr NumberMatcher kDim1DMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Dim::kD1)) {
      return Number(static_cast<uint32_t>(spirv::type::Dim::kD1));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("d1");
  }
};

/// EnumMatcher for 'match dim_2d'
constexpr NumberMatcher kDim2DMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Dim::kD2)) {
      return Number(static_cast<uint32_t>(spirv::type::Dim::kD2));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("d2");
  }
};

/// EnumMatcher for 'match dim_3d'
constexpr NumberMatcher kDim3DMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Dim::kD3)) {
      return Number(static_cast<uint32_t>(spirv::type::Dim::kD3));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("d3");
  }
};

/// EnumMatcher for 'match dim_cube'
constexpr NumberMatcher kDimCubeMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Dim::kCube)) {
      return Number(static_cast<uint32_t>(spirv::type::Dim::kCube));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Cube");
  }
};

/// EnumMatcher for 'match dim_buffer'
constexpr NumberMatcher kDimBufferMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Dim::kBuffer)) {
      return Number(static_cast<uint32_t>(spirv::type::Dim::kBuffer));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Buffer");
  }
};

/// EnumMatcher for 'match dim_subpass'
constexpr NumberMatcher kDimSubpassMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Dim::kSubpassData)) {
      return Number(static_cast<uint32_t>(spirv::type::Dim::kSubpassData));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("SubpassData");
  }
};

/// EnumMatcher for 'match dim_1d_2d_3d_or_cube'
constexpr NumberMatcher kDim1D2D3DOrCubeMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<spirv::type::Dim>(number.Value())) {
      case spirv::type::Dim::kD1:
      case spirv::type::Dim::kD2:
      case spirv::type::Dim::kD3:
      case spirv::type::Dim::kCube:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("d1")<< style::Plain(", ") << style::Enum("d2")<< style::Plain(", ") << style::Enum("d3")<< style::Plain(" or ") << style::Enum("Cube");
  }
};

/// EnumMatcher for 'match single_sampled'
constexpr NumberMatcher kSingleSampledMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Multisampled::kSingleSampled)) {
      return Number(static_cast<uint32_t>(spirv::type::Multisampled::kSingleSampled));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("SingleSampled");
  }
};

/// EnumMatcher for 'match multi_sampled'
constexpr NumberMatcher kMultiSampledMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Multisampled::kMultisampled)) {
      return Number(static_cast<uint32_t>(spirv::type::Multisampled::kMultisampled));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Multisampled");
  }
};

/// EnumMatcher for 'match is_depth'
constexpr NumberMatcher kIsDepthMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Depth::kDepth)) {
      return Number(static_cast<uint32_t>(spirv::type::Depth::kDepth));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Depth");
  }
};

/// EnumMatcher for 'match non_depth'
constexpr NumberMatcher kNonDepthMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<spirv::type::Depth>(number.Value())) {
      case spirv::type::Depth::kNotDepth:
      case spirv::type::Depth::kUnknown:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("NotDepth")<< style::Plain(" or ") << style::Enum("Unknown");
  }
};

/// EnumMatcher for 'match any_depth'
constexpr NumberMatcher kAnyDepthMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<spirv::type::Depth>(number.Value())) {
      case spirv::type::Depth::kDepth:
      case spirv::type::Depth::kNotDepth:
      case spirv::type::Depth::kUnknown:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Depth")<< style::Plain(", ") << style::Enum("NotDepth")<< style::Plain(" or ") << style::Enum("Unknown");
  }
};

/// EnumMatcher for 'match is_arrayed'
constexpr NumberMatcher kIsArrayedMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Arrayed::kArrayed)) {
      return Number(static_cast<uint32_t>(spirv::type::Arrayed::kArrayed));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Arrayed");
  }
};

/// EnumMatcher for 'match non_arrayed'
constexpr NumberMatcher kNonArrayedMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Arrayed::kNonArrayed)) {
      return Number(static_cast<uint32_t>(spirv::type::Arrayed::kNonArrayed));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("NonArrayed");
  }
};

/// EnumMatcher for 'match any_arrayed'
constexpr NumberMatcher kAnyArrayedMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    switch (static_cast<spirv::type::Arrayed>(number.Value())) {
      case spirv::type::Arrayed::kArrayed:
      case spirv::type::Arrayed::kNonArrayed:
        return number;
      default:
        return Number::invalid;
    }
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("Arrayed")<< style::Plain(" or ") << style::Enum("NonArrayed");
  }
};

/// EnumMatcher for 'match sampling_compatible'
constexpr NumberMatcher kSamplingCompatibleMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Sampled::kSamplingCompatible)) {
      return Number(static_cast<uint32_t>(spirv::type::Sampled::kSamplingCompatible));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("SamplingCompatible");
  }
};

/// EnumMatcher for 'match rw_op_compatible'
constexpr NumberMatcher kRwOpCompatibleMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(spirv::type::Sampled::kReadWriteOpCompatible)) {
      return Number(static_cast<uint32_t>(spirv::type::Sampled::kReadWriteOpCompatible));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("ReadWriteOpCompatible");
  }
};

/// EnumMatcher for 'match subgroup_matrix_kind_left'
constexpr NumberMatcher kSubgroupMatrixKindLeftMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(core::SubgroupMatrixKind::kLeft)) {
      return Number(static_cast<uint32_t>(core::SubgroupMatrixKind::kLeft));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("left");
  }
};

/// EnumMatcher for 'match subgroup_matrix_kind_right'
constexpr NumberMatcher kSubgroupMatrixKindRightMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(core::SubgroupMatrixKind::kRight)) {
      return Number(static_cast<uint32_t>(core::SubgroupMatrixKind::kRight));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("right");
  }
};

/// EnumMatcher for 'match subgroup_matrix_kind_result'
constexpr NumberMatcher kSubgroupMatrixKindResultMatcher {
/* match */ [](MatchState&, Number number) -> Number {
    if (number.IsAny() || number.Value() == static_cast<uint32_t>(core::SubgroupMatrixKind::kResult)) {
      return Number(static_cast<uint32_t>(core::SubgroupMatrixKind::kResult));
    }
    return Number::invalid;
  },
/* print */ [](MatchState*, StyledText& out) {
  out<< style::Enum("result");
  }
};

/// Type and number matchers

/// The template types, types, and type matchers
constexpr TypeMatcher kTypeMatchers[] = {
  /* [0] */ TemplateTypeMatcher<0>::matcher,
  /* [1] */ TemplateTypeMatcher<1>::matcher,
  /* [2] */ TemplateTypeMatcher<2>::matcher,
  /* [3] */ TemplateTypeMatcher<3>::matcher,
  /* [4] */ TemplateTypeMatcher<4>::matcher,
  /* [5] */ TemplateTypeMatcher<5>::matcher,
  /* [6] */ TemplateTypeMatcher<6>::matcher,
  /* [7] */ kBoolMatcher,
  /* [8] */ kF32Matcher,
  /* [9] */ kF16Matcher,
  /* [10] */ kI32Matcher,
  /* [11] */ kU32Matcher,
  /* [12] */ kI8Matcher,
  /* [13] */ kU8Matcher,
  /* [14] */ kVec2Matcher,
  /* [15] */ kVec3Matcher,
  /* [16] */ kVec4Matcher,
  /* [17] */ kMat2X2Matcher,
  /* [18] */ kMat2X3Matcher,
  /* [19] */ kMat2X4Matcher,
  /* [20] */ kMat3X2Matcher,
  /* [21] */ kMat3X3Matcher,
  /* [22] */ kMat3X4Matcher,
  /* [23] */ kMat4X2Matcher,
  /* [24] */ kMat4X3Matcher,
  /* [25] */ kMat4X4Matcher,
  /* [26] */ kVecMatcher,
  /* [27] */ kMatMatcher,
  /* [28] */ kAtomicMatcher,
  /* [29] */ kSamplerMatcher,
  /* [30] */ kSamplerComparisonMatcher,
  /* [31] */ kPtrMatcher,
  /* [32] */ kStructWithRuntimeArrayMatcher,
  /* [33] */ kImageMatcher,
  /* [34] */ kSampledImageMatcher,
  /* [35] */ kSubgroupMatrixMatcher,
  /* [36] */ kF32F16Matcher,
  /* [37] */ kIu32Matcher,
  /* [38] */ kFiu32Matcher,
  /* [39] */ kFiu32F16Matcher,
  /* [40] */ kScalarMatcher,
  /* [41] */ kIu32Iu8Matcher,
  /* [42] */ kIu8Matcher,
  /* [43] */ kSamplersMatcher,
};

/// The template numbers, and number matchers
constexpr NumberMatcher kNumberMatchers[] = {
  /* [0] */ TemplateNumberMatcher<0>::matcher,
  /* [1] */ TemplateNumberMatcher<1>::matcher,
  /* [2] */ TemplateNumberMatcher<2>::matcher,
  /* [3] */ TemplateNumberMatcher<3>::matcher,
  /* [4] */ TemplateNumberMatcher<4>::matcher,
  /* [5] */ TemplateNumberMatcher<5>::matcher,
  /* [6] */ TemplateNumberMatcher<6>::matcher,
  /* [7] */ kStorageMatcher,
  /* [8] */ kWorkgroupOrStorageMatcher,
  /* [9] */ kFunctionPrivateWorkgroupStorageMatcher,
  /* [10] */ kF32TexelFormatMatcher,
  /* [11] */ kI32TexelFormatMatcher,
  /* [12] */ kU32TexelFormatMatcher,
  /* [13] */ kReadWriteMatcher,
  /* [14] */ kReadableMatcher,
  /* [15] */ kWritableMatcher,
  /* [16] */ kDim1DMatcher,
  /* [17] */ kDim2DMatcher,
  /* [18] */ kDim3DMatcher,
  /* [19] */ kDimCubeMatcher,
  /* [20] */ kDimBufferMatcher,
  /* [21] */ kDimSubpassMatcher,
  /* [22] */ kDim1D2D3DOrCubeMatcher,
  /* [23] */ kSingleSampledMatcher,
  /* [24] */ kMultiSampledMatcher,
  /* [25] */ kIsDepthMatcher,
  /* [26] */ kNonDepthMatcher,
  /* [27] */ kAnyDepthMatcher,
  /* [28] */ kIsArrayedMatcher,
  /* [29] */ kNonArrayedMatcher,
  /* [30] */ kAnyArrayedMatcher,
  /* [31] */ kSamplingCompatibleMatcher,
  /* [32] */ kRwOpCompatibleMatcher,
  /* [33] */ kSubgroupMatrixKindLeftMatcher,
  /* [34] */ kSubgroupMatrixKindRightMatcher,
  /* [35] */ kSubgroupMatrixKindResultMatcher,
};

constexpr MatcherIndex kMatcherIndices[] = {
  /* [0] */ MatcherIndex(34),
  /* [1] */ MatcherIndex(33),
  /* [2] */ MatcherIndex(8),
  /* [3] */ MatcherIndex(17),
  /* [4] */ MatcherIndex(27),
  /* [5] */ MatcherIndex(29),
  /* [6] */ MatcherIndex(23),
  /* [7] */ MatcherIndex(31),
  /* [8] */ MatcherIndex(0),
  /* [9] */ MatcherIndex(14),
  /* [10] */ MatcherIndex(8),
  /* [11] */ MatcherIndex(34),
  /* [12] */ MatcherIndex(33),
  /* [13] */ MatcherIndex(8),
  /* [14] */ MatcherIndex(17),
  /* [15] */ MatcherIndex(27),
  /* [16] */ MatcherIndex(28),
  /* [17] */ MatcherIndex(23),
  /* [18] */ MatcherIndex(31),
  /* [19] */ MatcherIndex(0),
  /* [20] */ MatcherIndex(14),
  /* [21] */ MatcherIndex(2),
  /* [22] */ MatcherIndex(34),
  /* [23] */ MatcherIndex(33),
  /* [24] */ MatcherIndex(8),
  /* [25] */ MatcherIndex(19),
  /* [26] */ MatcherIndex(27),
  /* [27] */ MatcherIndex(29),
  /* [28] */ MatcherIndex(23),
  /* [29] */ MatcherIndex(31),
  /* [30] */ MatcherIndex(0),
  /* [31] */ MatcherIndex(14),
  /* [32] */ MatcherIndex(1),
  /* [33] */ MatcherIndex(34),
  /* [34] */ MatcherIndex(33),
  /* [35] */ MatcherIndex(8),
  /* [36] */ MatcherIndex(19),
  /* [37] */ MatcherIndex(27),
  /* [38] */ MatcherIndex(28),
  /* [39] */ MatcherIndex(23),
  /* [40] */ MatcherIndex(31),
  /* [41] */ MatcherIndex(0),
  /* [42] */ MatcherIndex(14),
  /* [43] */ MatcherIndex(0),
  /* [44] */ MatcherIndex(34),
  /* [45] */ MatcherIndex(33),
  /* [46] */ MatcherIndex(0),
  /* [47] */ MatcherIndex(17),
  /* [48] */ MatcherIndex(26),
  /* [49] */ MatcherIndex(29),
  /* [50] */ MatcherIndex(23),
  /* [51] */ MatcherIndex(31),
  /* [52] */ MatcherIndex(2),
  /* [53] */ MatcherIndex(14),
  /* [54] */ MatcherIndex(34),
  /* [55] */ MatcherIndex(33),
  /* [56] */ MatcherIndex(0),
  /* [57] */ MatcherIndex(17),
  /* [58] */ MatcherIndex(26),
  /* [59] */ MatcherIndex(29),
  /* [60] */ MatcherIndex(23),
  /* [61] */ MatcherIndex(31),
  /* [62] */ MatcherIndex(3),
  /* [63] */ MatcherIndex(14),
  /* [64] */ MatcherIndex(34),
  /* [65] */ MatcherIndex(33),
  /* [66] */ MatcherIndex(0),
  /* [67] */ MatcherIndex(17),
  /* [68] */ MatcherIndex(26),
  /* [69] */ MatcherIndex(28),
  /* [70] */ MatcherIndex(23),
  /* [71] */ MatcherIndex(31),
  /* [72] */ MatcherIndex(2),
  /* [73] */ MatcherIndex(14),
  /* [74] */ MatcherIndex(34),
  /* [75] */ MatcherIndex(33),
  /* [76] */ MatcherIndex(0),
  /* [77] */ MatcherIndex(17),
  /* [78] */ MatcherIndex(26),
  /* [79] */ MatcherIndex(28),
  /* [80] */ MatcherIndex(23),
  /* [81] */ MatcherIndex(31),
  /* [82] */ MatcherIndex(3),
  /* [83] */ MatcherIndex(14),
  /* [84] */ MatcherIndex(34),
  /* [85] */ MatcherIndex(33),
  /* [86] */ MatcherIndex(0),
  /* [87] */ MatcherIndex(19),
  /* [88] */ MatcherIndex(26),
  /* [89] */ MatcherIndex(29),
  /* [90] */ MatcherIndex(23),
  /* [91] */ MatcherIndex(31),
  /* [92] */ MatcherIndex(2),
  /* [93] */ MatcherIndex(14),
  /* [94] */ MatcherIndex(34),
  /* [95] */ MatcherIndex(33),
  /* [96] */ MatcherIndex(0),
  /* [97] */ MatcherIndex(19),
  /* [98] */ MatcherIndex(26),
  /* [99] */ MatcherIndex(28),
  /* [100] */ MatcherIndex(23),
  /* [101] */ MatcherIndex(31),
  /* [102] */ MatcherIndex(2),
  /* [103] */ MatcherIndex(14),
  /* [104] */ MatcherIndex(34),
  /* [105] */ MatcherIndex(33),
  /* [106] */ MatcherIndex(8),
  /* [107] */ MatcherIndex(17),
  /* [108] */ MatcherIndex(25),
  /* [109] */ MatcherIndex(29),
  /* [110] */ MatcherIndex(23),
  /* [111] */ MatcherIndex(31),
  /* [112] */ MatcherIndex(1),
  /* [113] */ MatcherIndex(14),
  /* [114] */ MatcherIndex(34),
  /* [115] */ MatcherIndex(33),
  /* [116] */ MatcherIndex(8),
  /* [117] */ MatcherIndex(17),
  /* [118] */ MatcherIndex(25),
  /* [119] */ MatcherIndex(29),
  /* [120] */ MatcherIndex(23),
  /* [121] */ MatcherIndex(31),
  /* [122] */ MatcherIndex(2),
  /* [123] */ MatcherIndex(14),
  /* [124] */ MatcherIndex(34),
  /* [125] */ MatcherIndex(33),
  /* [126] */ MatcherIndex(8),
  /* [127] */ MatcherIndex(17),
  /* [128] */ MatcherIndex(25),
  /* [129] */ MatcherIndex(28),
  /* [130] */ MatcherIndex(23),
  /* [131] */ MatcherIndex(31),
  /* [132] */ MatcherIndex(1),
  /* [133] */ MatcherIndex(14),
  /* [134] */ MatcherIndex(34),
  /* [135] */ MatcherIndex(33),
  /* [136] */ MatcherIndex(8),
  /* [137] */ MatcherIndex(17),
  /* [138] */ MatcherIndex(25),
  /* [139] */ MatcherIndex(28),
  /* [140] */ MatcherIndex(23),
  /* [141] */ MatcherIndex(31),
  /* [142] */ MatcherIndex(2),
  /* [143] */ MatcherIndex(14),
  /* [144] */ MatcherIndex(34),
  /* [145] */ MatcherIndex(33),
  /* [146] */ MatcherIndex(8),
  /* [147] */ MatcherIndex(19),
  /* [148] */ MatcherIndex(25),
  /* [149] */ MatcherIndex(29),
  /* [150] */ MatcherIndex(23),
  /* [151] */ MatcherIndex(31),
  /* [152] */ MatcherIndex(1),
  /* [153] */ MatcherIndex(14),
  /* [154] */ MatcherIndex(34),
  /* [155] */ MatcherIndex(33),
  /* [156] */ MatcherIndex(8),
  /* [157] */ MatcherIndex(19),
  /* [158] */ MatcherIndex(25),
  /* [159] */ MatcherIndex(28),
  /* [160] */ MatcherIndex(23),
  /* [161] */ MatcherIndex(31),
  /* [162] */ MatcherIndex(1),
  /* [163] */ MatcherIndex(14),
  /* [164] */ MatcherIndex(34),
  /* [165] */ MatcherIndex(33),
  /* [166] */ MatcherIndex(0),
  /* [167] */ MatcherIndex(16),
  /* [168] */ MatcherIndex(26),
  /* [169] */ MatcherIndex(29),
  /* [170] */ MatcherIndex(23),
  /* [171] */ MatcherIndex(31),
  /* [172] */ MatcherIndex(1),
  /* [173] */ MatcherIndex(14),
  /* [174] */ MatcherIndex(34),
  /* [175] */ MatcherIndex(33),
  /* [176] */ MatcherIndex(0),
  /* [177] */ MatcherIndex(17),
  /* [178] */ MatcherIndex(26),
  /* [179] */ MatcherIndex(29),
  /* [180] */ MatcherIndex(23),
  /* [181] */ MatcherIndex(31),
  /* [182] */ MatcherIndex(1),
  /* [183] */ MatcherIndex(14),
  /* [184] */ MatcherIndex(34),
  /* [185] */ MatcherIndex(33),
  /* [186] */ MatcherIndex(0),
  /* [187] */ MatcherIndex(17),
  /* [188] */ MatcherIndex(26),
  /* [189] */ MatcherIndex(28),
  /* [190] */ MatcherIndex(23),
  /* [191] */ MatcherIndex(31),
  /* [192] */ MatcherIndex(1),
  /* [193] */ MatcherIndex(14),
  /* [194] */ MatcherIndex(34),
  /* [195] */ MatcherIndex(33),
  /* [196] */ MatcherIndex(0),
  /* [197] */ MatcherIndex(18),
  /* [198] */ MatcherIndex(26),
  /* [199] */ MatcherIndex(29),
  /* [200] */ MatcherIndex(23),
  /* [201] */ MatcherIndex(31),
  /* [202] */ MatcherIndex(1),
  /* [203] */ MatcherIndex(14),
  /* [204] */ MatcherIndex(34),
  /* [205] */ MatcherIndex(33),
  /* [206] */ MatcherIndex(0),
  /* [207] */ MatcherIndex(18),
  /* [208] */ MatcherIndex(26),
  /* [209] */ MatcherIndex(29),
  /* [210] */ MatcherIndex(23),
  /* [211] */ MatcherIndex(31),
  /* [212] */ MatcherIndex(2),
  /* [213] */ MatcherIndex(14),
  /* [214] */ MatcherIndex(34),
  /* [215] */ MatcherIndex(33),
  /* [216] */ MatcherIndex(0),
  /* [217] */ MatcherIndex(19),
  /* [218] */ MatcherIndex(26),
  /* [219] */ MatcherIndex(29),
  /* [220] */ MatcherIndex(23),
  /* [221] */ MatcherIndex(31),
  /* [222] */ MatcherIndex(1),
  /* [223] */ MatcherIndex(14),
  /* [224] */ MatcherIndex(34),
  /* [225] */ MatcherIndex(33),
  /* [226] */ MatcherIndex(0),
  /* [227] */ MatcherIndex(19),
  /* [228] */ MatcherIndex(26),
  /* [229] */ MatcherIndex(28),
  /* [230] */ MatcherIndex(23),
  /* [231] */ MatcherIndex(31),
  /* [232] */ MatcherIndex(1),
  /* [233] */ MatcherIndex(14),
  /* [234] */ MatcherIndex(34),
  /* [235] */ MatcherIndex(33),
  /* [236] */ MatcherIndex(8),
  /* [237] */ MatcherIndex(17),
  /* [238] */ MatcherIndex(25),
  /* [239] */ MatcherIndex(29),
  /* [240] */ MatcherIndex(23),
  /* [241] */ MatcherIndex(31),
  /* [242] */ MatcherIndex(0),
  /* [243] */ MatcherIndex(14),
  /* [244] */ MatcherIndex(34),
  /* [245] */ MatcherIndex(33),
  /* [246] */ MatcherIndex(8),
  /* [247] */ MatcherIndex(19),
  /* [248] */ MatcherIndex(25),
  /* [249] */ MatcherIndex(29),
  /* [250] */ MatcherIndex(23),
  /* [251] */ MatcherIndex(31),
  /* [252] */ MatcherIndex(0),
  /* [253] */ MatcherIndex(14),
  /* [254] */ MatcherIndex(34),
  /* [255] */ MatcherIndex(33),
  /* [256] */ MatcherIndex(8),
  /* [257] */ MatcherIndex(17),
  /* [258] */ MatcherIndex(25),
  /* [259] */ MatcherIndex(28),
  /* [260] */ MatcherIndex(23),
  /* [261] */ MatcherIndex(31),
  /* [262] */ MatcherIndex(0),
  /* [263] */ MatcherIndex(14),
  /* [264] */ MatcherIndex(34),
  /* [265] */ MatcherIndex(33),
  /* [266] */ MatcherIndex(8),
  /* [267] */ MatcherIndex(19),
  /* [268] */ MatcherIndex(25),
  /* [269] */ MatcherIndex(28),
  /* [270] */ MatcherIndex(23),
  /* [271] */ MatcherIndex(31),
  /* [272] */ MatcherIndex(0),
  /* [273] */ MatcherIndex(14),
  /* [274] */ MatcherIndex(34),
  /* [275] */ MatcherIndex(33),
  /* [276] */ MatcherIndex(8),
  /* [277] */ MatcherIndex(17),
  /* [278] */ MatcherIndex(27),
  /* [279] */ MatcherIndex(29),
  /* [280] */ MatcherIndex(23),
  /* [281] */ MatcherIndex(31),
  /* [282] */ MatcherIndex(1),
  /* [283] */ MatcherIndex(14),
  /* [284] */ MatcherIndex(34),
  /* [285] */ MatcherIndex(33),
  /* [286] */ MatcherIndex(8),
  /* [287] */ MatcherIndex(17),
  /* [288] */ MatcherIndex(27),
  /* [289] */ MatcherIndex(28),
  /* [290] */ MatcherIndex(23),
  /* [291] */ MatcherIndex(31),
  /* [292] */ MatcherIndex(1),
  /* [293] */ MatcherIndex(14),
  /* [294] */ MatcherIndex(33),
  /* [295] */ MatcherIndex(0),
  /* [296] */ MatcherIndex(16),
  /* [297] */ MatcherIndex(26),
  /* [298] */ MatcherIndex(29),
  /* [299] */ MatcherIndex(23),
  /* [300] */ MatcherIndex(31),
  /* [301] */ MatcherIndex(2),
  /* [302] */ MatcherIndex(14),
  /* [303] */ MatcherIndex(33),
  /* [304] */ MatcherIndex(0),
  /* [305] */ MatcherIndex(17),
  /* [306] */ MatcherIndex(26),
  /* [307] */ MatcherIndex(29),
  /* [308] */ MatcherIndex(24),
  /* [309] */ MatcherIndex(31),
  /* [310] */ MatcherIndex(2),
  /* [311] */ MatcherIndex(14),
  /* [312] */ MatcherIndex(33),
  /* [313] */ MatcherIndex(8),
  /* [314] */ MatcherIndex(17),
  /* [315] */ MatcherIndex(25),
  /* [316] */ MatcherIndex(29),
  /* [317] */ MatcherIndex(24),
  /* [318] */ MatcherIndex(31),
  /* [319] */ MatcherIndex(1),
  /* [320] */ MatcherIndex(14),
  /* [321] */ MatcherIndex(33),
  /* [322] */ MatcherIndex(0),
  /* [323] */ MatcherIndex(16),
  /* [324] */ MatcherIndex(26),
  /* [325] */ MatcherIndex(29),
  /* [326] */ MatcherIndex(23),
  /* [327] */ MatcherIndex(31),
  /* [328] */ MatcherIndex(3),
  /* [329] */ MatcherIndex(14),
  /* [330] */ MatcherIndex(33),
  /* [331] */ MatcherIndex(0),
  /* [332] */ MatcherIndex(18),
  /* [333] */ MatcherIndex(26),
  /* [334] */ MatcherIndex(29),
  /* [335] */ MatcherIndex(23),
  /* [336] */ MatcherIndex(31),
  /* [337] */ MatcherIndex(3),
  /* [338] */ MatcherIndex(14),
  /* [339] */ MatcherIndex(33),
  /* [340] */ MatcherIndex(0),
  /* [341] */ MatcherIndex(17),
  /* [342] */ MatcherIndex(26),
  /* [343] */ MatcherIndex(29),
  /* [344] */ MatcherIndex(24),
  /* [345] */ MatcherIndex(31),
  /* [346] */ MatcherIndex(3),
  /* [347] */ MatcherIndex(14),
  /* [348] */ MatcherIndex(33),
  /* [349] */ MatcherIndex(8),
  /* [350] */ MatcherIndex(17),
  /* [351] */ MatcherIndex(25),
  /* [352] */ MatcherIndex(29),
  /* [353] */ MatcherIndex(24),
  /* [354] */ MatcherIndex(31),
  /* [355] */ MatcherIndex(2),
  /* [356] */ MatcherIndex(14),
  /* [357] */ MatcherIndex(33),
  /* [358] */ MatcherIndex(1),
  /* [359] */ MatcherIndex(16),
  /* [360] */ MatcherIndex(26),
  /* [361] */ MatcherIndex(29),
  /* [362] */ MatcherIndex(23),
  /* [363] */ MatcherIndex(32),
  /* [364] */ MatcherIndex(2),
  /* [365] */ MatcherIndex(3),
  /* [366] */ MatcherIndex(33),
  /* [367] */ MatcherIndex(1),
  /* [368] */ MatcherIndex(20),
  /* [369] */ MatcherIndex(26),
  /* [370] */ MatcherIndex(29),
  /* [371] */ MatcherIndex(23),
  /* [372] */ MatcherIndex(32),
  /* [373] */ MatcherIndex(2),
  /* [374] */ MatcherIndex(3),
  /* [375] */ MatcherIndex(33),
  /* [376] */ MatcherIndex(1),
  /* [377] */ MatcherIndex(17),
  /* [378] */ MatcherIndex(26),
  /* [379] */ MatcherIndex(29),
  /* [380] */ MatcherIndex(23),
  /* [381] */ MatcherIndex(32),
  /* [382] */ MatcherIndex(2),
  /* [383] */ MatcherIndex(3),
  /* [384] */ MatcherIndex(33),
  /* [385] */ MatcherIndex(1),
  /* [386] */ MatcherIndex(17),
  /* [387] */ MatcherIndex(26),
  /* [388] */ MatcherIndex(28),
  /* [389] */ MatcherIndex(23),
  /* [390] */ MatcherIndex(32),
  /* [391] */ MatcherIndex(2),
  /* [392] */ MatcherIndex(3),
  /* [393] */ MatcherIndex(33),
  /* [394] */ MatcherIndex(1),
  /* [395] */ MatcherIndex(18),
  /* [396] */ MatcherIndex(26),
  /* [397] */ MatcherIndex(29),
  /* [398] */ MatcherIndex(23),
  /* [399] */ MatcherIndex(32),
  /* [400] */ MatcherIndex(2),
  /* [401] */ MatcherIndex(3),
  /* [402] */ MatcherIndex(33),
  /* [403] */ MatcherIndex(1),
  /* [404] */ MatcherIndex(19),
  /* [405] */ MatcherIndex(26),
  /* [406] */ MatcherIndex(29),
  /* [407] */ MatcherIndex(23),
  /* [408] */ MatcherIndex(32),
  /* [409] */ MatcherIndex(2),
  /* [410] */ MatcherIndex(3),
  /* [411] */ MatcherIndex(33),
  /* [412] */ MatcherIndex(1),
  /* [413] */ MatcherIndex(19),
  /* [414] */ MatcherIndex(26),
  /* [415] */ MatcherIndex(28),
  /* [416] */ MatcherIndex(23),
  /* [417] */ MatcherIndex(32),
  /* [418] */ MatcherIndex(2),
  /* [419] */ MatcherIndex(3),
  /* [420] */ MatcherIndex(33),
  /* [421] */ MatcherIndex(1),
  /* [422] */ MatcherIndex(17),
  /* [423] */ MatcherIndex(26),
  /* [424] */ MatcherIndex(29),
  /* [425] */ MatcherIndex(24),
  /* [426] */ MatcherIndex(2),
  /* [427] */ MatcherIndex(3),
  /* [428] */ MatcherIndex(4),
  /* [429] */ MatcherIndex(33),
  /* [430] */ MatcherIndex(8),
  /* [431] */ MatcherIndex(17),
  /* [432] */ MatcherIndex(25),
  /* [433] */ MatcherIndex(29),
  /* [434] */ MatcherIndex(23),
  /* [435] */ MatcherIndex(32),
  /* [436] */ MatcherIndex(1),
  /* [437] */ MatcherIndex(2),
  /* [438] */ MatcherIndex(33),
  /* [439] */ MatcherIndex(8),
  /* [440] */ MatcherIndex(17),
  /* [441] */ MatcherIndex(25),
  /* [442] */ MatcherIndex(28),
  /* [443] */ MatcherIndex(23),
  /* [444] */ MatcherIndex(32),
  /* [445] */ MatcherIndex(1),
  /* [446] */ MatcherIndex(2),
  /* [447] */ MatcherIndex(33),
  /* [448] */ MatcherIndex(8),
  /* [449] */ MatcherIndex(19),
  /* [450] */ MatcherIndex(25),
  /* [451] */ MatcherIndex(29),
  /* [452] */ MatcherIndex(23),
  /* [453] */ MatcherIndex(32),
  /* [454] */ MatcherIndex(1),
  /* [455] */ MatcherIndex(2),
  /* [456] */ MatcherIndex(33),
  /* [457] */ MatcherIndex(8),
  /* [458] */ MatcherIndex(19),
  /* [459] */ MatcherIndex(25),
  /* [460] */ MatcherIndex(28),
  /* [461] */ MatcherIndex(23),
  /* [462] */ MatcherIndex(32),
  /* [463] */ MatcherIndex(1),
  /* [464] */ MatcherIndex(2),
  /* [465] */ MatcherIndex(33),
  /* [466] */ MatcherIndex(8),
  /* [467] */ MatcherIndex(17),
  /* [468] */ MatcherIndex(25),
  /* [469] */ MatcherIndex(29),
  /* [470] */ MatcherIndex(24),
  /* [471] */ MatcherIndex(1),
  /* [472] */ MatcherIndex(2),
  /* [473] */ MatcherIndex(3),
  /* [474] */ MatcherIndex(33),
  /* [475] */ MatcherIndex(1),
  /* [476] */ MatcherIndex(16),
  /* [477] */ MatcherIndex(26),
  /* [478] */ MatcherIndex(29),
  /* [479] */ MatcherIndex(23),
  /* [480] */ MatcherIndex(3),
  /* [481] */ MatcherIndex(4),
  /* [482] */ MatcherIndex(5),
  /* [483] */ MatcherIndex(33),
  /* [484] */ MatcherIndex(1),
  /* [485] */ MatcherIndex(20),
  /* [486] */ MatcherIndex(26),
  /* [487] */ MatcherIndex(29),
  /* [488] */ MatcherIndex(23),
  /* [489] */ MatcherIndex(3),
  /* [490] */ MatcherIndex(4),
  /* [491] */ MatcherIndex(5),
  /* [492] */ MatcherIndex(33),
  /* [493] */ MatcherIndex(1),
  /* [494] */ MatcherIndex(17),
  /* [495] */ MatcherIndex(26),
  /* [496] */ MatcherIndex(29),
  /* [497] */ MatcherIndex(23),
  /* [498] */ MatcherIndex(3),
  /* [499] */ MatcherIndex(4),
  /* [500] */ MatcherIndex(5),
  /* [501] */ MatcherIndex(33),
  /* [502] */ MatcherIndex(1),
  /* [503] */ MatcherIndex(17),
  /* [504] */ MatcherIndex(26),
  /* [505] */ MatcherIndex(28),
  /* [506] */ MatcherIndex(23),
  /* [507] */ MatcherIndex(3),
  /* [508] */ MatcherIndex(4),
  /* [509] */ MatcherIndex(5),
  /* [510] */ MatcherIndex(33),
  /* [511] */ MatcherIndex(1),
  /* [512] */ MatcherIndex(18),
  /* [513] */ MatcherIndex(26),
  /* [514] */ MatcherIndex(29),
  /* [515] */ MatcherIndex(23),
  /* [516] */ MatcherIndex(3),
  /* [517] */ MatcherIndex(4),
  /* [518] */ MatcherIndex(5),
  /* [519] */ MatcherIndex(33),
  /* [520] */ MatcherIndex(1),
  /* [521] */ MatcherIndex(19),
  /* [522] */ MatcherIndex(26),
  /* [523] */ MatcherIndex(29),
  /* [524] */ MatcherIndex(23),
  /* [525] */ MatcherIndex(3),
  /* [526] */ MatcherIndex(4),
  /* [527] */ MatcherIndex(5),
  /* [528] */ MatcherIndex(33),
  /* [529] */ MatcherIndex(1),
  /* [530] */ MatcherIndex(19),
  /* [531] */ MatcherIndex(26),
  /* [532] */ MatcherIndex(28),
  /* [533] */ MatcherIndex(23),
  /* [534] */ MatcherIndex(3),
  /* [535] */ MatcherIndex(4),
  /* [536] */ MatcherIndex(5),
  /* [537] */ MatcherIndex(33),
  /* [538] */ MatcherIndex(8),
  /* [539] */ MatcherIndex(17),
  /* [540] */ MatcherIndex(25),
  /* [541] */ MatcherIndex(29),
  /* [542] */ MatcherIndex(23),
  /* [543] */ MatcherIndex(2),
  /* [544] */ MatcherIndex(3),
  /* [545] */ MatcherIndex(4),
  /* [546] */ MatcherIndex(33),
  /* [547] */ MatcherIndex(8),
  /* [548] */ MatcherIndex(17),
  /* [549] */ MatcherIndex(25),
  /* [550] */ MatcherIndex(28),
  /* [551] */ MatcherIndex(23),
  /* [552] */ MatcherIndex(2),
  /* [553] */ MatcherIndex(3),
  /* [554] */ MatcherIndex(4),
  /* [555] */ MatcherIndex(33),
  /* [556] */ MatcherIndex(8),
  /* [557] */ MatcherIndex(19),
  /* [558] */ MatcherIndex(25),
  /* [559] */ MatcherIndex(29),
  /* [560] */ MatcherIndex(23),
  /* [561] */ MatcherIndex(2),
  /* [562] */ MatcherIndex(3),
  /* [563] */ MatcherIndex(4),
  /* [564] */ MatcherIndex(33),
  /* [565] */ MatcherIndex(8),
  /* [566] */ MatcherIndex(19),
  /* [567] */ MatcherIndex(25),
  /* [568] */ MatcherIndex(28),
  /* [569] */ MatcherIndex(23),
  /* [570] */ MatcherIndex(2),
  /* [571] */ MatcherIndex(3),
  /* [572] */ MatcherIndex(4),
  /* [573] */ MatcherIndex(33),
  /* [574] */ MatcherIndex(1),
  /* [575] */ MatcherIndex(22),
  /* [576] */ MatcherIndex(2),
  /* [577] */ MatcherIndex(3),
  /* [578] */ MatcherIndex(23),
  /* [579] */ MatcherIndex(4),
  /* [580] */ MatcherIndex(5),
  /* [581] */ MatcherIndex(6),
  /* [582] */ MatcherIndex(33),
  /* [583] */ MatcherIndex(1),
  /* [584] */ MatcherIndex(17),
  /* [585] */ MatcherIndex(2),
  /* [586] */ MatcherIndex(3),
  /* [587] */ MatcherIndex(24),
  /* [588] */ MatcherIndex(4),
  /* [589] */ MatcherIndex(5),
  /* [590] */ MatcherIndex(6),
  /* [591] */ MatcherIndex(33),
  /* [592] */ MatcherIndex(8),
  /* [593] */ MatcherIndex(16),
  /* [594] */ MatcherIndex(26),
  /* [595] */ MatcherIndex(29),
  /* [596] */ MatcherIndex(23),
  /* [597] */ MatcherIndex(32),
  /* [598] */ MatcherIndex(0),
  /* [599] */ MatcherIndex(1),
  /* [600] */ MatcherIndex(33),
  /* [601] */ MatcherIndex(8),
  /* [602] */ MatcherIndex(20),
  /* [603] */ MatcherIndex(26),
  /* [604] */ MatcherIndex(29),
  /* [605] */ MatcherIndex(23),
  /* [606] */ MatcherIndex(32),
  /* [607] */ MatcherIndex(0),
  /* [608] */ MatcherIndex(1),
  /* [609] */ MatcherIndex(33),
  /* [610] */ MatcherIndex(10),
  /* [611] */ MatcherIndex(16),
  /* [612] */ MatcherIndex(26),
  /* [613] */ MatcherIndex(29),
  /* [614] */ MatcherIndex(23),
  /* [615] */ MatcherIndex(32),
  /* [616] */ MatcherIndex(0),
  /* [617] */ MatcherIndex(1),
  /* [618] */ MatcherIndex(33),
  /* [619] */ MatcherIndex(10),
  /* [620] */ MatcherIndex(20),
  /* [621] */ MatcherIndex(26),
  /* [622] */ MatcherIndex(29),
  /* [623] */ MatcherIndex(23),
  /* [624] */ MatcherIndex(32),
  /* [625] */ MatcherIndex(0),
  /* [626] */ MatcherIndex(1),
  /* [627] */ MatcherIndex(33),
  /* [628] */ MatcherIndex(11),
  /* [629] */ MatcherIndex(16),
  /* [630] */ MatcherIndex(26),
  /* [631] */ MatcherIndex(29),
  /* [632] */ MatcherIndex(23),
  /* [633] */ MatcherIndex(32),
  /* [634] */ MatcherIndex(0),
  /* [635] */ MatcherIndex(1),
  /* [636] */ MatcherIndex(33),
  /* [637] */ MatcherIndex(11),
  /* [638] */ MatcherIndex(20),
  /* [639] */ MatcherIndex(26),
  /* [640] */ MatcherIndex(29),
  /* [641] */ MatcherIndex(23),
  /* [642] */ MatcherIndex(32),
  /* [643] */ MatcherIndex(0),
  /* [644] */ MatcherIndex(1),
  /* [645] */ MatcherIndex(33),
  /* [646] */ MatcherIndex(8),
  /* [647] */ MatcherIndex(17),
  /* [648] */ MatcherIndex(26),
  /* [649] */ MatcherIndex(29),
  /* [650] */ MatcherIndex(23),
  /* [651] */ MatcherIndex(32),
  /* [652] */ MatcherIndex(0),
  /* [653] */ MatcherIndex(1),
  /* [654] */ MatcherIndex(33),
  /* [655] */ MatcherIndex(10),
  /* [656] */ MatcherIndex(17),
  /* [657] */ MatcherIndex(26),
  /* [658] */ MatcherIndex(29),
  /* [659] */ MatcherIndex(23),
  /* [660] */ MatcherIndex(32),
  /* [661] */ MatcherIndex(0),
  /* [662] */ MatcherIndex(1),
  /* [663] */ MatcherIndex(33),
  /* [664] */ MatcherIndex(11),
  /* [665] */ MatcherIndex(17),
  /* [666] */ MatcherIndex(26),
  /* [667] */ MatcherIndex(29),
  /* [668] */ MatcherIndex(23),
  /* [669] */ MatcherIndex(32),
  /* [670] */ MatcherIndex(0),
  /* [671] */ MatcherIndex(1),
  /* [672] */ MatcherIndex(33),
  /* [673] */ MatcherIndex(8),
  /* [674] */ MatcherIndex(17),
  /* [675] */ MatcherIndex(26),
  /* [676] */ MatcherIndex(28),
  /* [677] */ MatcherIndex(23),
  /* [678] */ MatcherIndex(32),
  /* [679] */ MatcherIndex(0),
  /* [680] */ MatcherIndex(1),
  /* [681] */ MatcherIndex(33),
  /* [682] */ MatcherIndex(10),
  /* [683] */ MatcherIndex(17),
  /* [684] */ MatcherIndex(26),
  /* [685] */ MatcherIndex(28),
  /* [686] */ MatcherIndex(23),
  /* [687] */ MatcherIndex(32),
  /* [688] */ MatcherIndex(0),
  /* [689] */ MatcherIndex(1),
  /* [690] */ MatcherIndex(33),
  /* [691] */ MatcherIndex(11),
  /* [692] */ MatcherIndex(17),
  /* [693] */ MatcherIndex(26),
  /* [694] */ MatcherIndex(28),
  /* [695] */ MatcherIndex(23),
  /* [696] */ MatcherIndex(32),
  /* [697] */ MatcherIndex(0),
  /* [698] */ MatcherIndex(1),
  /* [699] */ MatcherIndex(33),
  /* [700] */ MatcherIndex(8),
  /* [701] */ MatcherIndex(18),
  /* [702] */ MatcherIndex(26),
  /* [703] */ MatcherIndex(29),
  /* [704] */ MatcherIndex(23),
  /* [705] */ MatcherIndex(32),
  /* [706] */ MatcherIndex(0),
  /* [707] */ MatcherIndex(1),
  /* [708] */ MatcherIndex(33),
  /* [709] */ MatcherIndex(10),
  /* [710] */ MatcherIndex(18),
  /* [711] */ MatcherIndex(26),
  /* [712] */ MatcherIndex(29),
  /* [713] */ MatcherIndex(23),
  /* [714] */ MatcherIndex(32),
  /* [715] */ MatcherIndex(0),
  /* [716] */ MatcherIndex(1),
  /* [717] */ MatcherIndex(33),
  /* [718] */ MatcherIndex(11),
  /* [719] */ MatcherIndex(18),
  /* [720] */ MatcherIndex(26),
  /* [721] */ MatcherIndex(29),
  /* [722] */ MatcherIndex(23),
  /* [723] */ MatcherIndex(32),
  /* [724] */ MatcherIndex(0),
  /* [725] */ MatcherIndex(1),
  /* [726] */ MatcherIndex(33),
  /* [727] */ MatcherIndex(1),
  /* [728] */ MatcherIndex(21),
  /* [729] */ MatcherIndex(26),
  /* [730] */ MatcherIndex(29),
  /* [731] */ MatcherIndex(23),
  /* [732] */ MatcherIndex(32),
  /* [733] */ MatcherIndex(0),
  /* [734] */ MatcherIndex(3),
  /* [735] */ MatcherIndex(33),
  /* [736] */ MatcherIndex(8),
  /* [737] */ MatcherIndex(16),
  /* [738] */ MatcherIndex(26),
  /* [739] */ MatcherIndex(29),
  /* [740] */ MatcherIndex(23),
  /* [741] */ MatcherIndex(32),
  /* [742] */ MatcherIndex(10),
  /* [743] */ MatcherIndex(15),
  /* [744] */ MatcherIndex(8),
  /* [745] */ MatcherIndex(33),
  /* [746] */ MatcherIndex(8),
  /* [747] */ MatcherIndex(20),
  /* [748] */ MatcherIndex(26),
  /* [749] */ MatcherIndex(29),
  /* [750] */ MatcherIndex(23),
  /* [751] */ MatcherIndex(32),
  /* [752] */ MatcherIndex(10),
  /* [753] */ MatcherIndex(15),
  /* [754] */ MatcherIndex(1),
  /* [755] */ MatcherIndex(33),
  /* [756] */ MatcherIndex(10),
  /* [757] */ MatcherIndex(16),
  /* [758] */ MatcherIndex(26),
  /* [759] */ MatcherIndex(29),
  /* [760] */ MatcherIndex(23),
  /* [761] */ MatcherIndex(32),
  /* [762] */ MatcherIndex(11),
  /* [763] */ MatcherIndex(15),
  /* [764] */ MatcherIndex(0),
  /* [765] */ MatcherIndex(33),
  /* [766] */ MatcherIndex(10),
  /* [767] */ MatcherIndex(20),
  /* [768] */ MatcherIndex(26),
  /* [769] */ MatcherIndex(29),
  /* [770] */ MatcherIndex(23),
  /* [771] */ MatcherIndex(32),
  /* [772] */ MatcherIndex(11),
  /* [773] */ MatcherIndex(15),
  /* [774] */ MatcherIndex(2),
  /* [775] */ MatcherIndex(33),
  /* [776] */ MatcherIndex(11),
  /* [777] */ MatcherIndex(16),
  /* [778] */ MatcherIndex(26),
  /* [779] */ MatcherIndex(29),
  /* [780] */ MatcherIndex(23),
  /* [781] */ MatcherIndex(32),
  /* [782] */ MatcherIndex(12),
  /* [783] */ MatcherIndex(15),
  /* [784] */ MatcherIndex(33),
  /* [785] */ MatcherIndex(11),
  /* [786] */ MatcherIndex(20),
  /* [787] */ MatcherIndex(26),
  /* [788] */ MatcherIndex(29),
  /* [789] */ MatcherIndex(23),
  /* [790] */ MatcherIndex(32),
  /* [791] */ MatcherIndex(12),
  /* [792] */ MatcherIndex(15),
  /* [793] */ MatcherIndex(33),
  /* [794] */ MatcherIndex(8),
  /* [795] */ MatcherIndex(17),
  /* [796] */ MatcherIndex(26),
  /* [797] */ MatcherIndex(29),
  /* [798] */ MatcherIndex(23),
  /* [799] */ MatcherIndex(32),
  /* [800] */ MatcherIndex(10),
  /* [801] */ MatcherIndex(15),
  /* [802] */ MatcherIndex(33),
  /* [803] */ MatcherIndex(10),
  /* [804] */ MatcherIndex(17),
  /* [805] */ MatcherIndex(26),
  /* [806] */ MatcherIndex(29),
  /* [807] */ MatcherIndex(23),
  /* [808] */ MatcherIndex(32),
  /* [809] */ MatcherIndex(11),
  /* [810] */ MatcherIndex(15),
  /* [811] */ MatcherIndex(33),
  /* [812] */ MatcherIndex(11),
  /* [813] */ MatcherIndex(17),
  /* [814] */ MatcherIndex(26),
  /* [815] */ MatcherIndex(29),
  /* [816] */ MatcherIndex(23),
  /* [817] */ MatcherIndex(32),
  /* [818] */ MatcherIndex(12),
  /* [819] */ MatcherIndex(15),
  /* [820] */ MatcherIndex(33),
  /* [821] */ MatcherIndex(8),
  /* [822] */ MatcherIndex(17),
  /* [823] */ MatcherIndex(26),
  /* [824] */ MatcherIndex(28),
  /* [825] */ MatcherIndex(23),
  /* [826] */ MatcherIndex(32),
  /* [827] */ MatcherIndex(10),
  /* [828] */ MatcherIndex(15),
  /* [829] */ MatcherIndex(33),
  /* [830] */ MatcherIndex(10),
  /* [831] */ MatcherIndex(17),
  /* [832] */ MatcherIndex(26),
  /* [833] */ MatcherIndex(28),
  /* [834] */ MatcherIndex(23),
  /* [835] */ MatcherIndex(32),
  /* [836] */ MatcherIndex(11),
  /* [837] */ MatcherIndex(15),
  /* [838] */ MatcherIndex(33),
  /* [839] */ MatcherIndex(11),
  /* [840] */ MatcherIndex(17),
  /* [841] */ MatcherIndex(26),
  /* [842] */ MatcherIndex(28),
  /* [843] */ MatcherIndex(23),
  /* [844] */ MatcherIndex(32),
  /* [845] */ MatcherIndex(12),
  /* [846] */ MatcherIndex(15),
  /* [847] */ MatcherIndex(33),
  /* [848] */ MatcherIndex(8),
  /* [849] */ MatcherIndex(18),
  /* [850] */ MatcherIndex(26),
  /* [851] */ MatcherIndex(29),
  /* [852] */ MatcherIndex(23),
  /* [853] */ MatcherIndex(32),
  /* [854] */ MatcherIndex(10),
  /* [855] */ MatcherIndex(15),
  /* [856] */ MatcherIndex(33),
  /* [857] */ MatcherIndex(10),
  /* [858] */ MatcherIndex(18),
  /* [859] */ MatcherIndex(26),
  /* [860] */ MatcherIndex(29),
  /* [861] */ MatcherIndex(23),
  /* [862] */ MatcherIndex(32),
  /* [863] */ MatcherIndex(11),
  /* [864] */ MatcherIndex(15),
  /* [865] */ MatcherIndex(33),
  /* [866] */ MatcherIndex(11),
  /* [867] */ MatcherIndex(18),
  /* [868] */ MatcherIndex(26),
  /* [869] */ MatcherIndex(29),
  /* [870] */ MatcherIndex(23),
  /* [871] */ MatcherIndex(32),
  /* [872] */ MatcherIndex(12),
  /* [873] */ MatcherIndex(15),
  /* [874] */ MatcherIndex(33),
  /* [875] */ MatcherIndex(1),
  /* [876] */ MatcherIndex(16),
  /* [877] */ MatcherIndex(26),
  /* [878] */ MatcherIndex(29),
  /* [879] */ MatcherIndex(23),
  /* [880] */ MatcherIndex(31),
  /* [881] */ MatcherIndex(2),
  /* [882] */ MatcherIndex(14),
  /* [883] */ MatcherIndex(33),
  /* [884] */ MatcherIndex(1),
  /* [885] */ MatcherIndex(17),
  /* [886] */ MatcherIndex(26),
  /* [887] */ MatcherIndex(30),
  /* [888] */ MatcherIndex(23),
  /* [889] */ MatcherIndex(31),
  /* [890] */ MatcherIndex(2),
  /* [891] */ MatcherIndex(14),
  /* [892] */ MatcherIndex(33),
  /* [893] */ MatcherIndex(0),
  /* [894] */ MatcherIndex(19),
  /* [895] */ MatcherIndex(26),
  /* [896] */ MatcherIndex(30),
  /* [897] */ MatcherIndex(23),
  /* [898] */ MatcherIndex(31),
  /* [899] */ MatcherIndex(1),
  /* [900] */ MatcherIndex(14),
  /* [901] */ MatcherIndex(33),
  /* [902] */ MatcherIndex(8),
  /* [903] */ MatcherIndex(17),
  /* [904] */ MatcherIndex(25),
  /* [905] */ MatcherIndex(30),
  /* [906] */ MatcherIndex(23),
  /* [907] */ MatcherIndex(31),
  /* [908] */ MatcherIndex(0),
  /* [909] */ MatcherIndex(14),
  /* [910] */ MatcherIndex(33),
  /* [911] */ MatcherIndex(8),
  /* [912] */ MatcherIndex(19),
  /* [913] */ MatcherIndex(25),
  /* [914] */ MatcherIndex(30),
  /* [915] */ MatcherIndex(23),
  /* [916] */ MatcherIndex(31),
  /* [917] */ MatcherIndex(0),
  /* [918] */ MatcherIndex(14),
  /* [919] */ MatcherIndex(33),
  /* [920] */ MatcherIndex(1),
  /* [921] */ MatcherIndex(16),
  /* [922] */ MatcherIndex(26),
  /* [923] */ MatcherIndex(29),
  /* [924] */ MatcherIndex(23),
  /* [925] */ MatcherIndex(31),
  /* [926] */ MatcherIndex(3),
  /* [927] */ MatcherIndex(14),
  /* [928] */ MatcherIndex(33),
  /* [929] */ MatcherIndex(1),
  /* [930] */ MatcherIndex(17),
  /* [931] */ MatcherIndex(26),
  /* [932] */ MatcherIndex(30),
  /* [933] */ MatcherIndex(23),
  /* [934] */ MatcherIndex(31),
  /* [935] */ MatcherIndex(3),
  /* [936] */ MatcherIndex(14),
  /* [937] */ MatcherIndex(33),
  /* [938] */ MatcherIndex(1),
  /* [939] */ MatcherIndex(18),
  /* [940] */ MatcherIndex(26),
  /* [941] */ MatcherIndex(29),
  /* [942] */ MatcherIndex(23),
  /* [943] */ MatcherIndex(31),
  /* [944] */ MatcherIndex(3),
  /* [945] */ MatcherIndex(14),
  /* [946] */ MatcherIndex(33),
  /* [947] */ MatcherIndex(1),
  /* [948] */ MatcherIndex(19),
  /* [949] */ MatcherIndex(26),
  /* [950] */ MatcherIndex(30),
  /* [951] */ MatcherIndex(23),
  /* [952] */ MatcherIndex(31),
  /* [953] */ MatcherIndex(3),
  /* [954] */ MatcherIndex(14),
  /* [955] */ MatcherIndex(33),
  /* [956] */ MatcherIndex(8),
  /* [957] */ MatcherIndex(17),
  /* [958] */ MatcherIndex(25),
  /* [959] */ MatcherIndex(30),
  /* [960] */ MatcherIndex(23),
  /* [961] */ MatcherIndex(31),
  /* [962] */ MatcherIndex(2),
  /* [963] */ MatcherIndex(14),
  /* [964] */ MatcherIndex(33),
  /* [965] */ MatcherIndex(8),
  /* [966] */ MatcherIndex(19),
  /* [967] */ MatcherIndex(25),
  /* [968] */ MatcherIndex(30),
  /* [969] */ MatcherIndex(23),
  /* [970] */ MatcherIndex(31),
  /* [971] */ MatcherIndex(2),
  /* [972] */ MatcherIndex(14),
  /* [973] */ MatcherIndex(31),
  /* [974] */ MatcherIndex(2),
  /* [975] */ MatcherIndex(26),
  /* [976] */ MatcherIndex(1),
  /* [977] */ MatcherIndex(0),
  /* [978] */ MatcherIndex(15),
  /* [979] */ MatcherIndex(31),
  /* [980] */ MatcherIndex(3),
  /* [981] */ MatcherIndex(26),
  /* [982] */ MatcherIndex(2),
  /* [983] */ MatcherIndex(1),
  /* [984] */ MatcherIndex(15),
  /* [985] */ MatcherIndex(31),
  /* [986] */ MatcherIndex(2),
  /* [987] */ MatcherIndex(28),
  /* [988] */ MatcherIndex(0),
  /* [989] */ MatcherIndex(13),
  /* [990] */ MatcherIndex(35),
  /* [991] */ MatcherIndex(1),
  /* [992] */ MatcherIndex(2),
  /* [993] */ MatcherIndex(3),
  /* [994] */ MatcherIndex(4),
  /* [995] */ MatcherIndex(35),
  /* [996] */ MatcherIndex(0),
  /* [997] */ MatcherIndex(1),
  /* [998] */ MatcherIndex(2),
  /* [999] */ MatcherIndex(3),
  /* [1000] */ MatcherIndex(35),
  /* [1001] */ MatcherIndex(35),
  /* [1002] */ MatcherIndex(1),
  /* [1003] */ MatcherIndex(2),
  /* [1004] */ MatcherIndex(3),
  /* [1005] */ MatcherIndex(35),
  /* [1006] */ MatcherIndex(33),
  /* [1007] */ MatcherIndex(0),
  /* [1008] */ MatcherIndex(4),
  /* [1009] */ MatcherIndex(3),
  /* [1010] */ MatcherIndex(35),
  /* [1011] */ MatcherIndex(34),
  /* [1012] */ MatcherIndex(0),
  /* [1013] */ MatcherIndex(2),
  /* [1014] */ MatcherIndex(4),
  /* [1015] */ MatcherIndex(31),
  /* [1016] */ MatcherIndex(7),
  /* [1017] */ MatcherIndex(32),
  /* [1018] */ MatcherIndex(1),
  /* [1019] */ MatcherIndex(31),
  /* [1020] */ MatcherIndex(2),
  /* [1021] */ MatcherIndex(0),
  /* [1022] */ MatcherIndex(14),
  /* [1023] */ MatcherIndex(31),
  /* [1024] */ MatcherIndex(2),
  /* [1025] */ MatcherIndex(0),
  /* [1026] */ MatcherIndex(15),
  /* [1027] */ MatcherIndex(27),
  /* [1028] */ MatcherIndex(2),
  /* [1029] */ MatcherIndex(3),
  /* [1030] */ MatcherIndex(0),
  /* [1031] */ MatcherIndex(27),
  /* [1032] */ MatcherIndex(1),
  /* [1033] */ MatcherIndex(3),
  /* [1034] */ MatcherIndex(0),
  /* [1035] */ MatcherIndex(27),
  /* [1036] */ MatcherIndex(2),
  /* [1037] */ MatcherIndex(1),
  /* [1038] */ MatcherIndex(0),
  /* [1039] */ MatcherIndex(27),
  /* [1040] */ MatcherIndex(1),
  /* [1041] */ MatcherIndex(2),
  /* [1042] */ MatcherIndex(0),
  /* [1043] */ MatcherIndex(31),
  /* [1044] */ MatcherIndex(1),
  /* [1045] */ MatcherIndex(0),
  /* [1046] */ MatcherIndex(15),
  /* [1047] */ MatcherIndex(31),
  /* [1048] */ MatcherIndex(2),
  /* [1049] */ MatcherIndex(1),
  /* [1050] */ MatcherIndex(15),
  /* [1051] */ MatcherIndex(31),
  /* [1052] */ MatcherIndex(8),
  /* [1053] */ MatcherIndex(2),
  /* [1054] */ MatcherIndex(14),
  /* [1055] */ MatcherIndex(31),
  /* [1056] */ MatcherIndex(8),
  /* [1057] */ MatcherIndex(10),
  /* [1058] */ MatcherIndex(14),
  /* [1059] */ MatcherIndex(31),
  /* [1060] */ MatcherIndex(8),
  /* [1061] */ MatcherIndex(11),
  /* [1062] */ MatcherIndex(14),
  /* [1063] */ MatcherIndex(31),
  /* [1064] */ MatcherIndex(8),
  /* [1065] */ MatcherIndex(1),
  /* [1066] */ MatcherIndex(15),
  /* [1067] */ MatcherIndex(31),
  /* [1068] */ MatcherIndex(8),
  /* [1069] */ MatcherIndex(10),
  /* [1070] */ MatcherIndex(15),
  /* [1071] */ MatcherIndex(31),
  /* [1072] */ MatcherIndex(8),
  /* [1073] */ MatcherIndex(11),
  /* [1074] */ MatcherIndex(15),
  /* [1075] */ MatcherIndex(26),
  /* [1076] */ MatcherIndex(0),
  /* [1077] */ MatcherIndex(1),
  /* [1078] */ MatcherIndex(26),
  /* [1079] */ MatcherIndex(2),
  /* [1080] */ MatcherIndex(8),
  /* [1081] */ MatcherIndex(26),
  /* [1082] */ MatcherIndex(3),
  /* [1083] */ MatcherIndex(8),
  /* [1084] */ MatcherIndex(26),
  /* [1085] */ MatcherIndex(1),
  /* [1086] */ MatcherIndex(8),
  /* [1087] */ MatcherIndex(26),
  /* [1088] */ MatcherIndex(2),
  /* [1089] */ MatcherIndex(0),
  /* [1090] */ MatcherIndex(26),
  /* [1091] */ MatcherIndex(0),
  /* [1092] */ MatcherIndex(7),
  /* [1093] */ MatcherIndex(26),
  /* [1094] */ MatcherIndex(3),
  /* [1095] */ MatcherIndex(0),
  /* [1096] */ MatcherIndex(26),
  /* [1097] */ MatcherIndex(3),
  /* [1098] */ MatcherIndex(1),
  /* [1099] */ MatcherIndex(26),
  /* [1100] */ MatcherIndex(3),
  /* [1101] */ MatcherIndex(2),
  /* [1102] */ MatcherIndex(26),
  /* [1103] */ MatcherIndex(4),
  /* [1104] */ MatcherIndex(0),
  /* [1105] */ MatcherIndex(26),
  /* [1106] */ MatcherIndex(4),
  /* [1107] */ MatcherIndex(1),
  /* [1108] */ MatcherIndex(26),
  /* [1109] */ MatcherIndex(4),
  /* [1110] */ MatcherIndex(2),
  /* [1111] */ MatcherIndex(26),
  /* [1112] */ MatcherIndex(4),
  /* [1113] */ MatcherIndex(3),
  /* [1114] */ MatcherIndex(26),
  /* [1115] */ MatcherIndex(0),
  /* [1116] */ MatcherIndex(2),
  /* [1117] */ MatcherIndex(26),
  /* [1118] */ MatcherIndex(2),
  /* [1119] */ MatcherIndex(7),
  /* [1120] */ MatcherIndex(16),
  /* [1121] */ MatcherIndex(8),
  /* [1122] */ MatcherIndex(16),
  /* [1123] */ MatcherIndex(0),
  /* [1124] */ MatcherIndex(16),
  /* [1125] */ MatcherIndex(10),
  /* [1126] */ MatcherIndex(16),
  /* [1127] */ MatcherIndex(11),
  /* [1128] */ MatcherIndex(16),
  /* [1129] */ MatcherIndex(1),
  /* [1130] */ MatcherIndex(34),
  /* [1131] */ MatcherIndex(2),
  /* [1132] */ MatcherIndex(34),
  /* [1133] */ MatcherIndex(1),
  /* [1134] */ MatcherIndex(17),
  /* [1135] */ MatcherIndex(0),
  /* [1136] */ MatcherIndex(21),
  /* [1137] */ MatcherIndex(0),
  /* [1138] */ MatcherIndex(25),
  /* [1139] */ MatcherIndex(0),
  /* [1140] */ MatcherIndex(37),
  /* [1141] */ MatcherIndex(36),
  /* [1142] */ MatcherIndex(38),
  /* [1143] */ MatcherIndex(43),
  /* [1144] */ MatcherIndex(40),
  /* [1145] */ MatcherIndex(9),
  /* [1146] */ MatcherIndex(39),
  /* [1147] */ MatcherIndex(42),
  /* [1148] */ MatcherIndex(41),
};

static_assert(MatcherIndicesIndex::CanIndex(kMatcherIndices),
              "MatcherIndicesIndex is not large enough to index kMatcherIndices");

constexpr ParameterInfo kParameters[] = {
  {
    /* [0] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(985),
  },
  {
    /* [1] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [2] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [3] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [4] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [5] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [6] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [7] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [8] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1023),
  },
  {
    /* [9] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [10] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [11] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [12] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [13] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [14] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [15] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [16] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(62),
  },
  {
    /* [17] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [18] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1081),
  },
  {
    /* [19] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [20] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [21] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [22] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [23] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [24] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [25] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [26] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [27] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [28] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [29] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [30] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [31] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [32] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [33] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [34] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [35] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [36] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [37] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [38] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [39] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [40] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [41] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [42] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [43] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [44] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [45] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [46] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [47] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [48] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [49] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [50] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [51] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [52] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [53] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [54] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [55] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [56] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [57] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [58] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [59] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(274),
  },
  {
    /* [60] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [61] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [62] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [63] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [64] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [65] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(274),
  },
  {
    /* [66] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [67] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [68] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [69] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [70] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [71] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(274),
  },
  {
    /* [72] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [73] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [74] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [75] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [76] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [77] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(284),
  },
  {
    /* [78] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [79] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [80] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [81] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [82] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [83] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(284),
  },
  {
    /* [84] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [85] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [86] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [87] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [88] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [89] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(0),
  },
  {
    /* [90] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [91] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [92] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [93] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [94] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(11),
  },
  {
    /* [95] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [96] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [97] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [98] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [99] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(54),
  },
  {
    /* [100] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [101] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [102] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [103] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [104] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(74),
  },
  {
    /* [105] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [106] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [107] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [108] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [109] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(114),
  },
  {
    /* [110] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [111] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [112] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [113] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [114] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(134),
  },
  {
    /* [115] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [116] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [117] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [118] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [119] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [120] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1081),
  },
  {
    /* [121] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [122] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [123] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [124] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [125] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [126] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [127] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [128] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [129] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [130] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [131] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [132] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [133] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [134] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [135] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [136] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [137] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [138] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [139] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [140] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [141] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [142] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [143] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [144] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [145] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [146] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [147] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [148] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [149] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [150] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [151] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [152] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [153] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [154] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(274),
  },
  {
    /* [155] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [156] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [157] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [158] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [159] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(274),
  },
  {
    /* [160] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [161] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [162] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [163] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [164] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [165] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [166] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [167] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [168] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [169] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [170] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1081),
  },
  {
    /* [171] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [172] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [173] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [174] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(184),
  },
  {
    /* [175] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [176] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [177] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [178] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [179] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(184),
  },
  {
    /* [180] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [181] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [182] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [183] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [184] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [185] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [186] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [187] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [188] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [189] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [190] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [191] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [192] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [193] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [194] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(194),
  },
  {
    /* [195] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [196] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [197] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [198] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [199] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(194),
  },
  {
    /* [200] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [201] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [202] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [203] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [204] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [205] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [206] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [207] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [208] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [209] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [210] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [211] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [212] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [213] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [214] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(214),
  },
  {
    /* [215] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [216] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [217] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [218] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [219] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(214),
  },
  {
    /* [220] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [221] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [222] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [223] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [224] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(224),
  },
  {
    /* [225] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [226] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [227] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [228] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [229] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [230] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [231] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [232] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [233] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [234] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(124),
  },
  {
    /* [235] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [236] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [237] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [238] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [239] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(124),
  },
  {
    /* [240] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [241] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [242] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [243] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [244] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [245] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [246] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [247] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [248] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [249] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [250] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [251] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [252] */
    /* usage */ core::ParameterUsage::kDdx,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [253] */
    /* usage */ core::ParameterUsage::kDdy,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [254] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [255] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [256] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [257] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [258] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [259] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [260] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [261] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [262] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [263] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [264] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [265] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [266] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [267] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [268] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [269] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [270] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [271] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [272] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [273] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [274] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(0),
  },
  {
    /* [275] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [276] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [277] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [278] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [279] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(0),
  },
  {
    /* [280] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [281] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [282] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [283] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [284] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(274),
  },
  {
    /* [285] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [286] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [287] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [288] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [289] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(284),
  },
  {
    /* [290] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [291] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [292] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [293] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [294] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(284),
  },
  {
    /* [295] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [296] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [297] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [298] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [299] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(0),
  },
  {
    /* [300] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1084),
  },
  {
    /* [301] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [302] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [303] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [304] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(11),
  },
  {
    /* [305] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [306] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [307] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [308] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [309] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(11),
  },
  {
    /* [310] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [311] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [312] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [313] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [314] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(22),
  },
  {
    /* [315] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [316] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [317] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [318] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [319] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(22),
  },
  {
    /* [320] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [321] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [322] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [323] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [324] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(33),
  },
  {
    /* [325] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [326] */
    /* usage */ core::ParameterUsage::kDref,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [327] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [328] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [329] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1063),
  },
  {
    /* [330] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(995),
  },
  {
    /* [331] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [332] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [333] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [334] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1067),
  },
  {
    /* [335] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(995),
  },
  {
    /* [336] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [337] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [338] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [339] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1071),
  },
  {
    /* [340] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(995),
  },
  {
    /* [341] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [342] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [343] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [344] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(985),
  },
  {
    /* [345] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [346] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [347] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [348] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1023),
  },
  {
    /* [349] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [350] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [351] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [352] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(321),
  },
  {
    /* [353] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [354] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [355] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [356] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(55),
  },
  {
    /* [357] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [358] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [359] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [360] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(75),
  },
  {
    /* [361] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [362] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [363] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [364] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(330),
  },
  {
    /* [365] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [366] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [367] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [368] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(339),
  },
  {
    /* [369] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [370] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [371] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [372] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(115),
  },
  {
    /* [373] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [374] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [375] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [376] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(135),
  },
  {
    /* [377] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [378] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [379] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [380] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(348),
  },
  {
    /* [381] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [382] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [383] */
    /* usage */ core::ParameterUsage::kSample,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [384] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [385] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [386] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [387] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [388] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [389] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [390] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [391] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [392] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(84),
  },
  {
    /* [393] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [394] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [395] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [396] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(94),
  },
  {
    /* [397] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [398] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [399] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [400] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [401] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(9),
  },
  {
    /* [402] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [403] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [404] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(124),
  },
  {
    /* [405] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [406] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [407] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [408] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(144),
  },
  {
    /* [409] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [410] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [411] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [412] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(154),
  },
  {
    /* [413] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [414] */
    /* usage */ core::ParameterUsage::kComponent,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [415] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [416] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [417] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [418] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [419] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [420] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [421] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1081),
  },
  {
    /* [422] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [423] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [424] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(184),
  },
  {
    /* [425] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [426] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [427] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [428] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(184),
  },
  {
    /* [429] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [430] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [431] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [432] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [433] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [434] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [435] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [436] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(64),
  },
  {
    /* [437] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [438] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [439] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [440] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(194),
  },
  {
    /* [441] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [442] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [443] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [444] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(194),
  },
  {
    /* [445] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [446] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [447] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [448] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [449] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [450] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [451] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [452] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(204),
  },
  {
    /* [453] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [454] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [455] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [456] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(214),
  },
  {
    /* [457] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [458] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [459] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [460] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(214),
  },
  {
    /* [461] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [462] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [463] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [464] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(224),
  },
  {
    /* [465] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [466] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [467] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [468] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [469] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [470] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [471] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [472] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(124),
  },
  {
    /* [473] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [474] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [475] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [476] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(124),
  },
  {
    /* [477] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [478] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [479] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [480] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [481] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [482] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [483] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [484] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [485] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [486] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [487] */
    /* usage */ core::ParameterUsage::kBias,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [488] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [489] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [490] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [491] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [492] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(44),
  },
  {
    /* [493] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [494] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [495] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [496] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [497] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [498] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [499] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [500] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(104),
  },
  {
    /* [501] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [502] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [503] */
    /* usage */ core::ParameterUsage::kConstOffset,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [504] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(164),
  },
  {
    /* [505] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [506] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [507] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [508] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [509] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [510] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [511] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [512] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(184),
  },
  {
    /* [513] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [514] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [515] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [516] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(184),
  },
  {
    /* [517] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [518] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [519] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [520] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(194),
  },
  {
    /* [521] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [522] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [523] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [524] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(194),
  },
  {
    /* [525] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [526] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [527] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [528] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(214),
  },
  {
    /* [529] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [530] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [531] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [532] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(214),
  },
  {
    /* [533] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [534] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [535] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [536] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(224),
  },
  {
    /* [537] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [538] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [539] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [540] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(234),
  },
  {
    /* [541] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1084),
  },
  {
    /* [542] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [543] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [544] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(254),
  },
  {
    /* [545] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [546] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [547] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [548] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(254),
  },
  {
    /* [549] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [550] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [551] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [552] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(244),
  },
  {
    /* [553] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [554] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [555] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [556] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(244),
  },
  {
    /* [557] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [558] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [559] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [560] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(264),
  },
  {
    /* [561] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [562] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [563] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [564] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [565] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [566] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [567] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [568] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(174),
  },
  {
    /* [569] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [570] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [571] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [572] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(234),
  },
  {
    /* [573] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(743),
  },
  {
    /* [574] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [575] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [576] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(234),
  },
  {
    /* [577] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [578] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [579] */
    /* usage */ core::ParameterUsage::kLod,
    /* matcher_indices */ MatcherIndicesIndex(2),
  },
  {
    /* [580] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(735),
  },
  {
    /* [581] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [582] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [583] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [584] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(745),
  },
  {
    /* [585] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [586] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [587] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [588] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(755),
  },
  {
    /* [589] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [590] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1124),
  },
  {
    /* [591] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [592] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(765),
  },
  {
    /* [593] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [594] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1124),
  },
  {
    /* [595] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [596] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(775),
  },
  {
    /* [597] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [598] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1126),
  },
  {
    /* [599] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [600] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(784),
  },
  {
    /* [601] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [602] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1126),
  },
  {
    /* [603] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [604] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(793),
  },
  {
    /* [605] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [606] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [607] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [608] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(802),
  },
  {
    /* [609] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [610] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1124),
  },
  {
    /* [611] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [612] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(811),
  },
  {
    /* [613] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [614] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1126),
  },
  {
    /* [615] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [616] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(820),
  },
  {
    /* [617] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [618] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [619] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [620] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(829),
  },
  {
    /* [621] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [622] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1124),
  },
  {
    /* [623] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [624] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(838),
  },
  {
    /* [625] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [626] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1126),
  },
  {
    /* [627] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [628] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(847),
  },
  {
    /* [629] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [630] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1120),
  },
  {
    /* [631] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [632] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(856),
  },
  {
    /* [633] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [634] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1124),
  },
  {
    /* [635] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [636] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(865),
  },
  {
    /* [637] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [638] */
    /* usage */ core::ParameterUsage::kTexel,
    /* matcher_indices */ MatcherIndicesIndex(1126),
  },
  {
    /* [639] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [640] */
    /* usage */ core::ParameterUsage::kBase,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [641] */
    /* usage */ core::ParameterUsage::kInsert,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [642] */
    /* usage */ core::ParameterUsage::kOffset,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [643] */
    /* usage */ core::ParameterUsage::kCount,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [644] */
    /* usage */ core::ParameterUsage::kBase,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [645] */
    /* usage */ core::ParameterUsage::kInsert,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [646] */
    /* usage */ core::ParameterUsage::kOffset,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [647] */
    /* usage */ core::ParameterUsage::kCount,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [648] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1051),
  },
  {
    /* [649] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [650] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [651] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [652] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1055),
  },
  {
    /* [653] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [654] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [655] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [656] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1059),
  },
  {
    /* [657] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [658] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [659] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [660] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1005),
  },
  {
    /* [661] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1010),
  },
  {
    /* [662] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1000),
  },
  {
    /* [663] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [664] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1019),
  },
  {
    /* [665] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [666] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [667] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(294),
  },
  {
    /* [668] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [669] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [670] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(45),
  },
  {
    /* [671] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [672] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [673] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(65),
  },
  {
    /* [674] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [675] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [676] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(205),
  },
  {
    /* [677] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(753),
  },
  {
    /* [678] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [679] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(303),
  },
  {
    /* [680] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(31),
  },
  {
    /* [681] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [682] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(105),
  },
  {
    /* [683] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [684] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [685] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(125),
  },
  {
    /* [686] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(763),
  },
  {
    /* [687] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [688] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(312),
  },
  {
    /* [689] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(42),
  },
  {
    /* [690] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [691] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(591),
  },
  {
    /* [692] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [693] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [694] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(600),
  },
  {
    /* [695] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [696] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [697] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(609),
  },
  {
    /* [698] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [699] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [700] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(618),
  },
  {
    /* [701] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [702] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [703] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(627),
  },
  {
    /* [704] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [705] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [706] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(636),
  },
  {
    /* [707] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [708] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [709] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(645),
  },
  {
    /* [710] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [711] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [712] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(654),
  },
  {
    /* [713] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [714] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [715] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(663),
  },
  {
    /* [716] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [717] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [718] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(672),
  },
  {
    /* [719] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(773),
  },
  {
    /* [720] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [721] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(681),
  },
  {
    /* [722] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(773),
  },
  {
    /* [723] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [724] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(690),
  },
  {
    /* [725] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(773),
  },
  {
    /* [726] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [727] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(699),
  },
  {
    /* [728] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(773),
  },
  {
    /* [729] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [730] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(708),
  },
  {
    /* [731] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(773),
  },
  {
    /* [732] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [733] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(717),
  },
  {
    /* [734] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(773),
  },
  {
    /* [735] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [736] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(164),
  },
  {
    /* [737] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(1078),
  },
  {
    /* [738] */
    /* usage */ core::ParameterUsage::kImageOperands,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [739] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1016),
  },
  {
    /* [740] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [741] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [742] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1016),
  },
  {
    /* [743] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [744] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [745] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1114),
  },
  {
    /* [746] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1090),
  },
  {
    /* [747] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [748] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [749] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1105),
  },
  {
    /* [750] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1108),
  },
  {
    /* [751] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1111),
  },
  {
    /* [752] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [753] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [754] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [755] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [756] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [757] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [758] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1035),
  },
  {
    /* [759] */
    /* usage */ core::ParameterUsage::kBase,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [760] */
    /* usage */ core::ParameterUsage::kOffset,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [761] */
    /* usage */ core::ParameterUsage::kCount,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [762] */
    /* usage */ core::ParameterUsage::kBase,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [763] */
    /* usage */ core::ParameterUsage::kOffset,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [764] */
    /* usage */ core::ParameterUsage::kCount,
    /* matcher_indices */ MatcherIndicesIndex(1140),
  },
  {
    /* [765] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [766] */
    /* usage */ core::ParameterUsage::kE,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [767] */
    /* usage */ core::ParameterUsage::kId,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [768] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [769] */
    /* usage */ core::ParameterUsage::kE,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [770] */
    /* usage */ core::ParameterUsage::kId,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [771] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [772] */
    /* usage */ core::ParameterUsage::kE,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [773] */
    /* usage */ core::ParameterUsage::kDir,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [774] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [775] */
    /* usage */ core::ParameterUsage::kE,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [776] */
    /* usage */ core::ParameterUsage::kDir,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [777] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [778] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [779] */
    /* usage */ core::ParameterUsage::kId,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [780] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [781] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [782] */
    /* usage */ core::ParameterUsage::kId,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [783] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [784] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [785] */
    /* usage */ core::ParameterUsage::kMask,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [786] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [787] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [788] */
    /* usage */ core::ParameterUsage::kMask,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [789] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [790] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [791] */
    /* usage */ core::ParameterUsage::kDelta,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [792] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [793] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [794] */
    /* usage */ core::ParameterUsage::kDelta,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [795] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [796] */
    /* usage */ core::ParameterUsage::kGroupOperation,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [797] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [798] */
    /* usage */ core::ParameterUsage::kScope,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [799] */
    /* usage */ core::ParameterUsage::kGroupOperation,
    /* matcher_indices */ MatcherIndicesIndex(628),
  },
  {
    /* [800] */
    /* usage */ core::ParameterUsage::kValue,
    /* matcher_indices */ MatcherIndicesIndex(1075),
  },
  {
    /* [801] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1015),
  },
  {
    /* [802] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [803] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(474),
  },
  {
    /* [804] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [805] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(483),
  },
  {
    /* [806] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [807] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(492),
  },
  {
    /* [808] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [809] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(501),
  },
  {
    /* [810] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [811] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(510),
  },
  {
    /* [812] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [813] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(519),
  },
  {
    /* [814] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [815] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(528),
  },
  {
    /* [816] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(21),
  },
  {
    /* [817] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(537),
  },
  {
    /* [818] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [819] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(546),
  },
  {
    /* [820] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [821] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(555),
  },
  {
    /* [822] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [823] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(564),
  },
  {
    /* [824] */
    /* usage */ core::ParameterUsage::kLevel,
    /* matcher_indices */ MatcherIndicesIndex(32),
  },
  {
    /* [825] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(726),
  },
  {
    /* [826] */
    /* usage */ core::ParameterUsage::kCoords,
    /* matcher_indices */ MatcherIndicesIndex(20),
  },
  {
    /* [827] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1031),
  },
  {
    /* [828] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1035),
  },
  {
    /* [829] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1039),
  },
  {
    /* [830] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [831] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1039),
  },
  {
    /* [832] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [833] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1087),
  },
  {
    /* [834] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(981),
  },
  {
    /* [835] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1096),
  },
  {
    /* [836] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1099),
  },
  {
    /* [837] */
    /* usage */ core::ParameterUsage::kX,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [838] */
    /* usage */ core::ParameterUsage::kI,
    /* matcher_indices */ MatcherIndicesIndex(1043),
  },
  {
    /* [839] */
    /* usage */ core::ParameterUsage::kX,
    /* matcher_indices */ MatcherIndicesIndex(975),
  },
  {
    /* [840] */
    /* usage */ core::ParameterUsage::kI,
    /* matcher_indices */ MatcherIndicesIndex(973),
  },
  {
    /* [841] */
    /* usage */ core::ParameterUsage::kX,
    /* matcher_indices */ MatcherIndicesIndex(8),
  },
  {
    /* [842] */
    /* usage */ core::ParameterUsage::kI,
    /* matcher_indices */ MatcherIndicesIndex(1047),
  },
  {
    /* [843] */
    /* usage */ core::ParameterUsage::kX,
    /* matcher_indices */ MatcherIndicesIndex(1087),
  },
  {
    /* [844] */
    /* usage */ core::ParameterUsage::kI,
    /* matcher_indices */ MatcherIndicesIndex(979),
  },
  {
    /* [845] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(357),
  },
  {
    /* [846] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(366),
  },
  {
    /* [847] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(375),
  },
  {
    /* [848] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(384),
  },
  {
    /* [849] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(393),
  },
  {
    /* [850] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(402),
  },
  {
    /* [851] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(411),
  },
  {
    /* [852] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(420),
  },
  {
    /* [853] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(429),
  },
  {
    /* [854] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(438),
  },
  {
    /* [855] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(447),
  },
  {
    /* [856] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(456),
  },
  {
    /* [857] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(465),
  },
  {
    /* [858] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(573),
  },
  {
    /* [859] */
    /* usage */ core::ParameterUsage::kImage,
    /* matcher_indices */ MatcherIndicesIndex(582),
  },
  {
    /* [860] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1011),
  },
  {
    /* [861] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1130),
  },
  {
    /* [862] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1132),
  },
  {
    /* [863] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1134),
  },
  {
    /* [864] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1136),
  },
  {
    /* [865] */
    /* usage */ core::ParameterUsage::kNone,
    /* matcher_indices */ MatcherIndicesIndex(1138),
  },
};

static_assert(ParameterIndex::CanIndex(kParameters),
              "ParameterIndex is not large enough to index kParameters");

constexpr TemplateInfo kTemplates[] = {
  {
    /* [0] */
    /* name */ "Z",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [1] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [2] */
    /* name */ "D",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [3] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [4] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [5] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [6] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [7] */
    /* name */ "Z",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [8] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [9] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [10] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [11] */
    /* name */ "U",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [12] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [13] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [14] */
    /* name */ "L",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [15] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [16] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [17] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [18] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [19] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [20] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [21] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [22] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [23] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [24] */
    /* name */ "L",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [25] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [26] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [27] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [28] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [29] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [30] */
    /* name */ "U",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [31] */
    /* name */ "V",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [32] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [33] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1144),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [34] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(990),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [35] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [36] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1146),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [37] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [38] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [39] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(990),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [40] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [41] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(782),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [42] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [43] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [44] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(990),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [45] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [46] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(989),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [47] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [48] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [49] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1145),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [50] */
    /* name */ "TR",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [51] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [52] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [53] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [54] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(2),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [55] */
    /* name */ "TR",
    /* matcher_indices */ MatcherIndicesIndex(2),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [56] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [57] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [58] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [59] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [60] */
    /* name */ "TR",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [61] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [62] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [63] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [64] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1147),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [65] */
    /* name */ "TR",
    /* matcher_indices */ MatcherIndicesIndex(1148),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [66] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [67] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [68] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [69] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [70] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [71] */
    /* name */ "Z",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [72] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [73] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [74] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [75] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(9),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [76] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [77] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [78] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [79] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [80] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [81] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [82] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [83] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [84] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [85] */
    /* name */ "Z",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [86] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [87] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [88] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [89] */
    /* name */ "U",
    /* matcher_indices */ MatcherIndicesIndex(628),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [90] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(2),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [91] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(919),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [92] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [93] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1143),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [94] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [95] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(901),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [96] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(928),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [97] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [98] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1143),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [99] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [100] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(910),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [101] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(937),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [102] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [103] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1143),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [104] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [105] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(946),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [106] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [107] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1143),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [108] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [109] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [110] */
    /* name */ "K",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [111] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [112] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [113] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [114] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [115] */
    /* name */ "U",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [116] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [117] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [118] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [119] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [120] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1145),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [121] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [122] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [123] */
    /* name */ "B",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [124] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [125] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [126] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [127] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [128] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [129] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [130] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [131] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [132] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(610),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [133] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(9),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [134] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [135] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(628),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [136] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(9),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [137] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [138] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(782),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [139] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(9),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [140] */
    /* name */ "C",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [141] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [142] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [143] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [144] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(874),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [145] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [146] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [147] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(195),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [148] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(883),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [149] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1142),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [150] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [151] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(892),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [152] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(955),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [153] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1143),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [154] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [155] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(964),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [156] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1143),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [157] */
    /* name */ "F",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [158] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [159] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [160] */
    /* name */ "M",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [161] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [162] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [163] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [164] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [165] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [166] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1145),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [167] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [168] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [169] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1145),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [170] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [171] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [172] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [173] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [174] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [175] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [176] */
    /* name */ "R",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [177] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(1140),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [178] */
    /* name */ "N",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [179] */
    /* name */ "I",
    /* matcher_indices */ MatcherIndicesIndex(628),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [180] */
    /* name */ "A",
    /* matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
  {
    /* [181] */
    /* name */ "T",
    /* matcher_indices */ MatcherIndicesIndex(1141),
    /* kind */ TemplateInfo::Kind::kType,
  },
  {
    /* [182] */
    /* name */ "S",
    /* matcher_indices */ MatcherIndicesIndex(1145),
    /* kind */ TemplateInfo::Kind::kNumber,
  },
};

static_assert(TemplateIndex::CanIndex(kTemplates),
              "TemplateIndex is not large enough to index kTemplates");

constexpr OverloadInfo kOverloads[] = {
  {
    /* [0] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(504),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [1] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(736),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [2] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(164),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [3] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(416),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [4] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(119),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [5] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(420),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [6] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(174),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [7] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(179),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [8] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(424),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [9] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(428),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [10] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(432),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [11] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(436),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [12] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(124),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [13] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(129),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [14] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(194),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [15] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(199),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [16] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(440),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [17] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(444),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [18] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(134),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [19] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(139),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [20] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(448),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [21] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(452),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [22] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(214),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [23] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(219),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [24] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(456),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [25] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(460),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [26] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(224),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [27] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(464),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [28] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(8),
    /* parameters */ ParameterIndex(540),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [29] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(468),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [30] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(552),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [31] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(556),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [32] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(544),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [33] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(548),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [34] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(472),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [35] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(476),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [36] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(560),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [37] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(504),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [38] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(508),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [39] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(164),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [40] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(169),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [41] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(17),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [42] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(512),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [43] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(516),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [44] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(174),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [45] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(179),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [46] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(184),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [47] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(189),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [48] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(23),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [49] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(29),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [50] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(520),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [51] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(524),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [52] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(194),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [53] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(199),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [54] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(204),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [55] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(209),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [56] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(35),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [57] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(41),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [58] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(528),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [59] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(532),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [60] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(214),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [61] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(219),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [62] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(536),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [63] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(224),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [64] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(8),
    /* parameters */ ParameterIndex(540),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [65] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(229),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [66] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(544),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [67] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(548),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [68] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(234),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [69] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(239),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [70] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(552),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [71] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(556),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [72] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(560),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [73] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(141),
    /* parameters */ ParameterIndex(736),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [74] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(244),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [75] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(249),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [76] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(480),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [77] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(484),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [78] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(144),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [79] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(149),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [80] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(488),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [81] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(492),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [82] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(199),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [83] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(444),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [84] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(139),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [85] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(452),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [86] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(572),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [87] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(576),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [88] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(496),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [89] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(500),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [90] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(564),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [91] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(568),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [92] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(244),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [93] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(249),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [94] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(254),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [95] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(259),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [96] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(47),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [97] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(53),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [98] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(524),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [99] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(199),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [100] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(209),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [101] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(84),
    /* parameters */ ParameterIndex(41),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [102] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(77),
    /* parameters */ ParameterIndex(532),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [103] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(572),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [104] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(576),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [105] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(264),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [106] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(269),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [107] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(667),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [108] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(670),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [109] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(673),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [110] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(676),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [111] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(679),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [112] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(682),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [113] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(685),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [114] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(688),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [115] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(352),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [116] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(356),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [117] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(360),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [118] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(364),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [119] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(368),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [120] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(70),
    /* parameters */ ParameterIndex(372),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [121] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(70),
    /* parameters */ ParameterIndex(376),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [122] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(70),
    /* parameters */ ParameterIndex(380),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [123] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(132),
    /* parameters */ ParameterIndex(691),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [124] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(132),
    /* parameters */ ParameterIndex(694),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [125] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(135),
    /* parameters */ ParameterIndex(697),
    /* return_matcher_indices */ MatcherIndicesIndex(1124),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [126] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(135),
    /* parameters */ ParameterIndex(700),
    /* return_matcher_indices */ MatcherIndicesIndex(1124),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [127] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(138),
    /* parameters */ ParameterIndex(703),
    /* return_matcher_indices */ MatcherIndicesIndex(1126),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [128] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(138),
    /* parameters */ ParameterIndex(706),
    /* return_matcher_indices */ MatcherIndicesIndex(1126),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [129] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(132),
    /* parameters */ ParameterIndex(709),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [130] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(135),
    /* parameters */ ParameterIndex(712),
    /* return_matcher_indices */ MatcherIndicesIndex(1124),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [131] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(138),
    /* parameters */ ParameterIndex(715),
    /* return_matcher_indices */ MatcherIndicesIndex(1126),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [132] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(132),
    /* parameters */ ParameterIndex(718),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [133] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(135),
    /* parameters */ ParameterIndex(721),
    /* return_matcher_indices */ MatcherIndicesIndex(1124),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [134] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(138),
    /* parameters */ ParameterIndex(724),
    /* return_matcher_indices */ MatcherIndicesIndex(1126),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [135] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(132),
    /* parameters */ ParameterIndex(727),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [136] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(135),
    /* parameters */ ParameterIndex(730),
    /* return_matcher_indices */ MatcherIndicesIndex(1124),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [137] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(138),
    /* parameters */ ParameterIndex(733),
    /* return_matcher_indices */ MatcherIndicesIndex(1126),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [138] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(72),
    /* parameters */ ParameterIndex(825),
    /* return_matcher_indices */ MatcherIndicesIndex(1128),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [139] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(580),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [140] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(584),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [141] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(588),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [142] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(592),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [143] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(596),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [144] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(600),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [145] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(604),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [146] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(608),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [147] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(612),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [148] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(616),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [149] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(620),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [150] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(624),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [151] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(628),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [152] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(632),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [153] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(636),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [154] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(845),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [155] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(846),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [156] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(847),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [157] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(848),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [158] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(849),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [159] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(850),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [160] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(76),
    /* parameters */ ParameterIndex(851),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [161] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(18),
    /* parameters */ ParameterIndex(852),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [162] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(129),
    /* parameters */ ParameterIndex(853),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [163] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(129),
    /* parameters */ ParameterIndex(854),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [164] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(129),
    /* parameters */ ParameterIndex(855),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [165] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(129),
    /* parameters */ ParameterIndex(856),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [166] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(80),
    /* parameters */ ParameterIndex(857),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [167] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(384),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [168] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(99),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [169] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(388),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [170] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(69),
    /* parameters */ ParameterIndex(104),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [171] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(392),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [172] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(125),
    /* parameters */ ParameterIndex(396),
    /* return_matcher_indices */ MatcherIndicesIndex(1122),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [173] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(400),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [174] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(70),
    /* parameters */ ParameterIndex(109),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [175] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(404),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [176] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(70),
    /* parameters */ ParameterIndex(114),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [177] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(408),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [178] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(126),
    /* parameters */ ParameterIndex(412),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [179] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(803),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [180] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(805),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [181] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(807),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [182] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(809),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [183] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(811),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [184] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(813),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [185] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 6,
    /* templates */ TemplateIndex(12),
    /* parameters */ ParameterIndex(815),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [186] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(23),
    /* parameters */ ParameterIndex(817),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [187] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(23),
    /* parameters */ ParameterIndex(819),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [188] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(23),
    /* parameters */ ParameterIndex(821),
    /* return_matcher_indices */ MatcherIndicesIndex(42),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [189] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(23),
    /* parameters */ ParameterIndex(823),
    /* return_matcher_indices */ MatcherIndicesIndex(763),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [190] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(8),
    /* parameters */ ParameterIndex(299),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [191] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(284),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [192] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(94),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [193] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(309),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [194] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(289),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [195] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(294),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [196] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(314),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [197] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(319),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [198] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(324),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [199] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(8),
    /* parameters */ ParameterIndex(299),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [200] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(71),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [201] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(304),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [202] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(309),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [203] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(77),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [204] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(83),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [205] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(314),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [206] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(319),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [207] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(324),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [208] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(89),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [209] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(89),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [210] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(94),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [211] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(94),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [212] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(314),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [213] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(324),
    /* return_matcher_indices */ MatcherIndicesIndex(1120),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [214] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(144),
    /* parameters */ ParameterIndex(860),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [215] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(148),
    /* parameters */ ParameterIndex(860),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [216] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(145),
    /* parameters */ ParameterIndex(861),
    /* return_matcher_indices */ MatcherIndicesIndex(21),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [217] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(149),
    /* parameters */ ParameterIndex(861),
    /* return_matcher_indices */ MatcherIndicesIndex(21),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [218] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(94),
    /* parameters */ ParameterIndex(862),
    /* return_matcher_indices */ MatcherIndicesIndex(32),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [219] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(99),
    /* parameters */ ParameterIndex(862),
    /* return_matcher_indices */ MatcherIndicesIndex(32),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [220] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(91),
    /* parameters */ ParameterIndex(6),
    /* return_matcher_indices */ MatcherIndicesIndex(1011),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [221] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(96),
    /* parameters */ ParameterIndex(6),
    /* return_matcher_indices */ MatcherIndicesIndex(1011),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [222] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(101),
    /* parameters */ ParameterIndex(6),
    /* return_matcher_indices */ MatcherIndicesIndex(1011),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [223] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(105),
    /* parameters */ ParameterIndex(6),
    /* return_matcher_indices */ MatcherIndicesIndex(1011),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [224] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(152),
    /* parameters */ ParameterIndex(13),
    /* return_matcher_indices */ MatcherIndicesIndex(1011),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [225] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(155),
    /* parameters */ ParameterIndex(13),
    /* return_matcher_indices */ MatcherIndicesIndex(1011),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [226] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(274),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [227] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(279),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [228] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(154),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [229] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(159),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [230] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(274),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [231] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(5),
    /* parameters */ ParameterIndex(279),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [232] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(59),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [233] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(7),
    /* parameters */ ParameterIndex(65),
    /* return_matcher_indices */ MatcherIndicesIndex(2),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [234] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(49),
    /* parameters */ ParameterIndex(660),
    /* return_matcher_indices */ MatcherIndicesIndex(1000),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [235] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(54),
    /* parameters */ ParameterIndex(660),
    /* return_matcher_indices */ MatcherIndicesIndex(1000),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [236] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(59),
    /* parameters */ ParameterIndex(660),
    /* return_matcher_indices */ MatcherIndicesIndex(1000),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [237] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(64),
    /* parameters */ ParameterIndex(660),
    /* return_matcher_indices */ MatcherIndicesIndex(1000),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [238] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(739),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [239] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(742),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [240] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(746),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [241] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(863),
    /* return_matcher_indices */ MatcherIndicesIndex(1134),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [242] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(864),
    /* return_matcher_indices */ MatcherIndicesIndex(1136),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [243] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(865),
    /* return_matcher_indices */ MatcherIndicesIndex(1138),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [244] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(34),
    /* parameters */ ParameterIndex(648),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [245] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(39),
    /* parameters */ ParameterIndex(652),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [246] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(44),
    /* parameters */ ParameterIndex(656),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [247] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(35),
    /* parameters */ ParameterIndex(329),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [248] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(40),
    /* parameters */ ParameterIndex(334),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [249] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 5,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(45),
    /* parameters */ ParameterIndex(339),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [250] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(0),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [251] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(664),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [252] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(344),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [253] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(348),
    /* return_matcher_indices */ MatcherIndicesIndex(/* invalid */),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [254] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(344),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [255] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(348),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [256] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(0),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [257] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 6,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(8),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [258] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(4),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [259] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(9),
    /* parameters */ ParameterIndex(743),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [260] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(28),
    /* parameters */ ParameterIndex(1),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [261] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(161),
    /* parameters */ ParameterIndex(834),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [262] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(28),
    /* parameters */ ParameterIndex(14),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [263] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(113),
    /* parameters */ ParameterIndex(835),
    /* return_matcher_indices */ MatcherIndicesIndex(1093),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [264] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(28),
    /* parameters */ ParameterIndex(14),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [265] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 5,
    /* templates */ TemplateIndex(28),
    /* parameters */ ParameterIndex(749),
    /* return_matcher_indices */ MatcherIndicesIndex(1102),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [266] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(4),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [267] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(752),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [268] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(4),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [269] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(752),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [270] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(4),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [271] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(755),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [272] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(10),
    /* parameters */ ParameterIndex(13),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [273] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(9),
    /* parameters */ ParameterIndex(744),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [274] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(181),
    /* parameters */ ParameterIndex(837),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [275] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(164),
    /* parameters */ ParameterIndex(839),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [276] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(167),
    /* parameters */ ParameterIndex(841),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [277] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(117),
    /* parameters */ ParameterIndex(843),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [278] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(29),
    /* parameters */ ParameterIndex(640),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [279] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 4,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(162),
    /* parameters */ ParameterIndex(644),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [280] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(29),
    /* parameters */ ParameterIndex(759),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [281] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(162),
    /* parameters */ ParameterIndex(762),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [282] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(121),
    /* parameters */ ParameterIndex(14),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [283] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(121),
    /* parameters */ ParameterIndex(835),
    /* return_matcher_indices */ MatcherIndicesIndex(1093),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [284] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(122),
    /* parameters */ ParameterIndex(13),
    /* return_matcher_indices */ MatcherIndicesIndex(1016),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [285] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(122),
    /* parameters */ ParameterIndex(833),
    /* return_matcher_indices */ MatcherIndicesIndex(1117),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [286] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(170),
    /* parameters */ ParameterIndex(1),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [287] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(170),
    /* parameters */ ParameterIndex(834),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [288] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(173),
    /* parameters */ ParameterIndex(1),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [289] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(173),
    /* parameters */ ParameterIndex(834),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [290] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(121),
    /* parameters */ ParameterIndex(1),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [291] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(176),
    /* parameters */ ParameterIndex(834),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [292] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(765),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [293] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(768),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [294] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(777),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [295] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(780),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [296] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(771),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [297] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(774),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [298] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(777),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [299] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(780),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [300] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(783),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [301] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(786),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [302] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(33),
    /* parameters */ ParameterIndex(789),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [303] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(32),
    /* parameters */ ParameterIndex(792),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [304] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 1,
    /* templates */ TemplateIndex(29),
    /* parameters */ ParameterIndex(795),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [305] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline, OverloadFlag::kMustUse),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(87),
    /* parameters */ ParameterIndex(798),
    /* return_matcher_indices */ MatcherIndicesIndex(1075),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [306] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(179),
    /* parameters */ ParameterIndex(801),
    /* return_matcher_indices */ MatcherIndicesIndex(628),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [307] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(88),
    /* parameters */ ParameterIndex(8),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [308] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(9),
    /* parameters */ ParameterIndex(743),
    /* return_matcher_indices */ MatcherIndicesIndex(32),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [309] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 7,
    /* templates */ TemplateIndex(0),
    /* parameters */ ParameterIndex(858),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [310] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 1,
    /* num_explicit_templates */ 1,
    /* num_templates   */ 7,
    /* templates */ TemplateIndex(0),
    /* parameters */ ParameterIndex(859),
    /* return_matcher_indices */ MatcherIndicesIndex(8),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [311] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 4,
    /* templates */ TemplateIndex(109),
    /* parameters */ ParameterIndex(827),
    /* return_matcher_indices */ MatcherIndicesIndex(1027),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [312] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(829),
    /* return_matcher_indices */ MatcherIndicesIndex(1039),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [313] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(831),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [314] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(757),
    /* return_matcher_indices */ MatcherIndicesIndex(1087),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [315] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 2,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(753),
    /* return_matcher_indices */ MatcherIndicesIndex(975),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [316] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 2,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 3,
    /* templates */ TemplateIndex(158),
    /* parameters */ ParameterIndex(832),
    /* return_matcher_indices */ MatcherIndicesIndex(1035),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [317] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 0,
    /* templates */ TemplateIndex(/* invalid */),
    /* parameters */ ParameterIndex(331),
    /* return_matcher_indices */ MatcherIndicesIndex(610),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
  {
    /* [318] */
    /* flags */ OverloadFlags(OverloadFlag::kIsBuiltin, OverloadFlag::kSupportsVertexPipeline, OverloadFlag::kSupportsFragmentPipeline, OverloadFlag::kSupportsComputePipeline),
    /* num_parameters */ 3,
    /* num_explicit_templates */ 0,
    /* num_templates   */ 0,
    /* templates */ TemplateIndex(/* invalid */),
    /* parameters */ ParameterIndex(331),
    /* return_matcher_indices */ MatcherIndicesIndex(628),
    /* const_eval_fn */ ConstEvalFunctionIndex(/* invalid */),
  },
};

static_assert(OverloadIndex::CanIndex(kOverloads),
              "OverloadIndex is not large enough to index kOverloads");

constexpr IntrinsicInfo kBuiltins[] = {
  {
    /* [0] */
    /* fn array_length[I : u32, A : access](ptr<storage, struct_with_runtime_array, A>, I) -> u32 */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(306),
  },
  {
    /* [1] */
    /* fn atomic_load[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U) -> T */
    /* fn atomic_load[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, readable>, U, U) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(250),
  },
  {
    /* [2] */
    /* fn atomic_store[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) */
    /* fn atomic_store[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(252),
  },
  {
    /* [3] */
    /* fn atomic_exchange[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_exchange[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [4] */
    /* fn atomic_compare_exchange[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, U, T, T) -> T */
    /* fn atomic_compare_exchange[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, U, T, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(256),
  },
  {
    /* [5] */
    /* fn atomic_i_add[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_i_add[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [6] */
    /* fn atomic_i_sub[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_i_sub[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [7] */
    /* fn atomic_s_max[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_s_max[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [8] */
    /* fn atomic_s_min[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_s_min[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [9] */
    /* fn atomic_u_max[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_u_max[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [10] */
    /* fn atomic_u_min[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_u_min[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [11] */
    /* fn atomic_and[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_and[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [12] */
    /* fn atomic_or[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_or[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [13] */
    /* fn atomic_xor[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, atomic<T>, read_write>, U, U, T) -> T */
    /* fn atomic_xor[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U, T) -> T */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(254),
  },
  {
    /* [14] */
    /* fn atomic_i_increment[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U) -> T */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(307),
  },
  {
    /* [15] */
    /* fn atomic_i_decrement[T : iu32, U : u32, S : workgroup_or_storage](ptr<S, T, writable>, U, U) -> T */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(307),
  },
  {
    /* [16] */
    /* fn dot[N : num, T : f32_f16](vec<N, T>, vec<N, T>) -> T */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(308),
  },
  {
    /* [17] */
    /* fn image_dref_gather[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec2<f32>, dref: f32, image_operands: u32) -> vec4<f32> */
    /* fn image_dref_gather[F : texel_format, A : access, Z : iu32](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec2<f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_dref_gather[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32) -> vec4<f32> */
    /* fn image_dref_gather[F : texel_format, A : access, Z : iu32](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_dref_gather[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32) -> vec4<f32> */
    /* fn image_dref_gather[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32) -> vec4<f32> */
    /* num overloads */ 6,
    /* overloads */ OverloadIndex(208),
  },
  {
    /* [18] */
    /* fn image_fetch[T : fiu32, C : iu32, F : texel_format](image: image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: C, image_operands: u32) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, F : texel_format](image: image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, F : texel_format](image: image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec3<C>, image_operands: u32) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, F : texel_format](image: image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec3<C>, image_operands: u32) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, F : texel_format](image: image<T, dim_2d, non_depth, non_arrayed, multi_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32) -> vec4<T> */
    /* fn image_fetch[C : iu32, F : texel_format](image: image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32) -> vec4<f32> */
    /* fn image_fetch[C : iu32, F : texel_format](image: image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec3<C>, image_operands: u32) -> vec4<f32> */
    /* fn image_fetch[C : iu32, F : texel_format](image: image<f32, dim_2d, is_depth, non_arrayed, multi_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32) -> vec4<f32> */
    /* fn image_fetch[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: C, image_operands: u32, sample: Z) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32, sample: Z) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec3<C>, image_operands: u32, sample: Z) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec3<C>, image_operands: u32, sample: Z) -> vec4<T> */
    /* fn image_fetch[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: image<T, dim_2d, non_depth, non_arrayed, multi_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32, sample: Z) -> vec4<T> */
    /* fn image_fetch[C : iu32, Z : iu32, F : texel_format](image: image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32, sample: Z) -> vec4<f32> */
    /* fn image_fetch[C : iu32, Z : iu32, F : texel_format](image: image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>, coords: vec3<C>, image_operands: u32, sample: Z) -> vec4<f32> */
    /* fn image_fetch[C : iu32, Z : iu32, F : texel_format](image: image<f32, dim_2d, is_depth, non_arrayed, multi_sampled, sampling_compatible, F, readable>, coords: vec2<C>, image_operands: u32, sample: Z) -> vec4<f32> */
    /* num overloads */ 16,
    /* overloads */ OverloadIndex(107),
  },
  {
    /* [19] */
    /* fn image_gather[T : fiu32, C : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec2<f32>, component: C, image_operands: u32) -> vec4<T> */
    /* fn image_gather[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec2<f32>, component: C, image_operands: u32, const_offset: vec2<Z>) -> vec4<T> */
    /* fn image_gather[T : fiu32, C : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, component: C, image_operands: u32) -> vec4<T> */
    /* fn image_gather[T : fiu32, C : iu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, component: C, image_operands: u32, const_offset: vec2<Z>) -> vec4<T> */
    /* fn image_gather[T : fiu32, C : iu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, component: C, image_operands: u32) -> vec4<T> */
    /* fn image_gather[T : fiu32, C : iu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, component: C, image_operands: u32) -> vec4<T> */
    /* fn image_gather[C : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec2<f32>, component: C, image_operands: u32) -> vec4<f32> */
    /* fn image_gather[C : iu32, Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec2<f32>, component: C, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_gather[C : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, component: C, image_operands: u32) -> vec4<f32> */
    /* fn image_gather[C : iu32, Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, component: C, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_gather[C : iu32, F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, component: C, image_operands: u32) -> vec4<f32> */
    /* fn image_gather[C : iu32, F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, component: C, image_operands: u32) -> vec4<f32> */
    /* num overloads */ 12,
    /* overloads */ OverloadIndex(167),
  },
  {
    /* [20] */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> R */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> R */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec2<R> */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec3<R> */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec3<R> */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_cube, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec2<R> */
    /* fn image_query_size<R : iu32>[T : fiu32, F : texel_format, A : access](image: image<T, dim_cube, non_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec3<R> */
    /* fn image_query_size<R : iu32>[T : fiu32, S : sampled, F : texel_format, A : access](image: image<T, dim_2d, non_depth, non_arrayed, multi_sampled, S, F, A>) -> vec2<R> */
    /* fn image_query_size<R : iu32>[F : texel_format, A : access](image: image<f32, dim_2d, is_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec2<R> */
    /* fn image_query_size<R : iu32>[F : texel_format, A : access](image: image<f32, dim_2d, is_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec3<R> */
    /* fn image_query_size<R : iu32>[F : texel_format, A : access](image: image<f32, dim_cube, is_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec2<R> */
    /* fn image_query_size<R : iu32>[F : texel_format, A : access](image: image<f32, dim_cube, is_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>) -> vec3<R> */
    /* fn image_query_size<R : iu32>[S : sampled, F : texel_format, A : access](image: image<f32, dim_2d, is_depth, non_arrayed, multi_sampled, S, F, A>) -> vec2<R> */
    /* num overloads */ 13,
    /* overloads */ OverloadIndex(154),
  },
  {
    /* [21] */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_1d, non_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> R */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_buffer, non_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> R */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_2d, non_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> vec2<R> */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_2d, non_depth, is_arrayed, single_sampled, S, F, A>, level: L) -> vec3<R> */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_3d, non_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> vec3<R> */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_cube, non_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> vec2<R> */
    /* fn image_query_size_lod<R : iu32>[T : fiu32, L : iu32, S : sampled, F : texel_format, A : access](image: image<T, dim_cube, non_depth, is_arrayed, single_sampled, S, F, A>, level: L) -> vec3<R> */
    /* fn image_query_size_lod<R : iu32>[L : iu32, S : sampled, F : texel_format, A : access](image: image<f32, dim_2d, is_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> vec2<R> */
    /* fn image_query_size_lod<R : iu32>[L : iu32, S : sampled, F : texel_format, A : access](image: image<f32, dim_2d, is_depth, is_arrayed, single_sampled, S, F, A>, level: L) -> vec3<R> */
    /* fn image_query_size_lod<R : iu32>[L : iu32, S : sampled, F : texel_format, A : access](image: image<f32, dim_cube, is_depth, non_arrayed, single_sampled, S, F, A>, level: L) -> vec2<R> */
    /* fn image_query_size_lod<R : iu32>[L : iu32, S : sampled, F : texel_format, A : access](image: image<f32, dim_cube, is_depth, is_arrayed, single_sampled, S, F, A>, level: L) -> vec3<R> */
    /* num overloads */ 11,
    /* overloads */ OverloadIndex(179),
  },
  {
    /* [22] */
    /* fn image_query_levels<Z : iu32>[T : fiu32, D : depth, R : arrayed, S : sampled, F : texel_format, A : access](image: image<T, dim_1d_2d_3d_or_cube, D, R, single_sampled, S, F, A>) -> Z */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(309),
  },
  {
    /* [23] */
    /* fn image_query_samples<Z : iu32>[T : fiu32, D : depth, R : arrayed, S : sampled, F : texel_format, A : access](image: image<T, dim_2d, D, R, multi_sampled, S, F, A>) -> Z */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(310),
  },
  {
    /* [24] */
    /* fn image_read[F : f32_texel_format, A : readable, C : iu32](image: image<f32, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: C, image_operands: u32) -> vec4<f32> */
    /* fn image_read[F : f32_texel_format, A : readable, C : iu32](image: image<f32, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: C, image_operands: u32) -> vec4<f32> */
    /* fn image_read[F : i32_texel_format, A : readable, C : iu32](image: image<i32, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: C, image_operands: u32) -> vec4<i32> */
    /* fn image_read[F : i32_texel_format, A : readable, C : iu32](image: image<i32, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: C, image_operands: u32) -> vec4<i32> */
    /* fn image_read[F : u32_texel_format, A : readable, C : iu32](image: image<u32, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: C, image_operands: u32) -> vec4<u32> */
    /* fn image_read[F : u32_texel_format, A : readable, C : iu32](image: image<u32, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: C, image_operands: u32) -> vec4<u32> */
    /* fn image_read[F : f32_texel_format, A : readable, C : iu32](image: image<f32, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec2<C>, image_operands: u32) -> vec4<f32> */
    /* fn image_read[F : i32_texel_format, A : readable, C : iu32](image: image<i32, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec2<C>, image_operands: u32) -> vec4<i32> */
    /* fn image_read[F : u32_texel_format, A : readable, C : iu32](image: image<u32, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec2<C>, image_operands: u32) -> vec4<u32> */
    /* fn image_read[F : f32_texel_format, A : readable, C : iu32](image: image<f32, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec3<C>, image_operands: u32) -> vec4<f32> */
    /* fn image_read[F : i32_texel_format, A : readable, C : iu32](image: image<i32, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec3<C>, image_operands: u32) -> vec4<i32> */
    /* fn image_read[F : u32_texel_format, A : readable, C : iu32](image: image<u32, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec3<C>, image_operands: u32) -> vec4<u32> */
    /* fn image_read[F : f32_texel_format, A : readable, C : iu32](image: image<f32, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec3<C>, image_operands: u32) -> vec4<f32> */
    /* fn image_read[F : i32_texel_format, A : readable, C : iu32](image: image<i32, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec3<C>, image_operands: u32) -> vec4<i32> */
    /* fn image_read[F : u32_texel_format, A : readable, C : iu32](image: image<u32, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec3<C>, image_operands: u32) -> vec4<u32> */
    /* fn image_read[F : texel_format, T : fiu32, C : iu32, A : readable](image: image<T, dim_subpass, non_depth, non_arrayed, single_sampled, rw_op_compatible, F, A>, coords: vec2<C>) -> vec4<T> */
    /* num overloads */ 16,
    /* overloads */ OverloadIndex(123),
  },
  {
    /* [25] */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: f32, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, bias: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[Z : iu32, F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* num overloads */ 37,
    /* overloads */ OverloadIndex(0),
  },
  {
    /* [26] */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, bias: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, bias: f32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, const_offset: vec2<Z>) -> vec4<f32> */
    /* num overloads */ 17,
    /* overloads */ OverloadIndex(73),
  },
  {
    /* [27] */
    /* fn image_sample_proj_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_proj_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_proj_dref_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_proj_dref_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> f32 */
    /* num overloads */ 4,
    /* overloads */ OverloadIndex(226),
  },
  {
    /* [28] */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: f32, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format, N : num](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[Z : iu32, F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, is_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* num overloads */ 36,
    /* overloads */ OverloadIndex(37),
  },
  {
    /* [29] */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_2d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec2<f32>, ddy: vec2<f32>, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, Z : iu32, F : texel_format](image: sampled_image<image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, ddx: vec3<f32>, ddy: vec3<f32>, const_offset: vec3<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[T : fiu32, F : texel_format](image: sampled_image<image<T, dim_cube, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* fn image_sample_proj_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, is_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> vec4<f32> */
    /* num overloads */ 17,
    /* overloads */ OverloadIndex(90),
  },
  {
    /* [30] */
    /* fn image_sample_proj_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_proj_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_proj_dref_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_proj_dref_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> f32 */
    /* num overloads */ 4,
    /* overloads */ OverloadIndex(230),
  },
  {
    /* [31] */
    /* fn image_sample_dref_implicit_lod[F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_dref_implicit_lod[Z : iu32, F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_dref_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_dref_implicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32) -> f32 */
    /* fn image_sample_dref_implicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32) -> f32 */
    /* num overloads */ 9,
    /* overloads */ OverloadIndex(190),
  },
  {
    /* [32] */
    /* fn image_sample_dref_explicit_lod[F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_dref_explicit_lod[Z : iu32, F : texel_format, N : num](image: sampled_image<image<f32, dim_2d, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec<N, f32>, dref: f32, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_dref_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_dref_explicit_lod[Z : iu32, F : texel_format](image: sampled_image<image<f32, dim_2d, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, lod: f32, const_offset: vec2<Z>) -> f32 */
    /* fn image_sample_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec3<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* fn image_sample_dref_explicit_lod[F : texel_format](image: sampled_image<image<f32, dim_cube, any_depth, is_arrayed, single_sampled, sampling_compatible, F, readable>>, coords: vec4<f32>, dref: f32, image_operands: u32, lod: f32) -> f32 */
    /* num overloads */ 9,
    /* overloads */ OverloadIndex(199),
  },
  {
    /* [33] */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<f32, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, f32_texel_format, writable>, coords: C, texel: vec4<f32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<f32, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, f32_texel_format, writable>, coords: C, texel: vec4<f32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<i32, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, i32_texel_format, writable>, coords: C, texel: vec4<i32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<i32, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, i32_texel_format, writable>, coords: C, texel: vec4<i32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<u32, dim_1d, non_depth, non_arrayed, single_sampled, rw_op_compatible, u32_texel_format, writable>, coords: C, texel: vec4<u32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<u32, dim_buffer, non_depth, non_arrayed, single_sampled, rw_op_compatible, u32_texel_format, writable>, coords: C, texel: vec4<u32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<f32, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, f32_texel_format, writable>, coords: vec2<C>, texel: vec4<f32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<i32, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, i32_texel_format, writable>, coords: vec2<C>, texel: vec4<i32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<u32, dim_2d, non_depth, non_arrayed, single_sampled, rw_op_compatible, u32_texel_format, writable>, coords: vec2<C>, texel: vec4<u32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<f32, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, f32_texel_format, writable>, coords: vec3<C>, texel: vec4<f32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<i32, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, i32_texel_format, writable>, coords: vec3<C>, texel: vec4<i32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<u32, dim_2d, non_depth, is_arrayed, single_sampled, rw_op_compatible, u32_texel_format, writable>, coords: vec3<C>, texel: vec4<u32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<f32, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, f32_texel_format, writable>, coords: vec3<C>, texel: vec4<f32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<i32, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, i32_texel_format, writable>, coords: vec3<C>, texel: vec4<i32>, image_operands: u32) */
    /* fn image_write[C : iu32, F : texel_format, A : access](image: image<u32, dim_3d, non_depth, non_arrayed, single_sampled, rw_op_compatible, u32_texel_format, writable>, coords: vec3<C>, texel: vec4<u32>, image_operands: u32) */
    /* num overloads */ 15,
    /* overloads */ OverloadIndex(139),
  },
  {
    /* [34] */
    /* fn image<I : image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>[T : fiu32, F : texel_format](sampled_image<I>) -> I */
    /* fn image<I : image<T, dim_2d, non_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>>[T : fiu32, F : texel_format](sampled_image<I>) -> I */
    /* fn image[T : fiu32, F : texel_format, I : image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>](sampled_image<I>) -> I */
    /* fn image[T : fiu32, F : texel_format, I : image<T, dim_cube, non_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>](sampled_image<I>) -> I */
    /* fn image[F : texel_format, I : image<f32, dim_2d, is_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>](sampled_image<I>) -> I */
    /* fn image[F : texel_format, I : image<f32, dim_cube, is_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>](sampled_image<I>) -> I */
    /* num overloads */ 6,
    /* overloads */ OverloadIndex(214),
  },
  {
    /* [35] */
    /* fn sampled_image<I : image<T, dim_1d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>[T : fiu32, S : samplers, F : texel_format](I, S) -> sampled_image<I> */
    /* fn sampled_image<I : image<T, dim_2d, non_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>>[T : fiu32, S : samplers, F : texel_format](I, S) -> sampled_image<I> */
    /* fn sampled_image<I : image<T, dim_3d, non_depth, non_arrayed, single_sampled, sampling_compatible, F, readable>>[T : fiu32, S : samplers, F : texel_format](I, S) -> sampled_image<I> */
    /* fn sampled_image<I : image<T, dim_cube, non_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>>[T : fiu32, S : samplers, F : texel_format](I, S) -> sampled_image<I> */
    /* fn sampled_image<I : image<f32, dim_2d, is_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>>[S : samplers, F : texel_format](I, S) -> sampled_image<I> */
    /* fn sampled_image<I : image<f32, dim_cube, is_depth, any_arrayed, single_sampled, sampling_compatible, F, readable>>[S : samplers, F : texel_format](I, S) -> sampled_image<I> */
    /* num overloads */ 6,
    /* overloads */ OverloadIndex(220),
  },
  {
    /* [36] */
    /* fn matrix_times_matrix[T : f32_f16, K : num, C : num, R : num](mat<K, R, T>, mat<C, K, T>) -> mat<C, R, T> */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(311),
  },
  {
    /* [37] */
    /* fn matrix_times_scalar[T : f32_f16, N : num, M : num](mat<N, M, T>, T) -> mat<N, M, T> */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(312),
  },
  {
    /* [38] */
    /* fn matrix_times_vector[T : f32_f16, N : num, M : num](mat<N, M, T>, vec<N, T>) -> vec<M, T> */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(313),
  },
  {
    /* [39] */
    /* fn select[T : scalar](bool, T, T) -> T */
    /* fn select[N : num, T : scalar](bool, vec<N, T>, vec<N, T>) -> vec<N, T> */
    /* fn select[N : num, T : scalar](vec<N, bool>, vec<N, T>, vec<N, T>) -> vec<N, T> */
    /* num overloads */ 3,
    /* overloads */ OverloadIndex(238),
  },
  {
    /* [40] */
    /* fn vector_times_matrix[T : f32_f16, N : num, M : num](vec<N, T>, mat<M, N, T>) -> vec<M, T> */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(314),
  },
  {
    /* [41] */
    /* fn vector_times_scalar[T : f32_f16, N : num](vec<N, T>, T) -> vec<N, T> */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(315),
  },
  {
    /* [42] */
    /* fn normalize[T : f32_f16](T) -> T */
    /* fn normalize[N : num, T : f32_f16](vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(258),
  },
  {
    /* [43] */
    /* fn inverse[T : f32_f16](mat2x2<T>) -> mat2x2<T> */
    /* fn inverse[T : f32_f16](mat3x3<T>) -> mat3x3<T> */
    /* fn inverse[T : f32_f16](mat4x4<T>) -> mat4x4<T> */
    /* num overloads */ 3,
    /* overloads */ OverloadIndex(241),
  },
  {
    /* [44] */
    /* fn sign<R : iu32>[T : iu32](T) -> R */
    /* fn sign<R : iu32>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(260),
  },
  {
    /* [45] */
    /* fn abs<R : iu32>[T : iu32](T) -> R */
    /* fn abs<R : iu32>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(260),
  },
  {
    /* [46] */
    /* fn s_max<R : iu32>[T : iu32, U : iu32](T, U) -> R */
    /* fn s_max<R : iu32>[T : iu32, U : iu32, N : num](vec<N, T>, vec<N, U>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(262),
  },
  {
    /* [47] */
    /* fn s_min<R : iu32>[T : iu32, U : iu32](T, U) -> R */
    /* fn s_min<R : iu32>[T : iu32, U : iu32, N : num](vec<N, T>, vec<N, U>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(262),
  },
  {
    /* [48] */
    /* fn s_clamp<R : iu32>[T : iu32, U : iu32, V : iu32](T, U, V) -> R */
    /* fn s_clamp<R : iu32>[T : iu32, U : iu32, V : iu32, N : num](vec<N, T>, vec<N, U>, vec<N, V>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(264),
  },
  {
    /* [49] */
    /* fn u_max<R : iu32>[T : iu32, U : iu32](T, U) -> R */
    /* fn u_max<R : iu32>[T : iu32, U : iu32, N : num](vec<N, T>, vec<N, U>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(262),
  },
  {
    /* [50] */
    /* fn u_min<R : iu32>[T : iu32, U : iu32](T, U) -> R */
    /* fn u_min<R : iu32>[T : iu32, U : iu32, N : num](vec<N, T>, vec<N, U>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(262),
  },
  {
    /* [51] */
    /* fn u_clamp<R : iu32>[T : iu32, U : iu32, V : iu32](T, U, V) -> R */
    /* fn u_clamp<R : iu32>[T : iu32, U : iu32, V : iu32, N : num](vec<N, T>, vec<N, U>, vec<N, V>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(264),
  },
  {
    /* [52] */
    /* fn find_i_lsb<R : iu32>[T : iu32](T) -> R */
    /* fn find_i_lsb<R : iu32>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(260),
  },
  {
    /* [53] */
    /* fn find_s_msb<R : iu32>[T : iu32](T) -> R */
    /* fn find_s_msb<R : iu32>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(260),
  },
  {
    /* [54] */
    /* fn find_u_msb<R : iu32>[T : iu32](T) -> R */
    /* fn find_u_msb<R : iu32>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(260),
  },
  {
    /* [55] */
    /* fn refract[T : f32_f16](T, T, T) -> T */
    /* fn refract[T : f32_f16, N : num](vec<N, T>, vec<N, T>, T) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(266),
  },
  {
    /* [56] */
    /* fn reflect[T : f32_f16](T, T) -> T */
    /* fn reflect[T : f32_f16, N : num](vec<N, T>, vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(268),
  },
  {
    /* [57] */
    /* fn face_forward[T : f32_f16](T, T, T) -> T */
    /* fn face_forward[T : f32_f16, N : num](vec<N, T>, vec<N, T>, vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(270),
  },
  {
    /* [58] */
    /* fn ldexp[T : f32_f16, U : iu32](T, U) -> T */
    /* fn ldexp[N : num, T : f32_f16, U : iu32](vec<N, T>, vec<N, U>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(272),
  },
  {
    /* [59] */
    /* fn modf[T : f32_f16, S : function_private_workgroup_storage](x: T, i: ptr<S, T, writable>) -> T */
    /* fn modf[T : f32_f16, N : num, S : function_private_workgroup_storage](x: vec<N, T>, i: ptr<S, vec<N, T>, writable>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(274),
  },
  {
    /* [60] */
    /* fn frexp[T : f32_f16, R : iu32, S : function_private_workgroup_storage](x: T, i: ptr<S, R, writable>) -> T */
    /* fn frexp[T : f32_f16, R : iu32, N : num, S : function_private_workgroup_storage](x: vec<N, T>, i: ptr<S, vec<N, R>, writable>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(276),
  },
  {
    /* [61] */
    /* fn bit_count<R : iu32>[T : iu32](T) -> R */
    /* fn bit_count<R : iu32>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(260),
  },
  {
    /* [62] */
    /* fn bit_field_insert[T : iu32](base: T, insert: T, offset: iu32, count: iu32) -> T */
    /* fn bit_field_insert[T : iu32, N : num](base: vec<N, T>, insert: vec<N, T>, offset: iu32, count: iu32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(278),
  },
  {
    /* [63] */
    /* fn bit_field_s_extract[T : iu32](base: T, offset: iu32, count: iu32) -> T */
    /* fn bit_field_s_extract[T : iu32, N : num](base: vec<N, T>, offset: iu32, count: iu32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(280),
  },
  {
    /* [64] */
    /* fn bit_field_u_extract[T : iu32](base: T, offset: iu32, count: iu32) -> T */
    /* fn bit_field_u_extract[T : iu32, N : num](base: vec<N, T>, offset: iu32, count: iu32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(280),
  },
  {
    /* [65] */
    /* fn add<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn add<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [66] */
    /* fn sub<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn sub<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [67] */
    /* fn mul<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn mul<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [68] */
    /* fn s_div<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn s_div<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [69] */
    /* fn s_mod<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn s_mod<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [70] */
    /* fn s_greater_than[A : iu32, B : iu32](A, B) -> bool */
    /* fn s_greater_than[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [71] */
    /* fn s_greater_than_equal[A : iu32, B : iu32](A, B) -> bool */
    /* fn s_greater_than_equal[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [72] */
    /* fn s_less_than[A : iu32, B : iu32](A, B) -> bool */
    /* fn s_less_than[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [73] */
    /* fn s_less_than_equal[A : iu32, B : iu32](A, B) -> bool */
    /* fn s_less_than_equal[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [74] */
    /* fn u_greater_than[A : iu32, B : iu32](A, B) -> bool */
    /* fn u_greater_than[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [75] */
    /* fn u_greater_than_equal[A : iu32, B : iu32](A, B) -> bool */
    /* fn u_greater_than_equal[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [76] */
    /* fn u_less_than[A : iu32, B : iu32](A, B) -> bool */
    /* fn u_less_than[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [77] */
    /* fn u_less_than_equal[A : iu32, B : iu32](A, B) -> bool */
    /* fn u_less_than_equal[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [78] */
    /* fn convert_f_to_s<R : iu32>[T : f32_f16](T) -> R */
    /* fn convert_f_to_s<R : iu32>[T : f32_f16, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(286),
  },
  {
    /* [79] */
    /* fn convert_s_to_f<R : f32_f16>[T : iu32](T) -> R */
    /* fn convert_s_to_f<R : f32_f16>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(288),
  },
  {
    /* [80] */
    /* fn convert_u_to_f<R : f32_f16>[T : iu32](T) -> R */
    /* fn convert_u_to_f<R : f32_f16>[T : iu32, N : num](vec<N, T>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(288),
  },
  {
    /* [81] */
    /* fn bitwise_and<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn bitwise_and<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [82] */
    /* fn bitwise_or<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn bitwise_or<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [83] */
    /* fn bitwise_xor<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn bitwise_xor<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [84] */
    /* fn equal[A : iu32, B : iu32](A, B) -> bool */
    /* fn equal[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [85] */
    /* fn not_equal[A : iu32, B : iu32](A, B) -> bool */
    /* fn not_equal[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, bool> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(284),
  },
  {
    /* [86] */
    /* fn shift_left_logical<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn shift_left_logical<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [87] */
    /* fn shift_right_logical<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn shift_right_logical<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [88] */
    /* fn shift_right_arithmetic<R : iu32>[A : iu32, B : iu32](A, B) -> R */
    /* fn shift_right_arithmetic<R : iu32>[A : iu32, B : iu32, N : num](vec<N, A>, vec<N, B>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(282),
  },
  {
    /* [89] */
    /* fn not<R : iu32>[A : iu32](A) -> R */
    /* fn not<R : iu32>[A : iu32, N : num](vec<N, A>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(290),
  },
  {
    /* [90] */
    /* fn s_negate<R : iu32>[A : iu32](A) -> R */
    /* fn s_negate<R : iu32>[A : iu32, N : num](vec<N, A>) -> vec<N, R> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(290),
  },
  {
    /* [91] */
    /* fn f_mod[T : f32_f16](T, T) -> T */
    /* fn f_mod[T : f32_f16, N : num](vec<N, T>, vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(268),
  },
  {
    /* [92] */
    /* fn outer_product[T : f32_f16, N : num, M : num](vec<N, T>, vec<M, T>) -> mat<M, N, T> */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(316),
  },
  {
    /* [93] */
    /* fn s_dot(u32, u32, u32) -> i32 */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(317),
  },
  {
    /* [94] */
    /* fn u_dot(u32, u32, u32) -> u32 */
    /* num overloads */ 1,
    /* overloads */ OverloadIndex(318),
  },
  {
    /* [95] */
    /* fn cooperative_matrix_load<T : subgroup_matrix<K, S, C, R>>[K : subgroup_matrix_kind, S : fiu32_f16, C : num, R : num](ptr<workgroup_or_storage, S, readable>, u32, u32, u32) -> T */
    /* fn cooperative_matrix_load<T : subgroup_matrix<K, S, C, R>>[K : subgroup_matrix_kind, S : i8, C : num, R : num](ptr<workgroup_or_storage, i32, readable>, u32, u32, u32) -> T */
    /* fn cooperative_matrix_load<T : subgroup_matrix<K, S, C, R>>[K : subgroup_matrix_kind, S : u8, C : num, R : num](ptr<workgroup_or_storage, u32, readable>, u32, u32, u32) -> T */
    /* num overloads */ 3,
    /* overloads */ OverloadIndex(244),
  },
  {
    /* [96] */
    /* fn cooperative_matrix_store[K : subgroup_matrix_kind, S : fiu32_f16, C : num, R : num](ptr<workgroup_or_storage, S, writable>, subgroup_matrix<K, S, C, R>, u32, u32, u32) */
    /* fn cooperative_matrix_store[K : subgroup_matrix_kind, S : i8, C : num, R : num](ptr<workgroup_or_storage, i32, writable>, subgroup_matrix<K, S, C, R>, u32, u32, u32) */
    /* fn cooperative_matrix_store[K : subgroup_matrix_kind, S : u8, C : num, R : num](ptr<workgroup_or_storage, u32, writable>, subgroup_matrix<K, S, C, R>, u32, u32, u32) */
    /* num overloads */ 3,
    /* overloads */ OverloadIndex(247),
  },
  {
    /* [97] */
    /* fn cooperative_matrix_mul_add[T : f16, TR : f32_f16, C : num, R : num, K : num](subgroup_matrix<subgroup_matrix_kind_left, T, K, R>, subgroup_matrix<subgroup_matrix_kind_right, T, C, K>, subgroup_matrix<subgroup_matrix_kind_result, TR, C, R>, u32) -> subgroup_matrix<subgroup_matrix_kind_result, TR, C, R> */
    /* fn cooperative_matrix_mul_add[T : f32, TR : f32, C : num, R : num, K : num](subgroup_matrix<subgroup_matrix_kind_left, T, K, R>, subgroup_matrix<subgroup_matrix_kind_right, T, C, K>, subgroup_matrix<subgroup_matrix_kind_result, TR, C, R>, u32) -> subgroup_matrix<subgroup_matrix_kind_result, TR, C, R> */
    /* fn cooperative_matrix_mul_add[T : iu32, TR : iu32, C : num, R : num, K : num](subgroup_matrix<subgroup_matrix_kind_left, T, K, R>, subgroup_matrix<subgroup_matrix_kind_right, T, C, K>, subgroup_matrix<subgroup_matrix_kind_result, TR, C, R>, u32) -> subgroup_matrix<subgroup_matrix_kind_result, TR, C, R> */
    /* fn cooperative_matrix_mul_add[T : iu8, TR : iu32_iu8, C : num, R : num, K : num](subgroup_matrix<subgroup_matrix_kind_left, T, K, R>, subgroup_matrix<subgroup_matrix_kind_right, T, C, K>, subgroup_matrix<subgroup_matrix_kind_result, TR, C, R>, u32) -> subgroup_matrix<subgroup_matrix_kind_result, TR, C, R> */
    /* num overloads */ 4,
    /* overloads */ OverloadIndex(234),
  },
  {
    /* [98] */
    /* fn group_non_uniform_broadcast[T : scalar](scope: u32, e: T, @const id: u32) -> T */
    /* fn group_non_uniform_broadcast[N : num, T : scalar](scope: u32, e: vec<N, T>, @const id: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(292),
  },
  {
    /* [99] */
    /* fn group_non_uniform_broadcast_first[T : scalar](scope: u32, value: T) -> T */
    /* fn group_non_uniform_broadcast_first[N : num, T : scalar](scope: u32, value: vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(294),
  },
  {
    /* [100] */
    /* fn group_non_uniform_quad_broadcast[T : scalar](scope: u32, e: T, @const id: u32) -> T */
    /* fn group_non_uniform_quad_broadcast[N : num, T : scalar](scope: u32, e: vec<N, T>, @const id: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(292),
  },
  {
    /* [101] */
    /* fn group_non_uniform_quad_swap[T : scalar](scope: u32, e: T, @const dir: u32) -> T */
    /* fn group_non_uniform_quad_swap[N : num, T : scalar](scope: u32, e: vec<N, T>, @const dir: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(296),
  },
  {
    /* [102] */
    /* fn group_non_uniform_shuffle[T : scalar](scope: u32, value: T, id: u32) -> T */
    /* fn group_non_uniform_shuffle[N : num, T : scalar](scope: u32, value: vec<N, T>, id: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(298),
  },
  {
    /* [103] */
    /* fn group_non_uniform_shuffle_xor[T : scalar](scope: u32, value: T, mask: u32) -> T */
    /* fn group_non_uniform_shuffle_xor[N : num, T : scalar](scope: u32, value: vec<N, T>, mask: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(300),
  },
  {
    /* [104] */
    /* fn group_non_uniform_shuffle_down[T : scalar](scope: u32, value: T, delta: u32) -> T */
    /* fn group_non_uniform_shuffle_down[N : num, T : scalar](scope: u32, value: vec<N, T>, delta: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(302),
  },
  {
    /* [105] */
    /* fn group_non_uniform_shuffle_up[T : scalar](scope: u32, value: T, delta: u32) -> T */
    /* fn group_non_uniform_shuffle_up[N : num, T : scalar](scope: u32, value: vec<N, T>, delta: u32) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(302),
  },
  {
    /* [106] */
    /* fn group_non_uniform_s_min[T : iu32](scope: u32, group_operation: u32, value: T) -> T */
    /* fn group_non_uniform_s_min[N : num, T : iu32](scope: u32, group_operation: u32, value: vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(304),
  },
  {
    /* [107] */
    /* fn group_non_uniform_s_max[T : iu32](scope: u32, group_operation: u32, value: T) -> T */
    /* fn group_non_uniform_s_max[N : num, T : iu32](scope: u32, group_operation: u32, value: vec<N, T>) -> vec<N, T> */
    /* num overloads */ 2,
    /* overloads */ OverloadIndex(304),
  },
};

// clang-format on

}  // anonymous namespace

const core::intrinsic::TableData Dialect::kData{
    /* templates */ kTemplates,
    /* type_matcher_indices */ kMatcherIndices,
    /* type_matchers */ kTypeMatchers,
    /* number_matchers */ kNumberMatchers,
    /* parameters */ kParameters,
    /* overloads */ kOverloads,
    /* const_eval_functions */ Empty,
    /* ctor_conv */ Empty,
    /* builtins */ kBuiltins,
    /* binary '+' */ tint::core::intrinsic::kNoOverloads,
    /* binary '-' */ tint::core::intrinsic::kNoOverloads,
    /* binary '*' */ tint::core::intrinsic::kNoOverloads,
    /* binary '/' */ tint::core::intrinsic::kNoOverloads,
    /* binary '%' */ tint::core::intrinsic::kNoOverloads,
    /* binary '^' */ tint::core::intrinsic::kNoOverloads,
    /* binary '&' */ tint::core::intrinsic::kNoOverloads,
    /* binary '|' */ tint::core::intrinsic::kNoOverloads,
    /* binary '&&' */ tint::core::intrinsic::kNoOverloads,
    /* binary '||' */ tint::core::intrinsic::kNoOverloads,
    /* binary '==' */ tint::core::intrinsic::kNoOverloads,
    /* binary '!=' */ tint::core::intrinsic::kNoOverloads,
    /* binary '<' */ tint::core::intrinsic::kNoOverloads,
    /* binary '>' */ tint::core::intrinsic::kNoOverloads,
    /* binary '<=' */ tint::core::intrinsic::kNoOverloads,
    /* binary '>=' */ tint::core::intrinsic::kNoOverloads,
    /* binary '<<' */ tint::core::intrinsic::kNoOverloads,
    /* binary '>>' */ tint::core::intrinsic::kNoOverloads,
    /* unary '!' */ tint::core::intrinsic::kNoOverloads,
    /* unary '~' */ tint::core::intrinsic::kNoOverloads,
    /* unary '-' */ tint::core::intrinsic::kNoOverloads,
    /* unary '*' */ tint::core::intrinsic::kNoOverloads,
    /* unary '&' */ tint::core::intrinsic::kNoOverloads,
};

}  // namespace tint::spirv::intrinsic

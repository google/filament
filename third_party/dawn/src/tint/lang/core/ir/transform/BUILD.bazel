# Copyright 2023 The Dawn & Tint Authors
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# File generated by 'tools/src/cmd/gen' using the template:
#   tools/src/cmd/gen/build/BUILD.bazel.tmpl
#
# To regenerate run: './tools/run gen'
#
#                       Do not modify this file directly
################################################################################

load("//src/tint:flags.bzl", "COPTS")
load("@bazel_skylib//lib:selects.bzl", "selects")
cc_library(
  name = "transform",
  srcs = [
    "add_empty_entry_point.cc",
    "array_length_from_immediate.cc",
    "array_length_from_uniform.cc",
    "bgra8unorm_polyfill.cc",
    "binary_polyfill.cc",
    "binding_remapper.cc",
    "block_decorated_structs.cc",
    "builtin_polyfill.cc",
    "builtin_scalarize.cc",
    "change_immediate_to_uniform.cc",
    "combine_access_instructions.cc",
    "conversion_polyfill.cc",
    "dead_code_elimination.cc",
    "demote_to_helper.cc",
    "direct_variable_access.cc",
    "multiplanar_external_texture.cc",
    "prepare_immediate_data.cc",
    "preserve_padding.cc",
    "prevent_infinite_loops.cc",
    "remove_continue_in_switch.cc",
    "remove_terminator_args.cc",
    "rename_conflicts.cc",
    "robustness.cc",
    "shader_io.cc",
    "signed_integer_polyfill.cc",
    "single_entry_point.cc",
    "std140.cc",
    "substitute_overrides.cc",
    "value_to_let.cc",
    "vectorize_scalar_matrix_constructors.cc",
    "vertex_pulling.cc",
    "zero_init_workgroup_memory.cc",
  ],
  hdrs = [
    "add_empty_entry_point.h",
    "array_length_from_immediate.h",
    "array_length_from_uniform.h",
    "bgra8unorm_polyfill.h",
    "binary_polyfill.h",
    "binding_remapper.h",
    "block_decorated_structs.h",
    "builtin_polyfill.h",
    "builtin_scalarize.h",
    "change_immediate_to_uniform.h",
    "combine_access_instructions.h",
    "conversion_polyfill.h",
    "dead_code_elimination.h",
    "demote_to_helper.h",
    "direct_variable_access.h",
    "multiplanar_external_texture.h",
    "multiplanar_options.h",
    "prepare_immediate_data.h",
    "preserve_padding.h",
    "prevent_infinite_loops.h",
    "remove_continue_in_switch.h",
    "remove_terminator_args.h",
    "rename_conflicts.h",
    "robustness.h",
    "shader_io.h",
    "signed_integer_polyfill.h",
    "single_entry_point.h",
    "std140.h",
    "substitute_overrides.h",
    "value_to_let.h",
    "vectorize_scalar_matrix_constructors.h",
    "vertex_pulling.h",
    "zero_init_workgroup_memory.h",
  ],
  deps = [
    "//src/tint/api/common",
    "//src/tint/lang/core",
    "//src/tint/lang/core/constant",
    "//src/tint/lang/core/intrinsic",
    "//src/tint/lang/core/ir",
    "//src/tint/lang/core/ir/analysis",
    "//src/tint/lang/core/ir/type",
    "//src/tint/lang/core/type",
    "//src/tint/utils",
    "//src/tint/utils/containers",
    "//src/tint/utils/diagnostic",
    "//src/tint/utils/ice",
    "//src/tint/utils/macros",
    "//src/tint/utils/math",
    "//src/tint/utils/memory",
    "//src/tint/utils/rtti",
    "//src/tint/utils/symbol",
    "//src/tint/utils/text",
    "//src/utils",
  ],
  copts = COPTS,
  visibility = ["//visibility:public"],
)
cc_library(
  name = "test",
  alwayslink = True,
  srcs = [
    "add_empty_entry_point_test.cc",
    "array_length_from_immediate_test.cc",
    "array_length_from_uniform_test.cc",
    "bgra8unorm_polyfill_test.cc",
    "binary_polyfill_test.cc",
    "binding_remapper_test.cc",
    "block_decorated_structs_test.cc",
    "builtin_polyfill_test.cc",
    "builtin_scalarize_test.cc",
    "change_immediate_to_uniform_test.cc",
    "combine_access_instructions_test.cc",
    "conversion_polyfill_test.cc",
    "dead_code_elimination_test.cc",
    "demote_to_helper_test.cc",
    "direct_variable_access_test.cc",
    "helper_test.h",
    "multiplanar_external_texture_test.cc",
    "prepare_immediate_data_test.cc",
    "preserve_padding_test.cc",
    "prevent_infinite_loops_test.cc",
    "remove_continue_in_switch_test.cc",
    "remove_terminator_args_test.cc",
    "rename_conflicts_test.cc",
    "robustness_test.cc",
    "signed_integer_polyfill_test.cc",
    "single_entry_point_test.cc",
    "std140_test.cc",
    "substitute_overrides_test.cc",
    "value_to_let_test.cc",
    "vectorize_scalar_matrix_constructors_test.cc",
    "vertex_pulling_test.cc",
    "zero_init_workgroup_memory_test.cc",
  ],
  deps = [
    "//src/tint/api/common",
    "//src/tint/lang/core",
    "//src/tint/lang/core/constant",
    "//src/tint/lang/core/intrinsic",
    "//src/tint/lang/core/ir",
    "//src/tint/lang/core/ir/transform",
    "//src/tint/lang/core/ir/type",
    "//src/tint/lang/core/type",
    "//src/tint/utils",
    "//src/tint/utils/containers",
    "//src/tint/utils/diagnostic",
    "//src/tint/utils/ice",
    "//src/tint/utils/macros",
    "//src/tint/utils/math",
    "//src/tint/utils/memory",
    "//src/tint/utils/rtti",
    "//src/tint/utils/symbol",
    "//src/tint/utils/text",
    "@gtest",
    "//src/utils",
  ],
  copts = COPTS,
  visibility = ["//visibility:public"],
)


# Copyright 2023 The Dawn & Tint Authors
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

################################################################################
# File generated by 'tools/src/cmd/gen' using the template:
#   tools/src/cmd/gen/build/BUILD.gn.tmpl
#
# To regenerate run: './tools/run gen'
#
#                       Do not modify this file directly
################################################################################

import("../../../../../../scripts/dawn_overrides_with_defaults.gni")
import("../../../../../../scripts/tint_overrides_with_defaults.gni")

import("${tint_src_dir}/tint.gni")

if (tint_build_unittests || tint_build_benchmarks) {
  import("//testing/test.gni")
}

libtint_source_set("transform") {
  sources = [
    "add_empty_entry_point.cc",
    "add_empty_entry_point.h",
    "array_length_from_uniform.cc",
    "array_length_from_uniform.h",
    "bgra8unorm_polyfill.cc",
    "bgra8unorm_polyfill.h",
    "binary_polyfill.cc",
    "binary_polyfill.h",
    "binding_remapper.cc",
    "binding_remapper.h",
    "block_decorated_structs.cc",
    "block_decorated_structs.h",
    "builtin_polyfill.cc",
    "builtin_polyfill.h",
    "combine_access_instructions.cc",
    "combine_access_instructions.h",
    "conversion_polyfill.cc",
    "conversion_polyfill.h",
    "demote_to_helper.cc",
    "demote_to_helper.h",
    "direct_variable_access.cc",
    "direct_variable_access.h",
    "multiplanar_external_texture.cc",
    "multiplanar_external_texture.h",
    "prepare_push_constants.cc",
    "prepare_push_constants.h",
    "preserve_padding.cc",
    "preserve_padding.h",
    "prevent_infinite_loops.cc",
    "prevent_infinite_loops.h",
    "remove_continue_in_switch.cc",
    "remove_continue_in_switch.h",
    "remove_terminator_args.cc",
    "remove_terminator_args.h",
    "rename_conflicts.cc",
    "rename_conflicts.h",
    "robustness.cc",
    "robustness.h",
    "shader_io.cc",
    "shader_io.h",
    "single_entry_point.cc",
    "single_entry_point.h",
    "std140.cc",
    "std140.h",
    "substitute_overrides.cc",
    "substitute_overrides.h",
    "value_to_let.cc",
    "value_to_let.h",
    "vectorize_scalar_matrix_constructors.cc",
    "vectorize_scalar_matrix_constructors.h",
    "vertex_pulling.cc",
    "vertex_pulling.h",
    "zero_init_workgroup_memory.cc",
    "zero_init_workgroup_memory.h",
  ]
  deps = [
    "${dawn_root}/src/utils:utils",
    "${tint_src_dir}/api/common",
    "${tint_src_dir}/lang/core",
    "${tint_src_dir}/lang/core/common",
    "${tint_src_dir}/lang/core/constant",
    "${tint_src_dir}/lang/core/intrinsic",
    "${tint_src_dir}/lang/core/ir",
    "${tint_src_dir}/lang/core/ir/analysis",
    "${tint_src_dir}/lang/core/ir/type",
    "${tint_src_dir}/lang/core/type",
    "${tint_src_dir}/utils",
    "${tint_src_dir}/utils/containers",
    "${tint_src_dir}/utils/diagnostic",
    "${tint_src_dir}/utils/ice",
    "${tint_src_dir}/utils/macros",
    "${tint_src_dir}/utils/math",
    "${tint_src_dir}/utils/memory",
    "${tint_src_dir}/utils/result",
    "${tint_src_dir}/utils/rtti",
    "${tint_src_dir}/utils/symbol",
    "${tint_src_dir}/utils/text",
  ]
}
if (tint_build_unittests) {
  tint_unittests_source_set("unittests") {
    sources = [
      "add_empty_entry_point_test.cc",
      "array_length_from_uniform_test.cc",
      "bgra8unorm_polyfill_test.cc",
      "binary_polyfill_test.cc",
      "binding_remapper_test.cc",
      "block_decorated_structs_test.cc",
      "builtin_polyfill_test.cc",
      "combine_access_instructions_test.cc",
      "conversion_polyfill_test.cc",
      "demote_to_helper_test.cc",
      "direct_variable_access_test.cc",
      "helper_test.h",
      "multiplanar_external_texture_test.cc",
      "prepare_push_constants_test.cc",
      "preserve_padding_test.cc",
      "prevent_infinite_loops_test.cc",
      "remove_continue_in_switch_test.cc",
      "remove_terminator_args_test.cc",
      "rename_conflicts_test.cc",
      "robustness_test.cc",
      "single_entry_point_test.cc",
      "std140_test.cc",
      "substitute_overrides_test.cc",
      "value_to_let_test.cc",
      "vectorize_scalar_matrix_constructors_test.cc",
      "vertex_pulling_test.cc",
      "zero_init_workgroup_memory_test.cc",
    ]
    deps = [
      "${dawn_root}/src/utils:utils",
      "${tint_src_dir}:gmock_and_gtest",
      "${tint_src_dir}/api/common",
      "${tint_src_dir}/lang/core",
      "${tint_src_dir}/lang/core/common",
      "${tint_src_dir}/lang/core/constant",
      "${tint_src_dir}/lang/core/intrinsic",
      "${tint_src_dir}/lang/core/ir",
      "${tint_src_dir}/lang/core/ir/transform",
      "${tint_src_dir}/lang/core/ir/type",
      "${tint_src_dir}/lang/core/type",
      "${tint_src_dir}/lang/wgsl",
      "${tint_src_dir}/lang/wgsl/ast",
      "${tint_src_dir}/lang/wgsl/common",
      "${tint_src_dir}/lang/wgsl/features",
      "${tint_src_dir}/lang/wgsl/program",
      "${tint_src_dir}/lang/wgsl/sem",
      "${tint_src_dir}/lang/wgsl/writer/ir_to_program",
      "${tint_src_dir}/lang/wgsl/writer/raise",
      "${tint_src_dir}/utils",
      "${tint_src_dir}/utils/containers",
      "${tint_src_dir}/utils/diagnostic",
      "${tint_src_dir}/utils/ice",
      "${tint_src_dir}/utils/macros",
      "${tint_src_dir}/utils/math",
      "${tint_src_dir}/utils/memory",
      "${tint_src_dir}/utils/result",
      "${tint_src_dir}/utils/rtti",
      "${tint_src_dir}/utils/symbol",
      "${tint_src_dir}/utils/text",
    ]

    if (tint_build_wgsl_reader) {
      deps += [
        "${tint_src_dir}/lang/wgsl/reader",
        "${tint_src_dir}/lang/wgsl/reader/program_to_ir",
      ]
    }

    if (tint_build_wgsl_reader && tint_build_wgsl_writer) {
      sources += [ "direct_variable_access_wgsl_test.cc" ]
    }

    if (tint_build_wgsl_writer) {
      deps += [ "${tint_src_dir}/lang/wgsl/writer" ]
    }
  }
}

tint_fuzz_source_set("fuzz") {
  sources = [
    "add_empty_entry_point_fuzz.cc",
    "array_length_from_uniform_fuzz.cc",
    "bgra8unorm_polyfill_fuzz.cc",
    "binary_polyfill_fuzz.cc",
    "binding_remapper_fuzz.cc",
    "block_decorated_structs_fuzz.cc",
    "builtin_polyfill_fuzz.cc",
    "combine_access_instructions_fuzz.cc",
    "conversion_polyfill_fuzz.cc",
    "demote_to_helper_fuzz.cc",
    "direct_variable_access_fuzz.cc",
    "multiplanar_external_texture_fuzz.cc",
    "preserve_padding_fuzz.cc",
    "remove_terminator_args_fuzz.cc",
    "rename_conflicts_fuzz.cc",
    "robustness_fuzz.cc",
    "std140_fuzz.cc",
    "substitute_overrides_fuzz.cc",
    "value_to_let_fuzz.cc",
    "vectorize_scalar_matrix_constructors_fuzz.cc",
    "zero_init_workgroup_memory_fuzz.cc",
  ]
  deps = [
    "${dawn_root}/src/utils:utils",
    "${tint_src_dir}/api/common",
    "${tint_src_dir}/cmd/fuzz/ir:fuzz",
    "${tint_src_dir}/lang/core",
    "${tint_src_dir}/lang/core/common",
    "${tint_src_dir}/lang/core/constant",
    "${tint_src_dir}/lang/core/ir",
    "${tint_src_dir}/lang/core/ir/transform",
    "${tint_src_dir}/lang/core/type",
    "${tint_src_dir}/utils",
    "${tint_src_dir}/utils/bytes",
    "${tint_src_dir}/utils/containers",
    "${tint_src_dir}/utils/diagnostic",
    "${tint_src_dir}/utils/ice",
    "${tint_src_dir}/utils/macros",
    "${tint_src_dir}/utils/math",
    "${tint_src_dir}/utils/memory",
    "${tint_src_dir}/utils/result",
    "${tint_src_dir}/utils/rtti",
    "${tint_src_dir}/utils/symbol",
    "${tint_src_dir}/utils/text",
  ]
}

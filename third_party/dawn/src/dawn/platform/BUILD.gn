# Copyright 2020 The Dawn & Tint Authors
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("../../../scripts/dawn_overrides_with_defaults.gni")

import("${dawn_root}/scripts/dawn_component.gni")

dawn_component("platform") {
  DEFINE_PREFIX = "DAWN_PLATFORM"

  configs = [ "${dawn_root}/src/dawn/common:internal_config" ]

  sources = [
    "${dawn_root}/include/dawn/platform/DawnPlatform.h",
    "${dawn_root}/include/dawn/platform/dawn_platform_export.h",
    "DawnPlatform.cpp",
    "WorkerThread.cpp",
    "WorkerThread.h",
    "metrics/HistogramMacros.cpp",
    "metrics/HistogramMacros.h",
    "tracing/EventTracer.cpp",
    "tracing/EventTracer.h",
    "tracing/TraceEvent.h",
  ]

  deps = [ "${dawn_root}/src/dawn/common" ]
  if (dawn_use_built_dxc) {
    defines = [ "DAWN_USE_BUILT_DXC" ]
  }

  public_deps = [
    # DawnPlatform.h has #include <webgpu/webgpu.h>
    "${dawn_root}/include/dawn:headers",
    "${dawn_root}/src/dawn/partition_alloc:raw_ptr",
  ]
}

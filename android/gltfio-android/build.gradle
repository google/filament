apply plugin: 'com.android.library'

android {
    buildToolsVersion versions.buildTools
    compileSdkVersion versions.compileSdk
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        externalNativeBuild {
            cmake {
                arguments.addAll(rootProject.ext.cmakeArgs)
                cppFlags.addAll(rootProject.ext.cppFlags)
            }
        }
    }

    flavorDimensions "functionality"
    productFlavors {
        full {
            dimension "functionality"
        }

        lite {
            dimension "functionality"

            externalNativeBuild {
                cmake {
                    arguments.add("-DGLTFIO_LITE=ON")
                }
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jni.srcDirs "src/main/cpp"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // No need to package up the following shared libs, which arise as a side effect of our
    // externalNativeBuild dependencies. When clients pick and choose from project-level gradle
    // dependencies, these shared libs already get pulled in, so we need to avoid the error:
    // "More than one file was found with OS independent path ..."
    packagingOptions {
        exclude 'lib/*/libfilament-jni.so'
    }
}

dependencies {
    implementation deps.androidx.annotations
    implementation project(':filament-android')
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')

afterEvaluate { project ->
    publishing {
        publications {
            fullRelease(MavenPublication) {
                artifactId = POM_ARTIFACT_ID_FULL
                from components.fullRelease
            }

            liteRelease(MavenPublication) {
                artifactId = POM_ARTIFACT_ID_LITE
                from components.liteRelease
            }
        }
    }
}

apply plugin: 'kotlin-android'

android {
    namespace 'com.google.android.filament.utils'

    sourceSets {
        main {
            kotlin.srcDirs += "src/main/java"
        }
    }

    defaultConfig {
        missingDimensionStrategy 'functionality', 'full'
    }
    packagingOptions {
        // No need to package up the following shared libs, which arise as a side effect of our
        // externalNativeBuild dependencies. When clients pick and choose from project-level gradle
        // dependencies, these shared libs already get pulled in, so we need to avoid the error:
        // "More than one file was found with OS independent path ..."
        jniLibs {
            excludes += ['lib/*/libfilament-jni.so', 'lib/*/libgltfio-jni.so']
        }
    }
}

configurations.all { config ->
    // Hack to preserve the version of the dependencies
    if (!config.name.endsWith('Publication')) {
        resolutionStrategy {
            dependencySubstitution {
                substitute(module("com.google.android.filament:gltfio-android:${VERSION_NAME}")).with(project(":gltfio-android"))
                substitute(module("com.google.android.filament:gltfio-android-lite:${VERSION_NAME}")).with(project(":gltfio-android"))
            }
        }
    }
}

dependencies {
    implementation deps.kotlin
    implementation deps.androidx.annotations

    implementation deps.coroutines.core
    implementation deps.coroutines.android

    api project(':filament-android')
    api module("com.google.android.filament:gltfio-android:${VERSION_NAME}")
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                artifactId = POM_ARTIFACT_ID
                from components.release
            }
        }
    }
}

material {
    name : resolveDepth,
    parameters : [
        {
            type : sampler2d,
            name : depth,
            precision: high,
            multisample : true
        }
    ],
    outputs : [
        {
            name : depth,
            target : depth,
            type : float
        }
    ],
    domain : postprocess,
    depthWrite : true,
    depthCulling : false,
    culling: none
}

fragment {
    // resolve depth by keeping the first sample. This is similar to what glBlitFramebuffer() does
    // this material is currently only used on Metal and Vulkan.
    // Technically it should be feature-level 2 material, but that would restrict when we can use
    // it because Vulkan can return feature-level 1 currently (we should fix that).
    void postProcess(inout PostProcessInputs postProcess) {
        highp ivec2 icoord = ivec2(gl_FragCoord.xy);
        postProcess.depth = texelFetch(materialParams_depth, icoord, 0).r;
    }
}

material {
    name : fxaa,
    parameters : [
        {
            type : sampler2d,
            name : colorBuffer,
            precision : medium
        },
        {
            type : float4,
            name : viewport,
            precision : high
        },
        {
            type : float2,
            name : texelSize,
            precision : high
        }
    ],
    depthWrite : false,
    depthCulling : false,
    domain : postprocess,
    variables : [
        vertex
    ]
}

vertex {

    void postProcessVertex(inout PostProcessVertexInputs postProcess) {
        postProcess.vertex.xy = materialParams.viewport.xy + postProcess.normalizedUV * materialParams.viewport.zw;
        postProcess.vertex.xy = uvToRenderTargetUV(postProcess.vertex.xy);
    }

}

fragment {

#include "fxaa.fs"

    void postProcess(inout PostProcessInputs postProcess) {
        // variable_vertex is already interpolated to pixel center by the GPU
        highp vec2 texelCenter    = variable_vertex.xy;
        highp vec2 texelMaxCorner = variable_vertex.xy + materialParams.texelSize * 0.5;
        highp vec2 texelMinCorner = variable_vertex.xy - materialParams.texelSize * 0.5;

        vec4 color = fxaa(
                texelCenter,
                vec4(texelMinCorner, texelMaxCorner),
                materialParams_colorBuffer,
                materialParams.texelSize,           // FxaaFloat4 fxaaConsoleRcpFrameOpt,
                2.0 * materialParams.texelSize,     // FxaaFloat4 fxaaConsoleRcpFrameOpt2,
                8.0,                                // FxaaFloat fxaaConsoleEdgeSharpness,
#if defined(G3D_FXAA_PATCHES) && G3D_FXAA_PATCHES == 1
                0.08,                               // FxaaFloat fxaaConsoleEdgeThreshold,
#else
                0.125,                              // FxaaFloat fxaaConsoleEdgeThreshold,
#endif
                0.04                                // FxaaFloat fxaaConsoleEdgeThresholdMin
        );
#if POST_PROCESS_OPAQUE
        color.a = 1.0;
#endif
        postProcess.color = color;
    }

}

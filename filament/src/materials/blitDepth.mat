material {
    name : blitDepth,
    parameters : [
        {
            type : sampler2d,
            name : depth,
            precision: medium
        },
        {
            type : float4,
            name : viewport,
            precision: high
        }
    ],
    outputs : [
        {
            name : depth,
            target : depth,
            type : float
        }
    ],    
    variables : [
        vertex
    ],
    culling: none,
    depthWrite : true,
    depthCulling : false,
    domain: postprocess,
}

vertex {
    void postProcessVertex(inout PostProcessVertexInputs postProcess) {
        postProcess.vertex.xy = materialParams.viewport.xy + postProcess.normalizedUV * materialParams.viewport.zw;
        postProcess.vertex.xy = uvToRenderTargetUV(postProcess.vertex.xy);
    }
}

fragment {
    void postProcess(inout PostProcessInputs postProcess) {
        postProcess.depth = textureLod(materialParams_depth, variable_vertex.xy, 0.0).r;
    }
}

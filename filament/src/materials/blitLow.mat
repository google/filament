material {
    name : blitLow,
    parameters : [
        {
            type : sampler2d,
            name : color,
            precision: medium
        },
        {
            type : float4,
            name : resolution,
            precision: high
        },
        {
            type : float4,
            name : viewport,
            precision: high
        }
    ],
    variables : [
        vertex
    ],
    depthWrite : false,
    depthCulling : false,
    domain: postprocess
}

vertex {
    void postProcessVertex(inout PostProcessVertexInputs postProcess) {
        postProcess.vertex.xy = materialParams.viewport.xy + postProcess.normalizedUV * materialParams.viewport.zw;
        postProcess.vertex.xy = uvToRenderTargetUV(postProcess.vertex.xy);
    }
}

fragment {
    void postProcess(inout PostProcessInputs postProcess) {
        postProcess.color = textureLod(materialParams_color, variable_vertex.xy, 0.0);
    }
}

